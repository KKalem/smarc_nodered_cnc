[
    {
        "id": "072468ee5a218dc0",
        "type": "tab",
        "label": "Robot Info",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "65c60c3b274f73e3",
        "type": "tab",
        "label": "Map",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "118dfccac2ca8a7d",
        "type": "tab",
        "label": "Plans",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "426a5003775714f9",
        "type": "tab",
        "label": "BT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "762b3e4e742fe2ea",
        "type": "tab",
        "label": "Tracks",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fc0b4b3d97bcee3e",
        "type": "tab",
        "label": "Markers",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "270280acb5c31a68",
        "type": "tab",
        "label": "Chart",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2e13c73254d13882",
        "type": "tab",
        "label": "I/O",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d138c3c5017744fe",
        "type": "tab",
        "label": "Config",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e102b211ecdda64d",
        "type": "tab",
        "label": "Chat",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1301e8ab7fdd3e72",
        "type": "mqtt-broker",
        "name": "mqtt_broker",
        "broker": "broker",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "71f95dd3ceeb2145",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Command and Conquer Subs",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "icon",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 40,
                "sy": 40,
                "gx": 2,
                "gy": 2,
                "cx": 2,
                "cy": 2,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "014f9035e48813bb",
        "type": "ui_tab",
        "name": "Home",
        "icon": "fa-gear",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a48b13904097fb6a",
        "type": "ui_group",
        "name": "Robot Info",
        "tab": "014f9035e48813bb",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9f2da61.3353758",
        "type": "ui_group",
        "name": "Flight",
        "tab": "d6d3c358.5fb46",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "d6d3c358.5fb46",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "81d4dedb195938c4",
        "type": "ui_group",
        "name": "BT State",
        "tab": "014f9035e48813bb",
        "order": 4,
        "disp": true,
        "width": "9",
        "collapse": true,
        "className": ""
    },
    {
        "id": "542b5325cf729b8f",
        "type": "ui_group",
        "name": "Map",
        "tab": "014f9035e48813bb",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a891e5f5f2effe35",
        "type": "ui_group",
        "name": "Plans",
        "tab": "014f9035e48813bb",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c68132315359e81c",
        "type": "ui_group",
        "name": "Tracks",
        "tab": "014f9035e48813bb",
        "order": 6,
        "disp": true,
        "width": "9",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ba1fb12713836940",
        "type": "ui_group",
        "name": "Chat",
        "tab": "014f9035e48813bb",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f5cc24c294e35249",
        "type": "ui_group",
        "name": "Charts",
        "tab": "014f9035e48813bb",
        "order": 7,
        "disp": true,
        "width": 18,
        "collapse": true,
        "className": ""
    },
    {
        "id": "48418b79.0f5834",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "ca2272c3.e8396",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "d9bf7560.df5e58",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "d9bf7560.df5e58",
        "type": "ui_tab",
        "name": "Test",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "58bfc9cc19b0c4cd",
        "type": "ui_group",
        "name": "I/O",
        "tab": "014f9035e48813bb",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "11c21897a7ad9fb5",
        "type": "ui_group",
        "name": "Markers",
        "tab": "014f9035e48813bb",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8bef5f2f94b4f7d2",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "a48b13904097fb6a",
        "order": 12,
        "width": 3,
        "height": 1
    },
    {
        "id": "f2e136120b9b3c9a",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "a48b13904097fb6a",
        "order": 13,
        "width": 6,
        "height": 1
    },
    {
        "id": "c15fa905f12c9f1b",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "a891e5f5f2effe35",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b4cdf20da1355b8",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "a891e5f5f2effe35",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "89a4b8474c1c0734",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "a891e5f5f2effe35",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "468fda621560b78f",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "81d4dedb195938c4",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "338aeed75b5940f6",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "81d4dedb195938c4",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "22109d89af811acd",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "81d4dedb195938c4",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "6485cfa658391b22",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "c68132315359e81c",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "7d0815d79a480207",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "ba1fb12713836940",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "15f2fb2a06022aec",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "ba1fb12713836940",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "c61f8184fbeb5dbc",
        "type": "ui_spacer",
        "z": "2e13c73254d13882",
        "name": "spacer",
        "group": "58bfc9cc19b0c4cd",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "a04b59e608979f6a",
        "type": "ui_list",
        "z": "072468ee5a218dc0",
        "group": "a48b13904097fb6a",
        "name": "List of robots",
        "order": 1,
        "width": 6,
        "height": 4,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 610,
        "y": 520,
        "wires": [
            [
                "8d60954c80270a11"
            ]
        ]
    },
    {
        "id": "b17ab9737c48ebe8",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "make ui_list config from robot_states",
        "func": "list_config = []\nrobot_states = global.get(\"robot_states\")\nfor(const robot_name in robot_states){\n    robot_state = robot_states[robot_name]\n    since_last_update = (Date.now() - robot_state.last_update)/1000\n    \n    if(since_last_update > 10*60){\n        description_str = \"⌚ >10m ago\"\n    }else{\n        description_str = \"⌚ \"+ since_last_update.toFixed(2) + \"s ago\"\n    }\n    \n    \n    if(since_last_update > 10*60){\n        icon = 'fa-deaf'\n        color = global.get(\"gui.colors.old\")\n    }else{\n        icon = 'fa-feed'\n        color = global.get(\"gui.colors.active\")\n    }\n    \n    if(robot_state.gui.selected){\n        icon = 'fa-eye'\n        color = global.get(\"gui.colors.selected\")\n    }\n    \n    \n    list_item = {\n        title: \"<font color=\" + color +\">\" + robot_name,\n        description: \"<font color=\" + color +\">\" + description_str,\n        icon_name: icon\n    }\n    list_config.push(list_item)\n}\nreturn {payload:list_config}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 520,
        "wires": [
            [
                "a04b59e608979f6a"
            ]
        ]
    },
    {
        "id": "4a4d95ebe5f4a0a2",
        "type": "inject",
        "z": "072468ee5a218dc0",
        "name": "0.2",
        "props": [],
        "repeat": "0.2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "573d0d0f99f72b4b"
            ]
        ]
    },
    {
        "id": "8d60954c80270a11",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "select robot",
        "func": "robot_states = global.get(\"robot_states\")\n\n// set all to false\nfor(const robot_name in robot_states){\n    robot_states[robot_name].gui.selected = false\n}\n\n// set clicked to true\ntitle = msg.payload.title\n// strip the html color part\nclicked_robot_name = title.slice(title.indexOf(\">\")+1)\n\nrobot_states[clicked_robot_name].gui.selected = true\nglobal.set(\"robot_states\", robot_states)\nglobal.set(\"gui.selected_robot_name\", clicked_robot_name)\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 520,
        "wires": []
    },
    {
        "id": "0a4f4cb54557ce2f",
        "type": "ui_template",
        "z": "072468ee5a218dc0",
        "group": "9f2da61.3353758",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" href=\"/flight/css/flightindicators.css\"/>\n<script src=\"/flight/js/jquery.flightindicators.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1060,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2e8781f4b35114a4",
        "type": "ui_template",
        "z": "072468ee5a218dc0",
        "group": "a48b13904097fb6a",
        "name": "Roll, Pitch, Heading",
        "order": 2,
        "width": 6,
        "height": 5,
        "format": "<!--<div><span id=\"attitude\"></span><span id=\"heading\"></span></div> -->\n<div><span id=\"attitude\"></span></div><!--<span id=\"heading\"></span></div> -->\n\n<script>\n(function(scope) {\n    var options = {\n    \tsize : 180,\t\t\t\t// Sets the size in pixels of the indicator (square)\n    \troll : 0,\t\t\t\t// Roll angle in degrees for an attitude indicator\n    \tpitch : 0,\t\t\t\t// Pitch angle in degrees for an attitude indicator\n    \theading: 0,\t\t\t\t// Heading angle in degrees for an heading indicator\n    \tvario: 0,\t\t\t\t// Variometer in 1000 feets/min for the variometer indicator\n    \tairspeed: 0,\t\t\t// Air speed in knots for an air speed indicator\n    \taltitude: 0,\t\t\t// Altitude in feets for an altimeter indicator\n    \tpressure: 1000,\t\t\t// Pressure in hPa for an altimeter indicator\n    \tshowBox : false,\t\t\t// Sets if the outer squared box is visible or not (true or false)\n    \timg_directory : '/flight/img/'\t// The directory where the images are saved to\n    }\n    var atti = $.flightIndicator('#attitude', 'attitude',options);\n    var heading = $.flightIndicator('#heading', 'heading',options);\n    var speed = $.flightIndicator('#airspeed', 'airspeed',options);\n    scope.$watch('msg', function(msg) {\n        if (msg) {\n          if(msg.topic == \"roll\"){\n              atti.setRoll(msg.payload)\n          }\n          if(msg.topic == \"pitch\"){\n              atti.setPitch(-msg.payload)\n          }\n          if(msg.topic == \"heading\"){\n              heading.setHeading(msg.payload)\n          }\n          if(msg.topic == \"speed\"){\n              speed.setAirSpeed(msg.payload)\n          }\n          \n        }\n  });\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "c375e4a5e57177ab",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "[roll, pitch, heading]",
        "func": "if(msg){\n    return [\n        {topic:\"roll\", payload:msg.base.roll},\n        {topic:\"pitch\", payload:msg.base.pitch},\n        {topic:\"heading\", payload:msg.base.heading}\n        ]\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 720,
        "wires": [
            [
                "2e8781f4b35114a4"
            ],
            [
                "2e8781f4b35114a4"
            ],
            [
                "2e8781f4b35114a4"
            ]
        ]
    },
    {
        "id": "971e5bcf85bd8530",
        "type": "inject",
        "z": "072468ee5a218dc0",
        "name": "1",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "b17ab9737c48ebe8"
            ]
        ]
    },
    {
        "id": "573d0d0f99f72b4b",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "Selected Robot State",
        "func": "gui_state = global.get(\"gui\")\nselected_robot_name = gui_state.selected_robot_name\nrobot_states = global.get(\"robot_states\")\n\nif(!(selected_robot_name in robot_states)){\n    return\n}\n\nreturn robot_states[selected_robot_name]\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 720,
        "wires": [
            [
                "c375e4a5e57177ab",
                "216163265f4ce78b",
                "7d7f737ccec8bdd1",
                "5ccaf5f3bf5ae5cf",
                "828367982cce7ef2",
                "14a23ba06f41f8b0",
                "1819cd4f565ef740"
            ]
        ]
    },
    {
        "id": "216163265f4ce78b",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "[vbs, lcg, tcg]",
        "func": "if(msg){\n    return [\n        {topic:\"vbs\", payload:msg.base.vbs},\n        {topic:\"lcg\", payload:msg.base.lcg},\n        {topic:\"tcg\", payload:msg.base.tcg},\n        ]\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 800,
        "wires": [
            [
                "4e4363d933c20d6c"
            ],
            [
                "656a52f66d5d0bda"
            ],
            [
                "d0bc35b89669966d"
            ]
        ]
    },
    {
        "id": "7d7f737ccec8bdd1",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "[T1, T2]",
        "func": "if(msg){\n    return [\n        {topic:\"t1\", payload:msg.base.t1},\n        {topic:\"t2\", payload:msg.base.t2}\n        ]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 900,
        "wires": [
            [
                "edb7322d84e1824d"
            ],
            [
                "5c9b93966cd3ce1c"
            ]
        ]
    },
    {
        "id": "4e4363d933c20d6c",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "VBS",
        "group": "a48b13904097fb6a",
        "order": 6,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "VBS",
        "label": "%",
        "format": "{{value | number:2}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 850,
        "y": 760,
        "wires": []
    },
    {
        "id": "656a52f66d5d0bda",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "LCG",
        "group": "a48b13904097fb6a",
        "order": 9,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "LCG",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 850,
        "y": 800,
        "wires": []
    },
    {
        "id": "edb7322d84e1824d",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "T1",
        "group": "a48b13904097fb6a",
        "order": 7,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "T1",
        "label": "rpm",
        "format": "{{value | number:1}}",
        "min": "-2000",
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "-800",
        "seg2": "800",
        "className": "",
        "x": 850,
        "y": 880,
        "wires": []
    },
    {
        "id": "5c9b93966cd3ce1c",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "T2",
        "group": "a48b13904097fb6a",
        "order": 8,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "T2",
        "label": "rpm",
        "format": "{{value | number:1}}",
        "min": "-2000",
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "-800",
        "seg2": "800",
        "className": "",
        "x": 850,
        "y": 920,
        "wires": []
    },
    {
        "id": "d0bc35b89669966d",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "TCG",
        "group": "a48b13904097fb6a",
        "order": 10,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "TCG",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 850,
        "y": 840,
        "wires": []
    },
    {
        "id": "c50d772c522ec5c1",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "lat_lon",
        "topic": "smarc/+/dr/lat_lon",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "e58d020e0faf117d",
                "a7de6573427c3182"
            ]
        ]
    },
    {
        "id": "d8a229ed73bf1a50",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Yaw",
        "topic": "smarc/+/dr/yaw",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 160,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "d933ebc2598c89a7",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Depth",
        "topic": "smarc/+/dr/depth",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "ce5f3fc1415b3d44",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Roll",
        "topic": "smarc/+/dr/roll",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "f1f6aa8630b2459f",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Pitch",
        "topic": "smarc/+/dr/pitch",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 160,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "6bc6d108042d5433",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "VBS_fb",
        "topic": "smarc/+/core/vbs_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 240,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "1e257bc81da80283",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "LCG_fb",
        "topic": "smarc/+/core/lcg_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "cb767c1ced5d8bfa",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "T1_fb",
        "topic": "smarc/+/core/thruster1_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 240,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "b7d61f1afee897a8",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "T2_fb",
        "topic": "smarc/+/core/thruster2_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 280,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "5ab4d2fba4e40e73",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "batt",
        "topic": "smarc/+/core/battery",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "3ef59b0e6f35a957",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "gps",
        "topic": "smarc/+/core/gps",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "88437af12ac3ebb4",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Altitude",
        "topic": "smarc/+/dr/altitude",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "5c17640c744c8c15",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "goto_wp_goal",
        "topic": "smarc/+/bt/last_wp",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 360,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "73e7fa1d9b7b8bc2",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "bt tip",
        "topic": "smarc/+/bt/tip",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 360,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "1447262162547810",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "livewp enable",
        "topic": "smarc/+/bt/live_wp/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 400,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "9fdc56fc7a754fcd",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "algae enable",
        "topic": "smarc/+/bt/algae_farm/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 400,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "a0a635a67725ceec",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "bt heartbeat",
        "topic": "smarc/+/bt/heartbeat",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 490,
        "y": 360,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "16ac9c75fa3b93ca",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "bt missioncontrol",
        "topic": "smarc/+/bt/mission_control",
        "qos": "2",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 540,
        "y": 400,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "2a5530edfa53f040",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "guiwp enable",
        "topic": "smarc/+/bt/gui_wp/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "e58d020e0faf117d",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "update robot state",
        "func": "function to_deg(d){\n    deg = d * (180/Math.PI);\n    deg = deg%360;\n    return deg;\n}\n\nfunction to_northing(d){\n    h = Math.PI/2 - d;\n    return to_deg(h);\n}\n\nfunction new_robot_state(robot_name){\n    return {\n        \"last_update\":0,\n        \"base\": {\n            \"name\": robot_name,\n            \"lat\": null,\n            \"lon\": null,\n            \"utm_x\": null,\n            \"utm_y\": null,\n            \"utm_z\":null,\n            \"heading\": 0,\n            \"roll\": 0,\n            \"pitch\": 0,\n            \"depth\": 0,\n            \"altitude\": 0,\n            \"vbs\": 0,\n            \"lcg\": 0,\n            \"tcg\": 0,\n            \"t1\": 0,\n            \"t2\": 0,\n            \"batt_v\": 0,\n            \"batt_percent\":0,\n            \"gps_lat\": null,\n            \"gps_lon\": null\n        },\n        \"bt\": {\n            \"tip\": {\n                \"name\": \"???\",\n                \"message\": \"\",\n                \"status\": \"???\"\n            },\n            \"algae_farm_enable\": false,\n            \"live_wp_enable\": false,\n            \"gui_wp_enable\": false,\n            \"current_wp\": {},\n            \"current_plan\": {},\n            \"last_heartbeat\": null,\n            \"track_list\":[],\n            \"bt_cmd\":null\n        },\n        \"gui\": {\n            \"selected\": false,\n            \"is_old\":false,\n            \"bt_tip_log\":[],\n            \"batt_v_minmax\":[9999,-1],\n            \"dr\":{\n                \"name\": robot_name,\n                \"label\": robot_name,\n                \"tooltip\": robot_name,\n                \"lat\": null,\n                \"lon\": null,\n                \"heading\": 0,\n                \"layer\": robot_name,\n                \"icon\": \"ship\",\n                \"color\": global.get(\"gui.colors.active\"),\n                \"iconColor\": global.get(\"gui.colors.active\")\n            },\n            \"gps\":{\n                \"name\": robot_name+\"_gps\",\n                \"tooltip\": robot_name,\n                \"lat\": null,\n                \"lon\": null,\n                \"layer\": robot_name,\n                \"icon\": \"satellite\",\n                \"color\": global.get(\"gui.colors.active\"),\n                \"iconColor\": global.get(\"gui.colors.active\"),\n            },\n        }\n    }\n}\n\n// each mqtt_in node also emits the entire topic\n// so we can switch robot name and which topic it is coming from\nconst [smarc, robot_name, ...topic_parts] = msg.topic.split('/');\nmqtt_topic = topic_parts.join(\"/\")\n\n// then try to get this robot from the list of vehicles\n// if its not there, construct an empty state object\nrobot_states = global.get(\"robot_states\")\n\nif(!(robot_states)){\n    global.set(\"robot_states\", {})\n}\n\nif(!(robot_name in robot_states)){\n    robot_states[robot_name] = new_robot_state(robot_name)\n}\n\nrobot_state = robot_states[robot_name]\n\n\nrobot_state.last_update = Date.now()\n\npayload = msg.payload\nswitch(mqtt_topic){\n    case \"dr/lat_lon\":\n        robot_state.base.lat = payload.latitude;\n        robot_state.base.lon = payload.longitude;\n        robot_state.gui.dr.lat = payload.latitude;\n        robot_state.gui.dr.lon = payload.longitude;\n        break;\n        \n    case \"dr/utm\":\n        robot_state.base.utm_x = payload.utm.x;\n        robot_state.base.utm_y = payload.utm.y;\n        robot_state.base.utm_z = payload.utm.z;\n        break\n        \n    case \"dr/yaw\":\n        hdg = to_northing(payload.data)\n        robot_state.base.heading = hdg;\n        robot_state.gui.dr.heading = hdg;\n        break;\n        \n    case \"dr/roll\":\n        robot_state.base.roll = to_deg(payload.data);\n        break;\n        \n    case \"dr/pitch\":\n        robot_state.base.pitch = to_deg(payload.data);\n        break;\n        \n    case \"dr/depth\":\n        robot_state.base.depth = payload.data;\n        break;\n\n    case \"dr/altitude\":\n        robot_state.base.altitude = payload.data;\n        break;        \n        \n    case \"core/vbs_fb\":\n        robot_state.base.vbs = payload.value;\n        break;\n        \n    case \"core/lcg_fb\":\n        robot_state.base.lcg = payload.value;\n        break;\n        \n    case \"core/thruster1_fb\":\n        robot_state.base.t1 = payload.rpm.rpm;\n        break;\n        \n    case \"core/thruster2_fb\":\n        robot_state.base.t2 = payload.rpm.rpm;\n        break;\n        \n    case \"core/battery\":\n        robot_state.base.batt_v = payload.voltage;\n        robot_state.base.batt_percent = payload.percentage;\n        break;\n        \n    case \"core/gps\":\n        robot_state.base.gps_lat = payload.latitude;\n        robot_state.base.gps_lon = payload.longitude;\n        robot_state.gui.gps.lat = payload.latitude;\n        robot_state.gui.gps.lon = payload.longitude;\n        break;\n        \n    case \"bt/last_wp\":\n        robot_state.bt.current_wp = payload;\n        break;\n        \n    case \"bt/tip\":\n        robot_state.bt.tip.name = payload.name;\n        robot_state.bt.tip.message = payload.message;\n        status_str = {\n            0:\"unknown\",\n            1:\"invalid\",\n            2:\"running\",\n            3:\"success\",\n            4:\"failure\"\n        }\n        robot_state.bt.tip.status = status_str[payload.status]\n        break;\n        \n    case \"bt/live_wp/enable\":\n        robot_state.bt.live_wp_enable = payload.data;\n        break;\n        \n    case \"bt/algae_farm/enable\":\n        robot_state.bt.algae_farm_enable = payload.data;\n        break;\n        \n    case \"bt/gui_wp/enable\":\n        robot_state.bt.gui_wp_enable = payload.data;\n        break;\n        \n    case \"bt/heartbeat\":\n        robot_state.bt.last_heartbeat = Date.now()\n        break;\n        \n    case \"bt/mission_control\":\n        if(payload.command == 5){ // is_feedback\n            robot_state.bt.current_plan = payload\n        }\n        break;\n        \n    case \"bt/bt_cmd\":\n        if(payload.msg_type == 1){ // is_feedback\n            fb = JSON.parse(payload.fb_json)\n            robot_state.bt.bt_cmd = fb\n        }\n        break;\n}",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "9a4668d9403279bb",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "batt_percent",
        "group": "a48b13904097fb6a",
        "order": 5,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Battery",
        "label": "%",
        "format": "{{value | number:2}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 870,
        "y": 960,
        "wires": []
    },
    {
        "id": "5ccaf5f3bf5ae5cf",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "Batt %",
        "func": "if(msg.base.batt_percent < 1){\n    percent = msg.base.batt_percent * 100\n}else{\n    percent = msg.base.batt_percent\n}\nreturn {topic:\"batt_percent\", payload:percent}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 960,
        "wires": [
            [
                "9a4668d9403279bb"
            ]
        ]
    },
    {
        "id": "0ad56f79c71f0cc7",
        "type": "inject",
        "z": "072468ee5a218dc0",
        "name": "deploy",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 910,
        "y": 220,
        "wires": [
            [
                "92a2d6eb5f8e7b77"
            ]
        ]
    },
    {
        "id": "92a2d6eb5f8e7b77",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "reset robot_states on deploy",
        "rules": [
            {
                "t": "set",
                "p": "robot_states",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "828367982cce7ef2",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "Unselect if old, select on reconnect",
        "func": "if(msg){\n    robot_state = msg\n    since_last_update = (Date.now() - robot_state.last_update)/1000\n    gui_key = \"robot_states['\"+robot_state.base.name+\"'].gui\"\n    \n    if(since_last_update > 2*60){\n        global.set(gui_key+\".is_old\", true)\n        global.set(gui_key+\".selected\", false)\n        global.set(gui_key+\".dr.color\", global.get(\"gui.colors.old\"))\n        global.set(gui_key+\".dr.iconColor\", global.get(\"gui.colors.old\"))\n        global.set(gui_key+\".gps.color\", global.get(\"gui.colors.old\"))\n        global.set(gui_key+\".gps.iconColor\", global.get(\"gui.colors.old\"))\n        global.set(gui_key+\".dr.label\", \"\")\n        return {enabled:false}\n    }\n    \n    if(since_last_update > 60){\n        global.set(gui_key+\".selected\", false)\n        global.set(gui_key+\".dr.color\", global.get(\"gui.colors.active\"))\n        global.set(gui_key+\".dr.iconColor\", global.get(\"gui.colors.active\"))\n        global.set(gui_key+\".gps.color\", global.get(\"gui.colors.active\"))\n        global.set(gui_key+\".gps.iconColor\", global.get(\"gui.colors.active\"))\n        global.set(gui_key+\".dr.label\", \"\")\n        global.set(gui_key+\".is_old\", false)\n    }else{\n        global.set(gui_key+\".selected\", true)\n        global.set(gui_key+\".dr.color\", global.get(\"gui.colors.selected\"))\n        global.set(gui_key+\".dr.iconColor\", global.get(\"gui.colors.selected\"))\n        global.set(gui_key+\".gps.color\", global.get(\"gui.colors.selected\"))\n        global.set(gui_key+\".gps.iconColor\", global.get(\"gui.colors.selected\"))\n        global.set(gui_key+\".dr.label\", robot_state.base.name)\n        global.set(gui_key+\".is_old\", false)\n    }\n    return {enabled:true}\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 640,
        "wires": [
            [
                "cdf2cf72778b09da"
            ]
        ]
    },
    {
        "id": "b486adbab9a480eb",
        "type": "link in",
        "z": "072468ee5a218dc0",
        "name": "toggle readouts",
        "links": [
            "cf8fbcc8cd92e83a"
        ],
        "x": 345,
        "y": 900,
        "wires": [
            [
                "2e8781f4b35114a4",
                "4e4363d933c20d6c",
                "656a52f66d5d0bda",
                "d0bc35b89669966d",
                "edb7322d84e1824d",
                "5c9b93966cd3ce1c",
                "9a4668d9403279bb"
            ]
        ]
    },
    {
        "id": "27d98d0f695deeec",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "toggle readouts",
        "info": "",
        "x": 240,
        "y": 900,
        "wires": []
    },
    {
        "id": "cf8fbcc8cd92e83a",
        "type": "link out",
        "z": "072468ee5a218dc0",
        "name": "",
        "mode": "link",
        "links": [
            "b486adbab9a480eb",
            "dee9d1fab2fcec69",
            "4b6e527791532f8d",
            "31309c347c995d7a"
        ],
        "x": 1035,
        "y": 660,
        "wires": []
    },
    {
        "id": "4eab10166ad7a6f6",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "toggle readouts",
        "info": "",
        "x": 1140,
        "y": 660,
        "wires": []
    },
    {
        "id": "cdf2cf72778b09da",
        "type": "delay",
        "z": "072468ee5a218dc0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 930,
        "y": 640,
        "wires": [
            [
                "cf8fbcc8cd92e83a",
                "e6538c33549e61c2"
            ]
        ]
    },
    {
        "id": "94c5c6015b1e339c",
        "type": "utm",
        "z": "072468ee5a218dc0",
        "name": "",
        "precision": "5",
        "x": 730,
        "y": 140,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "a7de6573427c3182",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "prep for utm",
        "func": "parts = msg.topic.split(\"/\")\nparts[parts.length-1] = \"utm\"\ntopic = parts.join(\"/\")\n\nreturn {payload:{\n    lat:msg.payload.latitude, \n    lon:msg.payload.longitude},\n    topic: topic\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 140,
        "wires": [
            [
                "94c5c6015b1e339c"
            ]
        ]
    },
    {
        "id": "14a23ba06f41f8b0",
        "type": "link out",
        "z": "072468ee5a218dc0",
        "name": "Selected robot state",
        "mode": "link",
        "links": [
            "62118d116054aad4",
            "814ec3d53136b7f9",
            "d221a7eb9bcfe9e9",
            "1ab37c56c331acd7"
        ],
        "x": 575,
        "y": 600,
        "wires": []
    },
    {
        "id": "c36742fb82bd720b",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "Selected robot state",
        "info": "",
        "x": 690,
        "y": 600,
        "wires": []
    },
    {
        "id": "20a03f2b48cc1e97",
        "type": "ui_text",
        "z": "072468ee5a218dc0",
        "group": "a48b13904097fb6a",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "depth text",
        "label": "Depth:",
        "format": "{{msg.payload | number:2}}m",
        "layout": "row-left",
        "className": "",
        "x": 860,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1819cd4f565ef740",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "[depth, alti, battV]",
        "func": "if(msg){\n    return [\n        {topic:\"depth\", payload:msg.base.depth},\n        {topic:\"alti\", payload:msg.base.altitude},\n        {topic:\"battV\", payload:msg.base.batt_v}\n        ]\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1040,
        "wires": [
            [
                "20a03f2b48cc1e97"
            ],
            [
                "d527d2f2ce34aefd"
            ],
            [
                "c29cf07c5a3c0289"
            ]
        ]
    },
    {
        "id": "d527d2f2ce34aefd",
        "type": "ui_text",
        "z": "072468ee5a218dc0",
        "group": "a48b13904097fb6a",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "alti text",
        "label": "Alti: ",
        "format": "{{msg.payload | number:2}}m",
        "layout": "row-left",
        "className": "",
        "x": 860,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e6538c33549e61c2",
        "type": "link out",
        "z": "072468ee5a218dc0",
        "name": "",
        "mode": "link",
        "links": [
            "3a21e43de6a62c77"
        ],
        "x": 1035,
        "y": 620,
        "wires": []
    },
    {
        "id": "312595f0d185ed72",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "toggle track buttons",
        "info": "",
        "x": 1150,
        "y": 620,
        "wires": []
    },
    {
        "id": "c29cf07c5a3c0289",
        "type": "ui_text",
        "z": "072468ee5a218dc0",
        "group": "a48b13904097fb6a",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "battV text",
        "label": "BattV:",
        "format": "{{msg.payload | number:2}}V",
        "layout": "row-left",
        "className": "",
        "x": 860,
        "y": 1080,
        "wires": []
    },
    {
        "id": "451095e50a1b4f3c",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "bt bt_cmd",
        "topic": "smarc/+/bt/bt_cmd",
        "qos": "2",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 700,
        "y": 400,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "c4d7a54c57af1e9d",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "dr/lat_lon -> dr/utm",
        "info": "",
        "x": 650,
        "y": 100,
        "wires": []
    },
    {
        "id": "61ce2b718be73daf",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "Sweden.map",
        "func": "msg = {payload:{command:{}}};\nmsg.payload.command.map = {\n    \"overlay\":\"Bathy\", \n    \"url\":\"http://nodered.blue-robots.com/mapserver\",\n    \"opt\":{ \n        \"map\":\"/etc/mapserver/sweden.map\",\n        \"layers\":\"CONTOUR\",\n        \"format\":\"image/png\",\n        \"service\":\"wms\",\n        \"transparent\":true\n    },\n    \"wms\":true\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "d8ab75012918ab43",
        "type": "ui_worldmap",
        "z": "65c60c3b274f73e3",
        "group": "542b5325cf729b8f",
        "order": 10,
        "width": 18,
        "height": 17,
        "name": "",
        "lat": "58.25089840041283",
        "lon": "11.4500587783608",
        "zoom": "16",
        "layer": "Custom",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "deg",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "",
        "maplist": "OSMC,EsriS,EsriT,EsriO",
        "mapname": "Esri Sat (SMaRC)",
        "mapurl": "http://localhost:1889/mapproxy/service",
        "mapopt": "{          \"map\":\"arcgis_world\",         \"layers\":\"arcgis_world\",         \"format\":\"image/png\"     }",
        "mapwms": true,
        "x": 1260,
        "y": 80,
        "wires": []
    },
    {
        "id": "1e0bd19ab17b797e",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_worldmap",
        "links": [
            "93d9f503a3372651",
            "86db72e5aa5e61cc",
            "8fdedc66ae19b198",
            "f73d51a768277c0b",
            "eaae728ca769c3c1",
            "3910098f87fb5eac",
            "c7d4d5de96d19781",
            "b185f6dbb37952e9",
            "7e03fe39a9e4785c",
            "46477f626df8f436",
            "cac2337cf56cd5d8",
            "02c39e7939e7fa37",
            "ffc1866d4e5696b6",
            "7ed9aae2048a44f4",
            "09c9a3f142594cee",
            "8463bb10ce548162"
        ],
        "x": 1155,
        "y": 80,
        "wires": [
            [
                "d8ab75012918ab43"
            ]
        ]
    },
    {
        "id": "93d9f503a3372651",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 785,
        "y": 800,
        "wires": []
    },
    {
        "id": "74196b529b53271e",
        "type": "worldmap in",
        "z": "65c60c3b274f73e3",
        "name": "",
        "path": "/worldmap",
        "events": "connect,point,layer,bounds,other",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "fd6727bdbf9a2edd",
                "f59da3a9a9790cbb"
            ]
        ]
    },
    {
        "id": "f59da3a9a9790cbb",
        "type": "debug",
        "z": "65c60c3b274f73e3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 20,
        "wires": []
    },
    {
        "id": "fd6727bdbf9a2edd",
        "type": "switch",
        "z": "65c60c3b274f73e3",
        "name": "map actions",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bounds",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "point",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "move",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "ecb32f1e69ab1244"
            ],
            [
                "692a9362905a1825"
            ],
            [
                "acaa0403e6b2f92a"
            ],
            [
                "e2f686ad8c4ade79"
            ],
            [
                "7d660feb1bc9828d"
            ]
        ]
    },
    {
        "id": "ecb32f1e69ab1244",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_connected",
        "mode": "link",
        "links": [
            "07bfda0c88113da1",
            "343f11ed929b07bb",
            "5a7bf884410b6994",
            "9dfbf97a209e373e",
            "c64c7c9fbc69557c",
            "d76ba06e630694d5",
            "f60980f36a17939c",
            "fd8f7e829592b528",
            "a5d4b41045dbb4d2"
        ],
        "x": 435,
        "y": 60,
        "wires": []
    },
    {
        "id": "692a9362905a1825",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_bounds",
        "mode": "link",
        "links": [
            "98d624b3d90d9a47"
        ],
        "x": 435,
        "y": 100,
        "wires": []
    },
    {
        "id": "5a7bf884410b6994",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 445,
        "y": 780,
        "wires": [
            [
                "24bfe69168ea9d8c",
                "f24fe9111c802e55"
            ]
        ]
    },
    {
        "id": "db811466da709501",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 620,
        "y": 60,
        "wires": []
    },
    {
        "id": "733036b10ed33646",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "bounds",
        "info": "",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "acaa0403e6b2f92a",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_button",
        "mode": "link",
        "links": [
            "608b681c2b10d2c7"
        ],
        "x": 435,
        "y": 140,
        "wires": []
    },
    {
        "id": "f2fa2605c1b981d7",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "button",
        "info": "",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "e493560291ec0b19",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 360,
        "y": 780,
        "wires": []
    },
    {
        "id": "608b681c2b10d2c7",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_on_press",
        "links": [
            "acaa0403e6b2f92a"
        ],
        "x": 305,
        "y": 820,
        "wires": [
            [
                "be264f174c773c7e"
            ]
        ]
    },
    {
        "id": "0ffae76eff0a2978",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "button",
        "info": "",
        "x": 230,
        "y": 820,
        "wires": []
    },
    {
        "id": "d697d87f8e6123ae",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 870,
        "y": 800,
        "wires": []
    },
    {
        "id": "be264f174c773c7e",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "on_press",
        "func": "key = false\nswitch(msg.payload.name){\n    case(\"Toggle follow\"):\n        key = \"follow_selected_vehicle\"\n        break\n    case(\"Toggle tracks\"):\n        key = \"draw_tracks\"\n        break\n    default:\n        node.warn(\"Unhandled map button!\")\n}\n\nif(key){\n    key = \"gui.\"+key\n    if(global.get(key)){\n        global.set(key, false)\n    }else{\n        global.set(key, true)\n    }\n}\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 820,
        "wires": [
            [
                "24bfe69168ea9d8c"
            ]
        ]
    },
    {
        "id": "24bfe69168ea9d8c",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "map buttons",
        "func": "function make_button(button){\n    m = {payload:{command:{}}};\n    \n    if(global.get(\"gui.\"+button.global_key)){\n        icon = button.icon_true\n    }else{\n        icon = button.icon_false\n    }\n    \n    m.payload.command = { \n        \"button\": {\n            \"name\":button.name,\n            \"icon\": icon,\n            \"position\":\"topleft\" \n        } \n    }\n    return m\n}\n\nfunction remove_button(name){\n    m = {payload:{command:{}}};\n    m.payload.command = { \n        \"button\": {\n            \"name\":name,\n        } \n    }\n    return m\n}\n\n\nbuttons = [\n    // {\n    //     \"global_key\":\"draw_tracks\",\n    //     \"name\":\"Toggle tracks\",\n    //     \"icon_true\":\"fa-sheqel\",\n    //     \"icon_false\":\"fa-blind\"\n    // },\n    {\n        \"global_key\":\"follow_selected_vehicle\",\n        \"name\":\"Toggle follow\",\n        \"icon_true\":\"fa-eye\",\n        \"icon_false\":\"fa-low-vision\"\n    }\n]\n\nfor(var button of buttons){\n    node.send(remove_button(button.name))\n    node.send(make_button(button))\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 820,
        "wires": [
            [
                "93d9f503a3372651"
            ]
        ]
    },
    {
        "id": "0a961438ad73e32f",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "robot_drs",
        "func": "msg = {payload:[]}\nrobot_states = global.get(\"robot_states\")\nfor(const robot_name in robot_states){\n    r = robot_states[robot_name]\n    msg.payload.push(r.gui.dr)\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 460,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "327b70467ae735a8",
        "type": "inject",
        "z": "65c60c3b274f73e3",
        "name": "0.2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 480,
        "wires": [
            [
                "0a961438ad73e32f",
                "0599c19152ae4c80"
            ]
        ]
    },
    {
        "id": "0599c19152ae4c80",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "robot_gps's",
        "func": "msg = {payload:[]}\nrobot_states = global.get(\"robot_states\")\nfor(const robot_name in robot_states){\n    r = robot_states[robot_name]\n    msg.payload.push(r.gui.gps)\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 500,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "84763f6e6162102a",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "center map on selected robot",
        "func": "gui_state = global.get(\"gui\")\n\nif(!(gui_state.follow_selected_vehicle)){\n    return\n}\n\n\nselected_robot_name = gui_state.selected_robot_name\nrobot_states = global.get(\"robot_states\")\n\nif(!(selected_robot_name in robot_states)){\n    return\n}\nr = robot_states[selected_robot_name]\n\nif(!(r.gui.selected)){\n    return\n}\n\nm = {\"payload\": {\n        \"command\":{\n            \"lat\": r.base.lat,\n            \"lon\": r.base.lon\n        }\n    }}\n    \nreturn m",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "eb0c3ad39ee41a83",
        "type": "inject",
        "z": "65c60c3b274f73e3",
        "name": "0.5s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 540,
        "wires": [
            [
                "84763f6e6162102a"
            ]
        ]
    },
    {
        "id": "87855a030ad4b56e",
        "type": "ui_switch",
        "z": "65c60c3b274f73e3",
        "name": "planning mode",
        "label": "Planning Mode",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 15,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 1040,
        "wires": [
            [
                "d01a1c27b3eb717f",
                "5096e7318cafb35a",
                "af81f151aebb2dcc"
            ]
        ]
    },
    {
        "id": "d01a1c27b3eb717f",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "set map clickability",
        "func": "return {\n    payload:{\n        command:{\n            hiderightclick: !msg.payload\n            \n        }}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1040,
        "wires": [
            [
                "7e03fe39a9e4785c"
            ]
        ]
    },
    {
        "id": "e2f686ad8c4ade79",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_point",
        "mode": "link",
        "links": [
            "42cf4dd1c1379d75",
            "6be45ee201d86b7b"
        ],
        "x": 435,
        "y": 180,
        "wires": []
    },
    {
        "id": "bcee15afbe079e57",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "point",
        "info": "",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "c64c7c9fbc69557c",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 285,
        "y": 1040,
        "wires": [
            [
                "84dfa6ecdba12005"
            ]
        ]
    },
    {
        "id": "71bfde50ae8e91d3",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 200,
        "y": 1040,
        "wires": []
    },
    {
        "id": "84dfa6ecdba12005",
        "type": "change",
        "z": "65c60c3b274f73e3",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1040,
        "wires": [
            [
                "87855a030ad4b56e"
            ]
        ]
    },
    {
        "id": "5096e7318cafb35a",
        "type": "change",
        "z": "65c60c3b274f73e3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gui.planning_mode",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1080,
        "wires": [
            [
                "836e9b2d666ea992"
            ]
        ]
    },
    {
        "id": "df49c5e8f94952de",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "put selected wp handle on map",
        "func": "planning_mode = global.get(\"gui.planning_mode\")\nif(!planning_mode) {\n    //node.warn(\"Not in planning\")\n    return\n}\n\nswp_name = global.get(\"gui.selected_waypoint_name\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nplan = plans[plan_name]\nif(!(plan)) return\nswp = plan.waypoints[swp_name]\n\n\n\n\n\n// then put the select wp on the map\n// if there is a selected wp\n//node.warn(\"Marker for\"+swp.name)\nif(swp){\n    return {payload:\n        {\n            action:\"point\",\n            name:swp.name+\"_handle\",\n            label:null,\n            layer:\"planning\",\n            draggable:true,\n            lat:swp.lat,\n            lon:swp.lon,\n            ttl:0,\n            icon:\"circle\",\n            iconColor: global.get(\"gui.colors.selected\")\n        }}\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1240,
        "wires": [
            [
                "c7d4d5de96d19781",
                "d443219a2ff95383"
            ]
        ]
    },
    {
        "id": "bb3002ce85983e34",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_update_markers_on_map",
        "links": [
            "836e9b2d666ea992",
            "c15482e7569c2dda",
            "503d00839a6bc893",
            "915f50a44adbc1b1",
            "a4c71623ce47e9e6",
            "50598fa1155faa55",
            "a7eba2ef10edab1f",
            "2a61996a1d3b6320",
            "86149028f57aa271",
            "5ad9f131ddd8bb21",
            "0e76935522f9aebc",
            "23c5e0d877fa805e",
            "a9b89912dfc6513c",
            "32e9ffddf60a4dce",
            "0d9738308b7f9c46",
            "4d342580f1bf0fe8",
            "7b6802a00469a21b",
            "44f867a505b6b2de",
            "022db1e93f2124b0",
            "d3924470eb7f938e",
            "21c358f0fad51f99",
            "7183dad7e54adf30",
            "1ede7c0d3d4c959f",
            "68b349fda17ba552",
            "38442de6ffbfa350",
            "338233d5c53202af"
        ],
        "x": 205,
        "y": 1220,
        "wires": [
            [
                "8e14da82f369a630"
            ]
        ]
    },
    {
        "id": "52e8d0416334a3c6",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 190,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b27a799d2b2389a3",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "836e9b2d666ea992",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 915,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d2f284617e677636",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "clear planning layer",
        "func": "// get the list of stuff we drew before and delete them all\ndom = global.get(\"gui.drawn_on_map\") || new Set()\n\n\n// delete all the markers one by one because\n// for some reason the clear layer\n// thing doesnt delete them proper?\nfor(const item of dom){\n    p = {name:item, deleted:true, lat:0, lon:0}\n    node.send({payload:p})\n}\ndom = new Set()\n\n// clear the planning layer\n// and trigger some other stuff\nreturn [\n    {payload:{command:{clear:\"planning\"}}},\n    {}\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "c7d4d5de96d19781"
            ],
            [
                "df49c5e8f94952de",
                "86c0559201508b50",
                "087bc95837a9d012",
                "28047fbd71cfcbd5"
            ]
        ]
    },
    {
        "id": "86c0559201508b50",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "draw plans",
        "func": "selected_plan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nselected_wp_name = global.get(\"gui.selected_waypoint_name\")\n\n\nfor(const plan_name in plans){\n    c = global.get(\"gui.colors.old\")\n    line_width = 0.5\n    line_weight = 2\n    dash_array = \"1,10,1,10\"\n    if(plan_name == selected_plan_name){\n        c = global.get(\"gui.colors.selected\")\n        line_width = 1.5\n        dash_array = \"1\"\n        line_weight = 4\n    }\n    plan = plans[plan_name]\n    line = []\n    for(const wp_name of plan.waypoint_order){\n        wp = plan.waypoints[wp_name]\n        line.push([wp.lat, wp.lon])\n        wp_radius = wp.tolerance || 1.5\n        \n        // also put a marker where the point is\n        // with the depth/rpm as label\n        // for the selected plan only\n        label = null\n        if(plan_name == selected_plan_name){\n            label = wp.name+\"(\"+wp.depth + \"m,\"\n            if(wp.use_rpm) label += wp.rpm+\"RPM)\"\n            else label += wp.speed+\" m/s)\"\n        }\n        \n        icon_color = global.get(\"gui.colors.old\")\n        fill_color = null\n        if(plan_name == selected_plan_name){\n            if(wp_name == selected_wp_name) {\n                icon_color = global.get(\"gui.colors.selected\")\n                fill_color = icon_color\n            }else{\n                icon_color = global.get(\"gui.colors.active\")\n            }\n        }\n        \n        // if there is a heading, an arrow showing that\n        // send this first so its under the circle\n        if(wp.arrival_heading){\n            vector = {\n                name: wp_name+\"_\"+plan_name+\"_vector\",\n                color: icon_color,\n                iconColor: icon_color,\n                dashArray: dash_array,\n                lat: wp.lat,\n                lon: wp.lon,\n                layer: \"planning\",\n                clickable: false,\n                tooltip: label,\n                heading: wp.arrival_heading,\n                icon:\"arrow\"\n            }\n            node.send({payload:vector})\n        }\n        \n        // we want a circle with different colors and sizes\n        circle = {\n                name: wp_name+\"_\"+plan_name+\"_circle\",\n                radius: wp_radius,\n                color: icon_color,\n                fillColor: fill_color,\n                iconColor: icon_color,\n                dashArray: dash_array,\n                lat: wp.lat,\n                lon: wp.lon,\n                tooltip: label,\n                layer: \"planning\",\n                clickable: false\n            }\n        node.send({payload:circle})\n        \n        \n            \n        \n    }\n    node.send(\n        {payload:{\n            name: plan_name+\"_plan_lines\",\n            line: line,\n            color: c,\n            dashArray: dash_array,\n            layer: \"planning\",\n            width: line_width,\n            weight: line_weight\n        }})\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1280,
        "wires": [
            [
                "c7d4d5de96d19781",
                "d443219a2ff95383"
            ]
        ]
    },
    {
        "id": "7d660feb1bc9828d",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_move",
        "mode": "link",
        "links": [
            "e4931a4e51ece515"
        ],
        "x": 435,
        "y": 220,
        "wires": []
    },
    {
        "id": "9c91a7737e68d627",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "move",
        "info": "",
        "x": 610,
        "y": 220,
        "wires": []
    },
    {
        "id": "d974149e3e68ba63",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "clear unknown layer",
        "func": "return {payload:{command:{clear:\"unknown\"}}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 580,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "10e1cb2c6ad250d0",
        "type": "inject",
        "z": "65c60c3b274f73e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 580,
        "wires": [
            [
                "d974149e3e68ba63"
            ]
        ]
    },
    {
        "id": "07bfda0c88113da1",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 375,
        "y": 1180,
        "wires": [
            [
                "d2f284617e677636"
            ]
        ]
    },
    {
        "id": "a9fb56eca8203960",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 280,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3910098f87fb5eac",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 655,
        "y": 480,
        "wires": []
    },
    {
        "id": "01d1b68c023ae715",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 730,
        "y": 480,
        "wires": []
    },
    {
        "id": "c7d4d5de96d19781",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 1145,
        "y": 1220,
        "wires": []
    },
    {
        "id": "9178d4c8aa1e20e1",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 1220,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d443219a2ff95383",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "accumulate drawn objects",
        "func": "dom = global.get(\"gui.drawn_on_map\")\nif(!dom){\n    dom = new Set()    \n} \ndom.add(msg.payload.name)\nglobal.set(\"gui.drawn_on_map\", dom)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "7e03fe39a9e4785c",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 915,
        "y": 1040,
        "wires": []
    },
    {
        "id": "af6505f909c5191f",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 990,
        "y": 1040,
        "wires": []
    },
    {
        "id": "087bc95837a9d012",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "draw tracks",
        "func": "drawn_track_names = global.get(\"gui.drawn_track_names\")\nif(!drawn_track_names) return\ntracks = global.get(\"planning.tracks\")\nselected_track_name = global.get(\"gui.selected_track_name\")\n\nfor(const track_name of drawn_track_names){\n    track = tracks[track_name]\n    line = []\n    // if we encounter a string instead of a state,\n    // we want to attach that string to the next state point\n    // and show that on the map\n    // obviously back-to-back strings will over-write but meh\n    point_icons = []\n    for(const i in track.data){\n        point = track.data[i]\n        \n        if(point[1]){\n            point_icon = {\n                    action: \"point\",\n                    layer: \"tracks\",\n                    label: point[1],\n                    lat: point[2],\n                    lon: point[3],\n                    name: track_name+\"_annotation_\"+i,\n                    icon: \"fa-xl fa-sticky-note-o\",\n                    iconColor: global.get(\"gui.colors.active\")\n                }\n            \n            if(point[1] === \"recording_start\"){\n                point_icon.icon = \"fa-xl fa-play\"\n                point_icon.label = null\n            } \n            if(point[1] === \"recording_pause\"){\n                point_icon.icon = \"fa-xl fa-pause\"\n                point_icon.label = null\n            } \n            if(parseInt(i)+1 >= track.data.length || point[1] === \"recording_stop\"){\n                point_icon.icon = \"fa-xl fa-stop\"\n                point_icon.label = null\n            }\n            if(i==0) point_icon.label = track_name\n            if(track_name != selected_track_name) point_icon.label = null\n            \n            node.send({payload:point_icon})\n        }\n        \n        line.push([point[2],point[3]]) //lat lon\n    }\n    \n    color = global.get(\"gui.colors.active\")\n    weight = 0.5\n    if(track_name == selected_track_name){\n        color=global.get(\"gui.colors.selected\")\n        weight = 2\n    } \n    node.send(\n        {payload:{\n            name: track_name+\"_track_lines\",\n            line: line,\n            color: color,\n            layer: \"tracks\",\n            width: 0.5,\n            weight: weight,\n        }})\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1320,
        "wires": [
            [
                "c7d4d5de96d19781",
                "d443219a2ff95383"
            ]
        ]
    },
    {
        "id": "404268e46f877811",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning_mode toggle",
        "links": [
            "7dd2fd0c91d149d6",
            "064286a6a174b304"
        ],
        "x": 405,
        "y": 1000,
        "wires": [
            [
                "87855a030ad4b56e"
            ]
        ]
    },
    {
        "id": "41396310128c8091",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning mode toggle",
        "info": "",
        "x": 260,
        "y": 1000,
        "wires": []
    },
    {
        "id": "2eee1d2a8a2e7b36",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "draw current plan lines",
        "func": "robot = msg.payload\n\nwps = robot.bt.current_plan.waypoints\nif(!wps) return\n\npoints = []\nfor(var i in wps){\n        points.push([wps[i].lat, wps[i].lon])\n}\n\nheavy = 7\nnormal = 4\nweak = 0.1\n\nswitch(robot.bt.current_plan.plan_state){\n    case 0: //running\n        c = global.get(\"gui.colors.selected\")\n        w = heavy\n        break\n    case 1: // stopped\n        c = global.get(\"gui.colors.active\")\n        w = normal\n        break\n    case 2: // paused\n        c = global.get(\"gui.colors.active\")\n        w = normal\n        break\n    case 3: // emergency\n        c = global.get(\"gui.colors.old\")\n        w = weak\n        break\n    case 4: // received\n        c = global.get(\"gui.colors.active\")\n        w = heavy\n        break\n    default:\n        c = global.get(\"gui.colors.old\")\n        w = normal\n        break\n}\n\nif(robot.gui.is_old) c = global.get(\"gui.colors.old\")\n\nline = {name: robot.base.name+\"_vehicle_plan\",\n        layer: \"planning\",\n        line:points,\n        color:c,\n        weight:w,\n        editable:false,\n        clickable:false,\n        dashArray:\"1,1,2,20\"\n}\nreturn {payload:line}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1340,
        "wires": [
            [
                "c7d4d5de96d19781",
                "d443219a2ff95383"
            ]
        ]
    },
    {
        "id": "3df11c87b530efc4",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "marker on current wp",
        "func": "robot = msg.payload\n\nc = global.get(\"gui.colors.selected\")\nif(robot.gui.is_old) c = global.get(\"gui.colors.old\")\n\n\nreturn {payload:\n        {\n            action:\"point\",\n            name: robot.base.name+\"_current_wp\",\n            label:null,\n            layer:\"planning\",\n            draggable:false,\n            lat:robot.bt.current_wp.lat,\n            lon:robot.bt.current_wp.lon,\n            ttl:0,\n            icon:\"locate\",\n            iconColor:c,\n            tooltip:robot.base.name+\"'s current WP\"\n        }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1380,
        "wires": [
            [
                "d443219a2ff95383",
                "c7d4d5de96d19781"
            ]
        ]
    },
    {
        "id": "28047fbd71cfcbd5",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "selected robot",
        "func": "srn = global.get(\"gui.selected_robot_name\")\nif(!srn) return\nrobots = global.get(\"robot_states\")\nrobot = robots[srn]\nif(!robot) return\n\nreturn {payload:robot}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1360,
        "wires": [
            [
                "2eee1d2a8a2e7b36",
                "3df11c87b530efc4"
            ]
        ]
    },
    {
        "id": "af81f151aebb2dcc",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "f73376f194b1fc1a",
            "5258271b9369afd2"
        ],
        "x": 655,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5b1ae6d42b5c714c",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "compare gui and robot plans",
        "info": "",
        "x": 900,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8e14da82f369a630",
        "type": "delay",
        "z": "65c60c3b274f73e3",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 1220,
        "wires": [
            [
                "d2f284617e677636"
            ]
        ]
    },
    {
        "id": "6bad9b25f08b2b75",
        "type": "ui_text",
        "z": "65c60c3b274f73e3",
        "group": "542b5325cf729b8f",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "map in a tab",
        "label": "<a target=\"_blank\" href=\"https://nodered.blue-robots.com/worldmap\">Map in a tab</a> ",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 1250,
        "y": 40,
        "wires": []
    },
    {
        "id": "e204aa4fbba6b290",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "server time",
        "func": "now = new Date(Date.now())\nd = now.toDateString().slice(4,11)\nt = now.toTimeString().slice(0,5)\nreturn {payload: d + \" \" + t}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "c67c6a0afb707f9a"
            ]
        ]
    },
    {
        "id": "d14532df6dd851f7",
        "type": "inject",
        "z": "65c60c3b274f73e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 970,
        "y": 140,
        "wires": [
            [
                "e204aa4fbba6b290"
            ]
        ]
    },
    {
        "id": "c67c6a0afb707f9a",
        "type": "ui_text",
        "z": "65c60c3b274f73e3",
        "group": "542b5325cf729b8f",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1270,
        "y": 140,
        "wires": []
    },
    {
        "id": "814ec3d53136b7f9",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "",
        "links": [
            "14a23ba06f41f8b0"
        ],
        "x": 985,
        "y": 220,
        "wires": [
            [
                "b10608bedac5fc46"
            ]
        ]
    },
    {
        "id": "422b9acc8574853c",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "Selected robot state",
        "info": "",
        "x": 830,
        "y": 220,
        "wires": []
    },
    {
        "id": "b10608bedac5fc46",
        "type": "rbe",
        "z": "65c60c3b274f73e3",
        "name": "utm zone changes",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "base.utm_z",
        "topi": "topic",
        "x": 1110,
        "y": 220,
        "wires": [
            [
                "c3ac4e9f3eccb17c"
            ]
        ]
    },
    {
        "id": "c3ac4e9f3eccb17c",
        "type": "ui_text",
        "z": "65c60c3b274f73e3",
        "group": "542b5325cf729b8f",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "utm zone",
        "label": "Robot UTM:",
        "format": "{{msg.base.utm_z}}",
        "layout": "row-left",
        "className": "",
        "x": 1280,
        "y": 220,
        "wires": []
    },
    {
        "id": "098e32f128c8c97b",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "center map on choice",
        "func": "if(msg.payload == \"robot\"){\n    srn = global.get(\"gui.selected_robot_name\")    \n    robots = global.get(\"robot_states\")\n    robot = robots[srn]\n    if(!robot){\n        node.status(\"Bad robot\")\n        return\n    }\n    lat = robot.base.lat\n    lon = robot.base.lon\n    if(!lat || !lon){\n        lat = robot.base.gps_lat\n        lon = robot.base.gps_lon\n    }\n}\nelse if(msg.payload == \"plan\"){\n    spn = global.get(\"gui.selected_plan_name\")    \n    plans = global.get(\"planning.plans\")\n    plan = plans[spn]\n    if(!plan) {\n        node.status(\"Bad plan\")\n        return\n    }\n    wp_0 = plan.waypoints[plan.waypoint_order[0]]\n    lat = wp_0.lat\n    lon = wp_0.lon\n}\nelse if(msg.payload == \"track\"){\n    stn = global.get(\"gui.selected_track_name\")\n    tracks = global.get(\"planning.tracks\")\n    track = tracks[stn]\n    if(!track){\n        node.status(\"Bad track\")\n        return\n    }\n    lat = track.data[0][2]\n    lon = track.data[0][3]\n}\nelse if(msg.payload == \"marker\"){\n    smn = global.get(\"gui.selected_marker_name\")\n    markers = global.get(\"gui.markers\")\n    marker = markers[smn]\n    if(!marker){\n        node.status(\"Bad marker\")\n        return\n    }\n    lat = marker.lat\n    lon = marker.lon\n}\nelse{\n    node.status(\"Bad choice\")\n    node.warn(msg)\n    return\n}\n\n\nm = {payload: {\n        command:{\n            lat: lat,\n            lon: lon,\n            zoom:19\n        }\n    }}\nnode.status(\"Good\")\n    \nreturn m",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 340,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "ac7aa9962dc33e31",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "robot",
        "group": "542b5325cf729b8f",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Robot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "robot",
        "payloadType": "str",
        "topic": "robot",
        "topicType": "msg",
        "x": 250,
        "y": 300,
        "wires": [
            [
                "098e32f128c8c97b"
            ]
        ]
    },
    {
        "id": "5abe63c29f730562",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "plan",
        "group": "542b5325cf729b8f",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Plan",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "plan",
        "payloadType": "str",
        "topic": "plan",
        "topicType": "msg",
        "x": 250,
        "y": 340,
        "wires": [
            [
                "098e32f128c8c97b"
            ]
        ]
    },
    {
        "id": "72c5c0c33f481ffd",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "track",
        "group": "542b5325cf729b8f",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Track",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "track",
        "payloadType": "str",
        "topic": "track",
        "topicType": "msg",
        "x": 250,
        "y": 380,
        "wires": [
            [
                "098e32f128c8c97b"
            ]
        ]
    },
    {
        "id": "b1fe6be73d448391",
        "type": "ui_text",
        "z": "65c60c3b274f73e3",
        "group": "542b5325cf729b8f",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "center on",
        "label": "Center on:",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 120,
        "y": 340,
        "wires": []
    },
    {
        "id": "a5d4b41045dbb4d2",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 215,
        "y": 260,
        "wires": [
            [
                "1b88a36a01375ea4"
            ]
        ]
    },
    {
        "id": "7f672813cc1b8f85",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "1b88a36a01375ea4",
        "type": "change",
        "z": "65c60c3b274f73e3",
        "name": "robot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "robot",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "robot",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "098e32f128c8c97b"
            ]
        ]
    },
    {
        "id": "a431a071933f9f0f",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "marker",
        "group": "542b5325cf729b8f",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Marker",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "marker",
        "payloadType": "str",
        "topic": "marker",
        "topicType": "msg",
        "x": 260,
        "y": 420,
        "wires": [
            [
                "098e32f128c8c97b"
            ]
        ]
    },
    {
        "id": "2428671852b88d7d",
        "type": "ui_text",
        "z": "65c60c3b274f73e3",
        "group": "542b5325cf729b8f",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "utm zone",
        "label": "View UTM:",
        "format": "{{msg.payload.utm.z}}",
        "layout": "row-left",
        "className": "",
        "x": 1280,
        "y": 260,
        "wires": []
    },
    {
        "id": "98d624b3d90d9a47",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "",
        "links": [
            "692a9362905a1825"
        ],
        "x": 905,
        "y": 260,
        "wires": [
            [
                "c324394fb1b17731"
            ]
        ]
    },
    {
        "id": "010499874355caef",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "bounds",
        "info": "",
        "x": 790,
        "y": 260,
        "wires": []
    },
    {
        "id": "8ff876fe5c2fd0c0",
        "type": "utm",
        "z": "65c60c3b274f73e3",
        "name": "",
        "precision": "5",
        "x": 1150,
        "y": 260,
        "wires": [
            [
                "2428671852b88d7d"
            ]
        ]
    },
    {
        "id": "c324394fb1b17731",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "prep for utm",
        "func": "lat = msg.payload.south + msg.payload.north\nlat = lat/2\nlon = msg.payload.east + msg.payload.west\nlon = lon/2\nnode.status(\"Center:\"+lat+\",\"+lon)\n\nreturn {payload:{lat:lat,lon:lon}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "8ff876fe5c2fd0c0"
            ]
        ]
    },
    {
        "id": "f24fe9111c802e55",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "mapproxy swe_bathy",
        "func": "msg = {payload:{command:{}}};\nmsg.payload.command.map = {\n    \"overlay\":\"Swe Bathy\", \n    \"url\":\"http://localhost:1889/mapproxy/service\",\n    \"opt\":{ \n        \"map\":\"swe_bathy\",\n        \"layers\":\"swe_bathy\",\n        \"format\":\"image/png\",\n        \"transparent\":true\n    },\n    \"wms\":true\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 780,
        "wires": [
            [
                "93d9f503a3372651"
            ]
        ]
    },
    {
        "id": "05690f4fe18f582b",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "mapproxy arcgis_world",
        "func": "msg = {payload:{command:{}}};\nmsg.payload.command.map = {\n    \"name\":\"Esri Sat (SMaRC Cache)\", \n    \"url\":\"http://localhost:1889/mapproxy/service\",\n    \"opt\":{ \n        \"map\":\"arcgis_world\",\n        \"layers\":\"arcgis_world\",\n        \"format\":\"image/png\"\n    },\n    \"wms\":true\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "5f1621f0e468330a",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "This is set as the default map, left here for future ref",
        "info": "",
        "x": 1130,
        "y": 780,
        "wires": []
    },
    {
        "id": "7c2ed1adc789976b",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "This is routed through the proxy now",
        "info": "",
        "x": 1380,
        "y": 820,
        "wires": []
    },
    {
        "id": "38311862f50e9a0f",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "list plans",
        "func": "plans = global.get(\"planning.plans\")\n\n\nif(!(plans)){\n    return {payload:[{title:\"--NO PLANS--\"}]}  \n} \nif(Object.keys(plans).length < 1){\n    return {payload:[{title:\"--NO PLANS--\"}]}     \n}\n\nselected_plan_name = global.get(\"gui.selected_plan_name\")\nlist_items = []\nfor(const plan_name in plans){\n    plan = plans[plan_name]\n    if(plan_name == selected_plan_name){\n        c = \"orange\"\n    }else{\n        c = \"black\"\n    }\n    title = \"<font color=\" + c +\">\" + plan_name\n    \n    desc = \"⏳\" \n    if(plan.timeout >= 60){\n        desc += parseInt(plan.timeout/60, 10) + \"Hrs \" + parseInt(plan.timeout%60, 10) + \"Mins\"\n    }else{\n        desc += plan.timeout+ \"Mins\"\n    }\n    \n    list_item = {title:title,\n        description:desc\n    }\n    list_items.push(list_item)\n}\n\nreturn {payload:list_items}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "28e6eaa8ff68c61c"
            ]
        ]
    },
    {
        "id": "28e6eaa8ff68c61c",
        "type": "ui_list",
        "z": "118dfccac2ca8a7d",
        "group": "a891e5f5f2effe35",
        "name": "Plan list",
        "order": 2,
        "width": 6,
        "height": 7,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 580,
        "y": 340,
        "wires": [
            [
                "abb39be053a11991"
            ]
        ]
    },
    {
        "id": "abb39be053a11991",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "set selected plan",
        "func": "title = msg.payload.title\nif(title == \"--NO PLANS--\") return\nplan_name = title.slice(title.indexOf(\">\")+1)\n\nglobal.set(\"gui.selected_plan_name\", plan_name)\n\nreturn {payload:plan_name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 340,
        "wires": [
            [
                "5240cb66038a3873",
                "0d9738308b7f9c46",
                "54546f69220f8eec",
                "89f8bd6e6fe0c7f9",
                "dbd21dee0b094bfe",
                "2768b84356fdabdf",
                "77ebe99f7d2b7240",
                "ede3c3d661bce3f9"
            ]
        ]
    },
    {
        "id": "c1957b50ca197e3e",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "new plan",
        "group": "a891e5f5f2effe35",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "New",
        "tooltip": "Create a new empty mission plan",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-map",
        "payload": "button",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 560,
        "wires": [
            [
                "ae71311b8a1a08db"
            ]
        ]
    },
    {
        "id": "ae71311b8a1a08db",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "create and select new plan",
        "func": "function new_plan(){\n    t = new Date(Date.now()).toTimeString().slice(0,8)\n    return {\n        name:\"NEW PLAN-\"+ t,\n        hash:\"\",\n        waypoints:{},\n        waypoint_order:[],\n        timeout: 0\n    }\n}\n\nfunction makeid(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    let counter = 0;\n    while (counter < length) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      counter += 1;\n    }\n    return result;\n}\n\nfunction new_wp(line){\n    return {\n        name:line.name || makeid(5),\n        lat:line.lat || -1,\n        lon:line.lon || -1,\n        depth:line.depth || 0,\n        rpm:line.rpm || 0,\n        speed:line.speed || 0,\n        use_rpm:line.use_rpm || true,\n        tolerance:line.tolerance || 1.5,\n        arrival_heading:line.arrival_heading || null,\n        use_heading: line.use_heading || false\n    }\n}\n\nplan = new_plan()\n\n\n// maybe its a new plan that was uploaded?\n// if thats the case, the message is coming from a csv parser\n// the msg includes a file field with info about the uploaded file\n// and the payload has objects for payloads.\nif(msg.payload && msg.payload != \"button\" && msg.topic == \"upload\"){\n    plan.name = msg.name\n    plan.timeout = msg.timeout\n    for(const line of msg.payload){\n        wp = new_wp(line)\n        plan.waypoints[wp.name] = wp\n        plan.waypoint_order.push(wp.name)\n    }\n}\n\n\nplans = global.get(\"planning.plans\")\nplans[plan.name] = plan\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_plan_name\", plan.name)\n\nreturn {payload:plan, topic:\"new_plan\"}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 540,
        "wires": [
            [
                "b78cdc8857134a19",
                "e9793c71cb6a6951",
                "c710c4125293b7ca",
                "90ed6d165a69da9a"
            ]
        ]
    },
    {
        "id": "5240cb66038a3873",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31",
            "4facb95ab46fd02a",
            "b391488f986dfd76"
        ],
        "x": 915,
        "y": 220,
        "wires": []
    },
    {
        "id": "4f06da43ab61c8d5",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 1030,
        "y": 220,
        "wires": []
    },
    {
        "id": "b78cdc8857134a19",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31",
            "4facb95ab46fd02a",
            "b391488f986dfd76"
        ],
        "x": 685,
        "y": 560,
        "wires": []
    },
    {
        "id": "d4f10303a254895d",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 800,
        "y": 560,
        "wires": []
    },
    {
        "id": "343f11ed929b07bb",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 315,
        "y": 380,
        "wires": [
            [
                "38311862f50e9a0f"
            ]
        ]
    },
    {
        "id": "6ed9312e9a1f318f",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "connected",
        "info": "",
        "x": 220,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ced9a30a0daf790",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1060,
        "y": 180,
        "wires": []
    },
    {
        "id": "0d9738308b7f9c46",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 915,
        "y": 180,
        "wires": []
    },
    {
        "id": "7c8b008791190499",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "v2_update_list_of_plans",
        "links": [
            "661889365b3086ee",
            "887a04d5bcde6631",
            "89f8bd6e6fe0c7f9",
            "5688219d23bc9d39",
            "90ed6d165a69da9a",
            "4373c2f7f323e633",
            "b947039dbcc46946",
            "5952cfc79c5f6b64"
        ],
        "x": 315,
        "y": 340,
        "wires": [
            [
                "38311862f50e9a0f",
                "313d898f58bd3201",
                "97cde35f7ed19b8c"
            ]
        ]
    },
    {
        "id": "57c6a626165d02d2",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of plans",
        "info": "",
        "x": 190,
        "y": 340,
        "wires": []
    },
    {
        "id": "661889365b3086ee",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "7c8b008791190499"
        ],
        "x": 1165,
        "y": 700,
        "wires": []
    },
    {
        "id": "47b025840d826501",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of plans",
        "info": "",
        "x": 1290,
        "y": 700,
        "wires": []
    },
    {
        "id": "641d42b54772367e",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "rename plan",
        "group": "a891e5f5f2effe35",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Rename",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-pencil",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 780,
        "wires": [
            [
                "e7a3e953893d78aa"
            ]
        ]
    },
    {
        "id": "4453c2850ba0cd16",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "delete plan",
        "group": "a891e5f5f2effe35",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Delete the selected plan",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 820,
        "wires": [
            [
                "40a7debd046c87de"
            ]
        ]
    },
    {
        "id": "8e318648716bb8ce",
        "type": "ui_toast",
        "z": "118dfccac2ca8a7d",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Rename",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "rename",
        "x": 780,
        "y": 780,
        "wires": [
            [
                "5f63ad215e8f3ebf"
            ]
        ]
    },
    {
        "id": "e7a3e953893d78aa",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "Prepare rename",
        "func": "name = global.get(\"gui.selected_plan_name\")\nif(!name) return\nreturn {payload:\"Rename \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 780,
        "wires": [
            [
                "8e318648716bb8ce"
            ]
        ]
    },
    {
        "id": "5f63ad215e8f3ebf",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "rename selected plan",
        "func": "if(msg.payload == \"Cancel\") return\n\nnew_name = msg.payload\nif(new_name == \"\") return\n\nplans = global.get(\"planning.plans\")\nif(new_name in Object.keys(plans)) return\n\nplan = plans[global.get(\"gui.selected_plan_name\")]\ndelete plans[plan.name]\n\nplan.name = new_name\nplans[new_name] = plan\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_plan_name\", new_name)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 780,
        "wires": [
            [
                "661889365b3086ee",
                "6d78493b0b803312"
            ]
        ]
    },
    {
        "id": "40a7debd046c87de",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "Prepare delete",
        "func": "name = global.get(\"gui.selected_plan_name\")\nif(!name) return\nreturn {payload:\"Delete \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 820,
        "wires": [
            [
                "53cbd42f017f3097"
            ]
        ]
    },
    {
        "id": "53cbd42f017f3097",
        "type": "ui_toast",
        "z": "118dfccac2ca8a7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "DELETE",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "delete",
        "x": 770,
        "y": 820,
        "wires": [
            [
                "d6c88977c808f4a1"
            ]
        ]
    },
    {
        "id": "d6c88977c808f4a1",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "delete selected plan",
        "func": "if(msg.payload == \"Cancel\") return\n\nplans = global.get(\"planning.plans\")\nplan = plans[global.get(\"gui.selected_plan_name\")]\ndelete plans[plan.name]\n\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_plan_name\", null)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 820,
        "wires": [
            [
                "661889365b3086ee",
                "4d342580f1bf0fe8",
                "a66420d9524cd5c4",
                "6d78493b0b803312"
            ]
        ]
    },
    {
        "id": "1a1595debf8d03b4",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1310,
        "y": 820,
        "wires": []
    },
    {
        "id": "4d342580f1bf0fe8",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 1165,
        "y": 820,
        "wires": []
    },
    {
        "id": "a66420d9524cd5c4",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31",
            "4facb95ab46fd02a",
            "b391488f986dfd76"
        ],
        "x": 1165,
        "y": 860,
        "wires": []
    },
    {
        "id": "586d4cabfd917e26",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 1280,
        "y": 860,
        "wires": []
    },
    {
        "id": "39c5be8a7a14b653",
        "type": "ui_text",
        "z": "118dfccac2ca8a7d",
        "group": "a891e5f5f2effe35",
        "order": 14,
        "width": 9,
        "height": 1,
        "name": "wp title",
        "label": "Waypoints of",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 680,
        "y": 240,
        "wires": []
    },
    {
        "id": "d2d6079a0565d000",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "toggle",
        "func": "function r(mod, control, start){\n    return [\n        {enabled:mod},\n        {enabled:control},\n        {enabled:start}\n        ]\n}\n\nmod = false\ncontrol = false\nstart = false\n\nspn = global.get(\"gui.selected_plan_name\")\n// no selected track, disable all buttons\nif(!spn){\n    node.status({fill:\"red\",shape:\"ring\",text:\"No SPN\"});\n    if(spn == \"\"){\n        mod = true\n        node.status({fill:\"red\",shape:\"ring\",text:\"Empty name\"});\n    }\n    return r(mod, control, start)\n}\n\nplans = global.get(\"planning.plans\")\nplan = plans[spn]\nif(!plan){\n    node.status({fill:\"red\",shape:\"ring\",text:\"No plan\"});\n    return r(mod, control, start)\n}\n\n// there is at least a plan, enable modifications\nmod = true\n\n// but it has 0 timeout, no control or start from this plan!\nif(plan.timeout <= 0){\n    node.status({fill:\"red\",shape:\"ring\",text:\"Timeout<=0\"});\n    return r(mod, control, start)\n}\n\n// ok fine, maybe it can do sth with this plan\ncontrol = true\n\n//if(plan.waypoint_order.length == 0) control = false\n\nsrn = global.get(\"gui.selected_robot_name\")\nrobots = global.get(\"robot_states\")\nrob = robots[srn]\n\nif(!rob) {\n    control = false\n    return r(mod, control, start)\n}\n\nif(rob.gui.is_old) control = false\nif(global.get(\"gui.plan_is_synched\")) start = true\nif(!control) start = false\n\nnode.status({fill:\"green\",shape:\"ring\",text:\"Good\"});\nreturn r(mod, control, start)\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 900,
        "wires": [
            [
                "641d42b54772367e",
                "4453c2850ba0cd16",
                "064286a6a174b304",
                "f4ecbe203d64d0e5"
            ],
            [
                "ee8dd360404d643a",
                "3e6ed2a1d2275025",
                "3d1737024518e190"
            ],
            [
                "bd536a0252fc7e7f",
                "604a48bfd4e46372",
                "628394529cff0cf9",
                "0e194ffbde76f700"
            ]
        ]
    },
    {
        "id": "c9bacdb8aaa806ab",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "v2_toggle plan buttons",
        "links": [
            "313d898f58bd3201",
            "54546f69220f8eec",
            "7207113d4e01d2b1",
            "5e9ecba260dfcb02"
        ],
        "x": 155,
        "y": 900,
        "wires": [
            [
                "d2d6079a0565d000",
                "ef191736d08ddbf6"
            ]
        ]
    },
    {
        "id": "76faa546c0d3962e",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle plan buttons",
        "info": "",
        "x": 230,
        "y": 840,
        "wires": []
    },
    {
        "id": "ee8dd360404d643a",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "send",
        "group": "a891e5f5f2effe35",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Send",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-send",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 980,
        "wires": [
            [
                "6ff1c4b335189bfc"
            ]
        ]
    },
    {
        "id": "3376292af02cb95f",
        "type": "mqtt out",
        "z": "118dfccac2ca8a7d",
        "name": "mission_control",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1301e8ab7fdd3e72",
        "x": 840,
        "y": 1020,
        "wires": []
    },
    {
        "id": "6ff1c4b335189bfc",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "make mission control",
        "func": "selected_plan_name = global.get(\"gui.selected_plan_name\")\nif(!selected_plan_name) return\n\nplans = global.get(\"planning.plans\")\nplan = plans[selected_plan_name]\n\nproper_wps = []\nfor(var i in plan.waypoint_order){\n    wp_name = plan.waypoint_order[i]\n    wp = plan.waypoints[wp_name]\n    if(!wp) continue\n    speed_control_mode = 2 // m/s\n    if(wp.use_rpm) speed_control_mode = 1 //rpm\n    wp_msg = {\n      \"pose\": {\n        \"header\": {\n          \"seq\": 0,\n          \"stamp\": {\n            \"secs\": 0,\n            \"nsecs\": 0\n          },\n          \"frame_id\": \"latlon\"\n        },\n        \"pose\": {\n          \"position\": {\n            \"x\": 0,\n            \"y\": 0,\n            \"z\": 0\n          },\n          \"orientation\": {\n            \"x\": 0,\n            \"y\": 0,\n            \"z\": 0,\n            \"w\": 0\n          }\n        }\n      },\n      \"goal_tolerance\": wp.tolerance,\n      \"z_control_mode\": 1, // depth\n      \"travel_altitude\": -1,\n      \"travel_depth\": wp.depth,\n      \"speed_control_mode\": speed_control_mode,\n      \"travel_rpm\": wp.rpm,\n      \"travel_speed\": wp.speed,\n      \"lat\": wp.lat,\n      \"lon\": wp.lon,\n      \"name\":wp.name,\n      \"arrival_heading\": wp.arrival_heading || 0,\n      \"use_heading\": wp.use_heading || false\n    }\n    proper_wps.push(wp_msg)\n}\nmission_control = {\n    name: selected_plan_name,\n    hash: plan.hash,\n    command: 4, //set plan\n    timeout: plan.timeout*60,\n    waypoints: proper_wps\n}\n\nname = global.get(\"gui.selected_robot_name\")\nm = {\n    payload: mission_control,\n    topic: \"smarc/\"+name+\"/bt_cmd/mission_control\"\n}\nreturn m\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 980,
        "wires": [
            [
                "3376292af02cb95f"
            ]
        ]
    },
    {
        "id": "bd536a0252fc7e7f",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "Start",
        "group": "a891e5f5f2effe35",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "Start the currently selected plan",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-play",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "e9b7e1d4e1732b04",
                "7e3bed0f31699d86"
            ]
        ]
    },
    {
        "id": "e9b7e1d4e1732b04",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "make command",
        "func": "selected_plan_name = global.get(\"gui.selected_plan_name\")\nif(!selected_plan_name) return\n\nrobot_name = global.get(\"gui.selected_robot_name\")\n\nmission_control = {\n    name: selected_plan_name,\n    command: msg.payload\n}\n\nreturn {\n    payload: mission_control,\n    topic: \"smarc/\" + robot_name + \"/bt_cmd/mission_control\"\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1040,
        "wires": [
            [
                "3376292af02cb95f"
            ]
        ]
    },
    {
        "id": "3d1737024518e190",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "Pause",
        "group": "a891e5f5f2effe35",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Pause",
        "tooltip": "Pause the currently selected plan",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "fa-pause",
        "payload": "2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "e9b7e1d4e1732b04"
            ]
        ]
    },
    {
        "id": "3e6ed2a1d2275025",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "Stop",
        "group": "a891e5f5f2effe35",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "Stop the currently selected plan",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "fa-stop",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "e9b7e1d4e1732b04",
                "7e3bed0f31699d86"
            ]
        ]
    },
    {
        "id": "b2bd2d89fe2aabab",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "Abort",
        "group": "a48b13904097fb6a",
        "order": 14,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "ABORT",
        "tooltip": "Emergency stop, one-way street",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-eject",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 1160,
        "wires": [
            [
                "e9b7e1d4e1732b04",
                "7e3bed0f31699d86"
            ]
        ]
    },
    {
        "id": "313d898f58bd3201",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "c9bacdb8aaa806ab"
        ],
        "x": 395,
        "y": 300,
        "wires": []
    },
    {
        "id": "1815b44c499310f3",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle plan buttons",
        "info": "",
        "x": 510,
        "y": 300,
        "wires": []
    },
    {
        "id": "54546f69220f8eec",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "c9bacdb8aaa806ab"
        ],
        "x": 915,
        "y": 140,
        "wires": []
    },
    {
        "id": "7f43c72093d3e979",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle plan buttons",
        "info": "",
        "x": 1040,
        "y": 140,
        "wires": []
    },
    {
        "id": "97cde35f7ed19b8c",
        "type": "change",
        "z": "118dfccac2ca8a7d",
        "name": "selected_plan_name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "gui.selected_plan_name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "39c5be8a7a14b653"
            ]
        ]
    },
    {
        "id": "ef191736d08ddbf6",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "b3ea1b7b39673b5c",
            "a3e23aac87d3c7f3"
        ],
        "x": 205,
        "y": 940,
        "wires": []
    },
    {
        "id": "2266f2a5f1f01f2b",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle wp props",
        "info": "",
        "x": 240,
        "y": 980,
        "wires": []
    },
    {
        "id": "064286a6a174b304",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "404268e46f877811",
            "5a1ec79daf3b13c9",
            "49c769f14bc28367",
            "77a98eb0215f0554"
        ],
        "x": 395,
        "y": 740,
        "wires": []
    },
    {
        "id": "1b0d0976e90d5b5d",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle planning mode toggle",
        "info": "",
        "x": 240,
        "y": 740,
        "wires": []
    },
    {
        "id": "38667a0db872692a",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle planning mode toggle",
        "info": "",
        "x": 420,
        "y": 220,
        "wires": []
    },
    {
        "id": "49c769f14bc28367",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "toggle planning_mode toggle",
        "links": [
            "064286a6a174b304"
        ],
        "x": 565,
        "y": 220,
        "wires": [
            [
                "39c5be8a7a14b653"
            ]
        ]
    },
    {
        "id": "89f8bd6e6fe0c7f9",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "7c8b008791190499"
        ],
        "x": 915,
        "y": 260,
        "wires": []
    },
    {
        "id": "3dc3cd7653fd668c",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of plans",
        "info": "",
        "x": 1040,
        "y": 260,
        "wires": []
    },
    {
        "id": "a44db744b2034a97",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle readouts",
        "info": "",
        "x": 200,
        "y": 1160,
        "wires": []
    },
    {
        "id": "31309c347c995d7a",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "toggle readouts",
        "links": [
            "cf8fbcc8cd92e83a"
        ],
        "x": 305,
        "y": 1160,
        "wires": [
            [
                "b2bd2d89fe2aabab"
            ]
        ]
    },
    {
        "id": "e2035429aba2365b",
        "type": "ui_text_input",
        "z": "118dfccac2ca8a7d",
        "name": "lat,lon",
        "label": "Lat,Lon",
        "tooltip": "LAT, LON input",
        "group": "a891e5f5f2effe35",
        "order": 17,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "latlon",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 870,
        "y": 2280,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "bcec49ac72ce94a2",
        "type": "ui_switch",
        "z": "118dfccac2ca8a7d",
        "name": "use_rpm",
        "label": "Use RPM",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 24,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "use_rpm",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 880,
        "y": 2440,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "2a74502517eb6066",
        "type": "ui_text_input",
        "z": "118dfccac2ca8a7d",
        "name": "depth",
        "label": "Depth",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 18,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "depth",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 870,
        "y": 2320,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "3d055b51f351b42c",
        "type": "ui_text_input",
        "z": "118dfccac2ca8a7d",
        "name": "RPM",
        "label": "RPM",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "rpm",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 870,
        "y": 2360,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "882f41c8b31191b8",
        "type": "ui_text_input",
        "z": "118dfccac2ca8a7d",
        "name": "speed",
        "label": "Speed",
        "tooltip": "in m/s",
        "group": "a891e5f5f2effe35",
        "order": 21,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "speed",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 870,
        "y": 2400,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "c86256cca6fc01b2",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "validate and edit WP",
        "func": "plans = global.get(\"planning.plans\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplan = plans[plan_name]\nif(!(plan)){\n    return {payload:\"No plan\"}\n}\n\nname = global.get(\"gui.selected_waypoint_name\")\nif(!name){\n    return {payload:\"No WP selected\"}\n}\nif(!(name in plan.waypoints)){\n    return {payload:\"Selected WP not in selected plan\"}\n}\n\n\n\nswitch(msg.topic){\n    case(\"latlon\"):\n        // magic regex that checks for lat,lon formatting\n        const regexExp = /^((\\-?|\\+?)?\\d+(\\.\\d+)?),\\s*((\\-?|\\+?)?\\d+(\\.\\d+)?)$/gi;\n        if(regexExp.test(msg.payload)){\n            parts = msg.payload.split(\",\")\n            lat = parseFloat(parts[0])\n            lon = parseFloat(parts[1])\n            plan.waypoints[name].lat = lat\n            plan.waypoints[name].lon = lon\n        }else{\n            return {payload:\"Latlon format is bad:\"+msg.payload}    \n        }\n        break\n        \n    case(\"depth\"):\n        // should be a float\n        try{\n            depth = parseFloat(msg.payload) || 0\n            plan.waypoints[name].depth = depth\n        }catch{\n            return {payload:\"Depth is not float:\"+msg.payload}\n        }\n        break\n    case(\"rpm\"):\n        // should be an int\n        try{\n            rpm = parseInt(msg.payload) || 0\n            plan.waypoints[name].rpm = rpm\n        }catch{\n            return {payload:\"RPM is not int:\"+msg.payload}\n        }\n        break\n    case(\"speed\"):\n        // should be a float\n        try{\n            speed = parseFloat(msg.payload) || 0\n            plan.waypoints[name].speed = speed\n        }catch{\n            return {payload:\"Speed is not float:\"+msg.payload}\n        }\n        break\n    case(\"tolerance\"):\n        // should be a float\n        try{\n            tolerance = parseFloat(msg.payload) || 1.5\n            plan.waypoints[name].tolerance = tolerance\n        }catch{\n            return {payload:\"Tolerance is not float:\"+msg.payload}\n        }\n        break\n    case(\"use_rpm\"):\n        // the widget can only return good stuff, no need to check\n        plan.waypoints[name].use_rpm = msg.payload\n        break\n    case(\"arrival_heading\"):\n        // should be a float\n        try{\n            hdg = parseFloat(msg.payload)\n            if(!hdg){\n                hdg = 0\n                plan.waypoints[name].use_heading = false\n            }\n            if(msg.payload.length == 0){\n                hdg = 0\n                plan.waypoints[name].use_heading = false\n            }\n            plan.waypoints[name].arrival_heading = hdg\n            node.warn(\"Set heading to \"+hdg)\n        }catch{\n            return {payload:\"Arrival Heading is not float:\"+msg.payload}\n        }\n        break\n    case(\"use_hdg\"):\n        // the widget can only return good stuff, no need to check\n        plan.waypoints[name].use_heading = msg.payload\n        break\n}\n\nwp = plan.waypoints[name]\nif(wp.use_rpm && wp.rpm == 0){\n    return {payload:\"Using RPM with 0 RPM set\"}\n}\nif(!wp.use_rpm && wp.speed == 0){\n    return {payload:\"Using Speed with 0 m/s set\"}\n}\n\n\n// and finally, set the new version of the plan globally\nglobal.set(\"planning.plans\", plans)\nreturn {payload:\"Good WP\"}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 2280,
        "wires": [
            [
                "a9a1cb1f994d20c7",
                "8d8ec7d226963d87",
                "a0b437df6c861eeb"
            ]
        ]
    },
    {
        "id": "056f5e043af8751c",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "list waypoints",
        "func": "plans = global.get(\"planning.plans\")\nselected_plan_name = global.get(\"gui.selected_plan_name\")\nselected_waypoint_name = global.get(\"gui.selected_waypoint_name\")\nplan = plans[selected_plan_name]\nif(!(plan)) return {payload:[{title:\"--NO PLAN--\"}]}\n\nlist_items = []\nfor(const wp_name of plan.waypoint_order){\n    \n    if(wp_name == selected_waypoint_name){\n        c = \"orange\"\n    }else{\n        c = \"black\"\n    }\n    title = \"<font color=\" + c +\">\" + wp_name\n    \n    wp = plan.waypoints[wp_name]\n    desc = \"D:\"+wp.depth + \"m \"\n    if(wp.use_rpm) desc += wp.rpm+\"RPM\"\n    else desc += wp.speed+\" m/s\"\n    desc = \"<font color=\" + c +\">\" + desc\n    \n    list_item = {\n        title:title,\n        description:desc\n    }\n    list_items.push(list_item)\n}\n\nif(list_items.length > 0){\n    return {payload:list_items}    \n}else{\n    return {payload:[{title:\"--NO WPS--\"}]}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2040,
        "wires": [
            [
                "800f025819eb4b97"
            ]
        ]
    },
    {
        "id": "800f025819eb4b97",
        "type": "ui_list",
        "z": "118dfccac2ca8a7d",
        "group": "a891e5f5f2effe35",
        "name": "wp list",
        "order": 16,
        "width": 4,
        "height": 7,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 550,
        "y": 2040,
        "wires": [
            [
                "6ffe59ede241e135"
            ]
        ]
    },
    {
        "id": "b391488f986dfd76",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "v2_update_listed_waypoints",
        "links": [
            "c6111a3afd78f6dd",
            "183bd5b7b2e98b79",
            "7e270ac4d823cbc0",
            "a89d30a55f0d8f15",
            "c4ac075074761e27",
            "2b59a55e85d5a494",
            "f9e34b689d61865f",
            "a9a1cb1f994d20c7",
            "0db429c1a28c5125",
            "e892c74e5c27aee1",
            "a36bb4b2665fa3f5",
            "f1a6e1ee1e4985a1",
            "5240cb66038a3873",
            "b78cdc8857134a19",
            "a66420d9524cd5c4",
            "6b697c3f32166673",
            "7bd029d62986c304",
            "d9420850cbb92f49"
        ],
        "x": 295,
        "y": 2040,
        "wires": [
            [
                "056f5e043af8751c"
            ]
        ]
    },
    {
        "id": "358d6aeb2c3a0d60",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 180,
        "y": 2040,
        "wires": []
    },
    {
        "id": "d76ba06e630694d5",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 295,
        "y": 2000,
        "wires": [
            [
                "056f5e043af8751c"
            ]
        ]
    },
    {
        "id": "e711d24e27408c68",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "connected",
        "info": "",
        "x": 200,
        "y": 2000,
        "wires": []
    },
    {
        "id": "9b1e255368d87606",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update_markers_on_map",
        "info": "",
        "x": 590,
        "y": 2500,
        "wires": []
    },
    {
        "id": "7b6802a00469a21b",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 455,
        "y": 2500,
        "wires": []
    },
    {
        "id": "a9a1cb1f994d20c7",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "b391488f986dfd76",
            "4facb95ab46fd02a"
        ],
        "x": 1355,
        "y": 2160,
        "wires": []
    },
    {
        "id": "b1d08397635773e7",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 1460,
        "y": 2160,
        "wires": []
    },
    {
        "id": "02ed5a7d19d7457d",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "selected wp properties",
        "func": "empty = {payload:\"\"}\n\nreset = [\n    empty,\n    empty,\n    empty,\n    empty,\n    {payload:false},\n    empty,\n    empty,\n    {payload:false}\n    ]\n    \nwp_name = global.get(\"gui.selected_waypoint_name\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nif (!plans) return reset\n\nplan = plans[plan_name]\nif (!plan) return reset\n\nswp = plan.waypoints[wp_name]\nif (!swp) return reset\n\nlat = (swp.lat+\"\").substring(0,9)\nlon = (swp.lon+\"\").substring(0,9)\n\nreturn [\n    {payload: lat + \", \"+ lon},\n    {payload:swp.depth},\n    {payload:swp.rpm},\n    {payload:swp.speed},\n    {payload:swp.use_rpm},\n    {payload:swp.tolerance},\n    {payload:swp.arrival_heading},\n    {payload:swp.use_heading}\n    ]",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2400,
        "wires": [
            [
                "e2035429aba2365b"
            ],
            [
                "2a74502517eb6066"
            ],
            [
                "3d055b51f351b42c"
            ],
            [
                "882f41c8b31191b8"
            ],
            [
                "bcec49ac72ce94a2"
            ],
            [
                "1c1a0e9f2bf37d1d"
            ],
            [
                "aafdf17560164b3b"
            ],
            [
                "817651a1360e411d"
            ]
        ]
    },
    {
        "id": "14159dd6c5108f6a",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "v2_update_selected_wp_properties",
        "links": [
            "37613230a3606f04",
            "5955361002a28b95"
        ],
        "x": 325,
        "y": 2400,
        "wires": [
            [
                "7b6802a00469a21b",
                "cec5f1e971f3fccb",
                "f1a6e1ee1e4985a1",
                "15d82582caaea186",
                "02ed5a7d19d7457d",
                "e5b8dc8243617827"
            ]
        ]
    },
    {
        "id": "7f49a8dce701e4e3",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update selected wp properties",
        "info": "",
        "x": 180,
        "y": 2400,
        "wires": []
    },
    {
        "id": "4be3eca46ff883b8",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "rename wp",
        "group": "a891e5f5f2effe35",
        "order": 27,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Rename",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-pencil",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 2900,
        "wires": [
            [
                "8a4d01cc64a23f33"
            ]
        ]
    },
    {
        "id": "6c7fbd89bde43433",
        "type": "ui_toast",
        "z": "118dfccac2ca8a7d",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Rename",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "rename",
        "x": 740,
        "y": 2900,
        "wires": [
            [
                "9aaeba04f848041e"
            ]
        ]
    },
    {
        "id": "8a4d01cc64a23f33",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "Prepare rename",
        "func": "name = global.get(\"gui.selected_waypoint_name\")\nif(!name) return\nreturn {payload:\"Rename \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 2900,
        "wires": [
            [
                "6c7fbd89bde43433"
            ]
        ]
    },
    {
        "id": "9aaeba04f848041e",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "rename selected wp",
        "func": "if(msg.payload == \"Cancel\") return\n\nnew_name = msg.payload\n\nplans = global.get(\"planning.plans\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplan = plans[plan_name]\nif(new_name in Object.keys(plan.waypoints)) return\n\nwp = plan.waypoints[global.get(\"gui.selected_waypoint_name\")]\ndelete plan.waypoints[wp.name]\n\nwp_i = plan.waypoint_order.indexOf(wp.name)\nwp.name = new_name\n\nplan.waypoints[new_name] = wp\nplan.waypoint_order[wp_i] = wp.name\n\n\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_waypoint_name\", new_name)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2900,
        "wires": [
            [
                "a36bb4b2665fa3f5",
                "44f867a505b6b2de",
                "47398b19f75da920"
            ]
        ]
    },
    {
        "id": "4f47debdfa6fbd2b",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "delete wp",
        "group": "a891e5f5f2effe35",
        "order": 28,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Delete the selected wp",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 2940,
        "wires": [
            [
                "45b43f57ef0daa33"
            ]
        ]
    },
    {
        "id": "45b43f57ef0daa33",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "Prepare delete",
        "func": "name = global.get(\"gui.selected_waypoint_name\")\nif(!name) return\nreturn {payload:\"Delete \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 2940,
        "wires": [
            [
                "d147bdc21a92ec07"
            ]
        ]
    },
    {
        "id": "d147bdc21a92ec07",
        "type": "ui_toast",
        "z": "118dfccac2ca8a7d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "DELETE",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "delete",
        "x": 730,
        "y": 2940,
        "wires": [
            [
                "4849809578a150bb"
            ]
        ]
    },
    {
        "id": "4849809578a150bb",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "delete selected wp",
        "func": "if(msg.payload == \"Cancel\") return\n\nplans = global.get(\"planning.plans\")\nplan = plans[global.get(\"gui.selected_plan_name\")]\nwp = plan.waypoints[global.get(\"gui.selected_waypoint_name\")]\ndelete plan.waypoints[wp.name]\nnew_order = []\nfor(const wp_i in plan.waypoint_order){\n    wp_i_name = plan.waypoint_order[wp_i]\n    if(wp_i_name === wp.name) continue\n    new_order.push(wp_i_name)\n}\nplan.waypoint_order = new_order\n\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_waypoint_name\", null)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2940,
        "wires": [
            [
                "a36bb4b2665fa3f5",
                "44f867a505b6b2de",
                "47398b19f75da920"
            ]
        ]
    },
    {
        "id": "6b9a90bf767b67d4",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 1220,
        "y": 2940,
        "wires": []
    },
    {
        "id": "a36bb4b2665fa3f5",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "b391488f986dfd76",
            "4facb95ab46fd02a"
        ],
        "x": 1105,
        "y": 2940,
        "wires": []
    },
    {
        "id": "984e71cae9bab076",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1250,
        "y": 2980,
        "wires": []
    },
    {
        "id": "44f867a505b6b2de",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 1105,
        "y": 2980,
        "wires": []
    },
    {
        "id": "6b1f1355d36a78d4",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "toggle",
        "func": "spn = global.get(\"gui.selected_plan_name\")\nif(!spn) return {enabled:false}\n\nplans = global.get(\"planning.plans\")\nplan = plans[spn]\n\nif(plan.waypoint_order.length == 0) return {enabled:false}\n\nswn = global.get(\"gui.selected_waypoint_name\")\nif(!swn) return {enabled:false}\n\nif(!global.get(\"gui.planning_mode\")) return {enabled:false}\n\nreturn {enabled:true}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2280,
        "wires": [
            [
                "e2035429aba2365b",
                "2a74502517eb6066",
                "3d055b51f351b42c",
                "882f41c8b31191b8",
                "bcec49ac72ce94a2",
                "43935e76784d6588",
                "1c1a0e9f2bf37d1d",
                "02ed5a7d19d7457d",
                "a0b437df6c861eeb",
                "aafdf17560164b3b",
                "817651a1360e411d"
            ]
        ]
    },
    {
        "id": "a3e23aac87d3c7f3",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "toggle_wp_properties",
        "links": [
            "0be397d4764637a6",
            "f49c58686629d1ad",
            "4308dd074208279a",
            "cec5f1e971f3fccb",
            "01868b25b2ab2ed7",
            "ef191736d08ddbf6"
        ],
        "x": 345,
        "y": 2280,
        "wires": [
            [
                "6b1f1355d36a78d4"
            ]
        ]
    },
    {
        "id": "defcec95fb2be972",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle wp props",
        "info": "",
        "x": 240,
        "y": 2280,
        "wires": []
    },
    {
        "id": "cec5f1e971f3fccb",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "a3e23aac87d3c7f3"
        ],
        "x": 455,
        "y": 2540,
        "wires": []
    },
    {
        "id": "ee114cfb19ea0598",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle wp props",
        "info": "",
        "x": 560,
        "y": 2540,
        "wires": []
    },
    {
        "id": "1eb0bf97682baaa7",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "wp buttons toggle",
        "links": [
            "43935e76784d6588"
        ],
        "x": 285,
        "y": 2920,
        "wires": [
            [
                "4be3eca46ff883b8",
                "4f47debdfa6fbd2b"
            ]
        ]
    },
    {
        "id": "d56f6c0a66c2cb3b",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "wp button toggle",
        "info": "",
        "x": 180,
        "y": 2920,
        "wires": []
    },
    {
        "id": "43935e76784d6588",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "1eb0bf97682baaa7",
            "f9b651e097933009",
            "78a5748dd4353459",
            "68ffa87cf6ccf948"
        ],
        "x": 735,
        "y": 2220,
        "wires": []
    },
    {
        "id": "47d4680feaf78237",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "wp button toggle",
        "info": "",
        "x": 840,
        "y": 2220,
        "wires": []
    },
    {
        "id": "7b5e02497d020b66",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "toggle planning mode toggle",
        "info": "",
        "x": 300,
        "y": 2100,
        "wires": []
    },
    {
        "id": "77a98eb0215f0554",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "toggle planning_mode toggle",
        "links": [
            "7dd2fd0c91d149d6",
            "064286a6a174b304"
        ],
        "x": 455,
        "y": 2100,
        "wires": [
            [
                "800f025819eb4b97"
            ]
        ]
    },
    {
        "id": "0df696d4884c6cde",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 560,
        "y": 2580,
        "wires": []
    },
    {
        "id": "f1a6e1ee1e4985a1",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "b391488f986dfd76",
            "4facb95ab46fd02a"
        ],
        "x": 455,
        "y": 2580,
        "wires": []
    },
    {
        "id": "adc3987e947134fa",
        "type": "inject",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "6614fad89ea19f5e"
            ]
        ]
    },
    {
        "id": "6614fad89ea19f5e",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "make planning",
        "func": "global.set(\"planning.plans\", global.get(\"planning.plans\") || {})\nglobal.set(\"planning.tracks\", global.get(\"planning.tracks\") || {})\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6be45ee201d86b7b",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "v2_from_point",
        "links": [
            "e2f686ad8c4ade79"
        ],
        "x": 275,
        "y": 1440,
        "wires": [
            [
                "61d29540eafb20a9"
            ]
        ]
    },
    {
        "id": "bdb73316e9872bf0",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "point",
        "info": "",
        "x": 200,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ec6d4a971af5a40e",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "point can only happen if planning mode = true",
        "info": "",
        "x": 320,
        "y": 1400,
        "wires": []
    },
    {
        "id": "61d29540eafb20a9",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "add new wp to selected_plan",
        "func": "point = msg.payload\nif(!point.name || point.name===\"\") return\n\nplans = global.get(\"planning.plans\")\nif(!(plans)){\n    node.warn(\"Plans:\"+plans)\n    return\n}\n\nplan_name = global.get(\"gui.selected_plan_name\")\nplan = plans[plan_name]\n\n\nfunction new_wp(point){\n    return {\n        name:point.name,\n        lat:point.lat,\n        lon:point.lon,\n        depth:0,\n        rpm:0,\n        speed:0,\n        use_rpm:false,\n        tolerance:1.5,\n        arrival_heading:0,\n        use_heading:false\n    }\n}\n\nfunction copy_wp(wp, point){\n    return {\n        name:point.name,\n        lat:point.lat,\n        lon:point.lon,\n        depth:wp.depth,\n        rpm:wp.rpm,\n        speed:wp.speed,\n        use_rpm:wp.use_rpm,\n        tolerance:wp.tolerance,\n        arrival_heading:0,\n        use_heading:false\n    }\n}\n\nif(plan.waypoint_order.length > 0){\n    prev_wp_name = plan.waypoint_order[plan.waypoint_order.length-1]\n    prev_wp = plan.waypoints[prev_wp_name]\n    wp = copy_wp(prev_wp, point)\n}else{\n    wp = new_wp(point)\n}\n\nplan.waypoints[wp.name] = wp\nplan.waypoint_order.push(wp.name)\nplans[plan_name] = plan\nglobal.set(\"planning.plans\", plans)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1440,
        "wires": [
            [
                "1a79ea6546186952",
                "7bd029d62986c304",
                "338233d5c53202af",
                "1571fc363910e9e0"
            ]
        ]
    },
    {
        "id": "1a79ea6546186952",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "remove point from map, select wp",
        "func": "global.set(\"gui.selected_waypoint_name\", msg.payload.name)\n\nreturn {payload:{\n    \"action\":\"delete\",\n    \"name\":msg.payload.name,\n    \"deleted\":true\n}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1440,
        "wires": [
            [
                "cac2337cf56cd5d8"
            ]
        ]
    },
    {
        "id": "40988a531007c238",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 770,
        "y": 1480,
        "wires": []
    },
    {
        "id": "7bd029d62986c304",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31",
            "4facb95ab46fd02a",
            "b391488f986dfd76"
        ],
        "x": 635,
        "y": 1480,
        "wires": []
    },
    {
        "id": "6a16208409d62139",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "update lat lon of wp",
        "func": "// {\"name\":\"t3\",\n// \"label\":\"t3\",\n// \"layer\":\"planning\",\n// \"draggable\":true,\n// \"lat\":58.251455,\n// \"lon\":11.456615,\n// \"hdg\":0,\n// \"ttl\":0,\n// \"icon\":\"circle\",\n// \"iconColor\":\"#910000\",\n// \"action\":\"move\",\n// \"from\":{\"lat\":58.251004,\"lon\":11.457687}}\n\nif(!global.get(\"gui.planning_mode\")) return {}\n\n// gotta assume a plan is selected\nselected_plan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nplan = plans[selected_plan_name]\n\nwp = msg.payload\n// wp.name is sth like \"XXX_handle\"\nreal_wp_name = wp.name.split(\"_\")[0]\n\nif(!(real_wp_name in plan.waypoints)){\n    node.warn(real_wp_name+\" not in selected plan:\"+selected_plan_name)\n    return\n}\n\nplan.waypoints[real_wp_name].lat = wp.lat\nplan.waypoints[real_wp_name].lon = wp.lon\n\nglobal.set(\"planning.plans\", plans)\n\nreturn {payload:{}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1640,
        "wires": [
            [
                "d9420850cbb92f49",
                "37613230a3606f04",
                "38442de6ffbfa350",
                "bf9ecbc4c69e672d"
            ]
        ]
    },
    {
        "id": "e4931a4e51ece515",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "links": [
            "7d660feb1bc9828d"
        ],
        "x": 275,
        "y": 1640,
        "wires": [
            [
                "6a16208409d62139"
            ]
        ]
    },
    {
        "id": "002f8bd750316a7d",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "move",
        "info": "",
        "x": 200,
        "y": 1640,
        "wires": []
    },
    {
        "id": "d9420850cbb92f49",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31",
            "4facb95ab46fd02a",
            "b391488f986dfd76"
        ],
        "x": 635,
        "y": 1600,
        "wires": []
    },
    {
        "id": "f270e6e724d85405",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of wps",
        "info": "",
        "x": 760,
        "y": 1600,
        "wires": []
    },
    {
        "id": "8aa18f089830163b",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update selected wp properties",
        "info": "",
        "x": 800,
        "y": 1640,
        "wires": []
    },
    {
        "id": "37613230a3606f04",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "a4bca789dbb9018b",
            "14159dd6c5108f6a"
        ],
        "x": 635,
        "y": 1640,
        "wires": []
    },
    {
        "id": "00a99eb1193a340b",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update_markers_on_map",
        "info": "",
        "x": 790,
        "y": 1680,
        "wires": []
    },
    {
        "id": "38442de6ffbfa350",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 635,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1c5049d6dda20bbc",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update_markers_on_map",
        "info": "",
        "x": 800,
        "y": 1520,
        "wires": []
    },
    {
        "id": "338233d5c53202af",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 635,
        "y": 1520,
        "wires": []
    },
    {
        "id": "cac2337cf56cd5d8",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 945,
        "y": 1440,
        "wires": []
    },
    {
        "id": "6679e1eeaf40852b",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "map",
        "info": "",
        "x": 1020,
        "y": 1440,
        "wires": []
    },
    {
        "id": "93a000294b845d54",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "f73376f194b1fc1a",
            "5258271b9369afd2"
        ],
        "x": 635,
        "y": 1400,
        "wires": []
    },
    {
        "id": "c64cca6fba784a25",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "compare gui and robot plans",
        "info": "",
        "x": 810,
        "y": 1400,
        "wires": []
    },
    {
        "id": "06466ed6e810bd76",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "update plan hash",
        "links": [
            "d96279ee9657689b",
            "1571fc363910e9e0",
            "bf9ecbc4c69e672d",
            "6d78493b0b803312",
            "e9793c71cb6a6951",
            "dbd21dee0b094bfe",
            "15d82582caaea186",
            "47398b19f75da920",
            "8d8ec7d226963d87"
        ],
        "x": 305,
        "y": 1880,
        "wires": [
            [
                "4b9f5f72b1099bc1"
            ]
        ]
    },
    {
        "id": "90839d282e99b663",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 210,
        "y": 1880,
        "wires": []
    },
    {
        "id": "1571fc363910e9e0",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "06466ed6e810bd76"
        ],
        "x": 635,
        "y": 1360,
        "wires": []
    },
    {
        "id": "32b7b8d849ea40af",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 760,
        "y": 1360,
        "wires": []
    },
    {
        "id": "bf9ecbc4c69e672d",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "06466ed6e810bd76"
        ],
        "x": 635,
        "y": 1720,
        "wires": []
    },
    {
        "id": "2a4a220ef90b4eaa",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 750,
        "y": 1720,
        "wires": []
    },
    {
        "id": "6d78493b0b803312",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "06466ed6e810bd76"
        ],
        "x": 1165,
        "y": 780,
        "wires": []
    },
    {
        "id": "cbe4c91665aa47e7",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 1270,
        "y": 780,
        "wires": []
    },
    {
        "id": "e9793c71cb6a6951",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "06466ed6e810bd76"
        ],
        "x": 685,
        "y": 520,
        "wires": []
    },
    {
        "id": "b78abe58744477e8",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 790,
        "y": 520,
        "wires": []
    },
    {
        "id": "dbd21dee0b094bfe",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "06466ed6e810bd76"
        ],
        "x": 915,
        "y": 100,
        "wires": []
    },
    {
        "id": "524e44d877e74b0d",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 1020,
        "y": 100,
        "wires": []
    },
    {
        "id": "4b9f5f72b1099bc1",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "hash",
        "func": "plans = global.get(\"planning.plans\")\nspn = global.get(\"gui.selected_plan_name\")\nplan = plans[spn]\nif(!plan) return\n// dont update the hash if the plan has no WPs\n// so that we can send just a name and hash to run\n// an onboard plan\nif(plan.waypoint_order.length == 0) return\n\n// dont hash the hash field lol\n// just extract and stringify the relevant parts,\n// and hash that string instead\nwps = JSON.stringify(plan.waypoints)\nwporder = JSON.stringify(plan.waypoint_order)\ntimeout = JSON.stringify(plan.timeout)\nstrplan = plan.name + wps + wporder + timeout\n\n\nhash = crypto\n    .createHash(\"md5\")\n    .update(strplan)\n    .digest(\"hex\")\n\n\nplan.hash = hash\nglobal.set(\"planning.plans\", plans)\n\n\nreturn {payload:hash}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 400,
        "y": 1880,
        "wires": [
            [
                "2b0df7081d956d2c"
            ]
        ]
    },
    {
        "id": "20c5ddc65f2ead26",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 550,
        "y": 2620,
        "wires": []
    },
    {
        "id": "15d82582caaea186",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "06466ed6e810bd76"
        ],
        "x": 455,
        "y": 2620,
        "wires": []
    },
    {
        "id": "47398b19f75da920",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "06466ed6e810bd76"
        ],
        "x": 1105,
        "y": 2900,
        "wires": []
    },
    {
        "id": "b53e7a4704fcbdef",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 1210,
        "y": 2900,
        "wires": []
    },
    {
        "id": "376123521c59316f",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update hash",
        "info": "",
        "x": 1450,
        "y": 2200,
        "wires": []
    },
    {
        "id": "8d8ec7d226963d87",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "06466ed6e810bd76"
        ],
        "x": 1355,
        "y": 2200,
        "wires": []
    },
    {
        "id": "2b0df7081d956d2c",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "f73376f194b1fc1a",
            "5258271b9369afd2"
        ],
        "x": 495,
        "y": 1880,
        "wires": []
    },
    {
        "id": "044cd84bc31d8817",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "compare gui and robot plans",
        "info": "",
        "x": 740,
        "y": 1880,
        "wires": []
    },
    {
        "id": "6ffe59ede241e135",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "get/set selected wp",
        "func": "title = msg.payload.title\nif(title == \"--NO PLANS--\" || title == \"--NO WPS--\") return\n\nwp_name = title.slice(title.indexOf(\">\")+1)\n\nglobal.set(\"gui.selected_waypoint_name\", wp_name)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "5955361002a28b95"
            ]
        ]
    },
    {
        "id": "cb506e82744d79d8",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update selected wp properties",
        "info": "",
        "x": 980,
        "y": 2040,
        "wires": []
    },
    {
        "id": "5955361002a28b95",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "a4bca789dbb9018b",
            "14159dd6c5108f6a"
        ],
        "x": 835,
        "y": 2040,
        "wires": []
    },
    {
        "id": "1c1a0e9f2bf37d1d",
        "type": "ui_text_input",
        "z": "118dfccac2ca8a7d",
        "name": "tolerance",
        "label": "Tolerance",
        "tooltip": "in m/s",
        "group": "a891e5f5f2effe35",
        "order": 20,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "tolerance",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 880,
        "y": 2480,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "2768b84356fdabdf",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "fd8f7e829592b528"
        ],
        "x": 915,
        "y": 300,
        "wires": []
    },
    {
        "id": "7b1eebfd1bf99665",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "download plan",
        "info": "",
        "x": 1020,
        "y": 300,
        "wires": []
    },
    {
        "id": "45ba332d5bed9ca9",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "create new plan",
        "links": [
            "3a33c5377001053c"
        ],
        "x": 325,
        "y": 520,
        "wires": [
            [
                "ae71311b8a1a08db"
            ]
        ]
    },
    {
        "id": "ed50b7ee3acdb865",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "create new plan",
        "info": "",
        "x": 220,
        "y": 520,
        "wires": []
    },
    {
        "id": "a0b437df6c861eeb",
        "type": "ui_text",
        "z": "118dfccac2ca8a7d",
        "group": "a891e5f5f2effe35",
        "order": 31,
        "width": 9,
        "height": 2,
        "name": "wp status",
        "label": "WP status: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 1400,
        "y": 2240,
        "wires": []
    },
    {
        "id": "f4ecbe203d64d0e5",
        "type": "ui_text_input",
        "z": "118dfccac2ca8a7d",
        "name": "timeout",
        "label": "Timeout(mins)",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 780,
        "y": 700,
        "wires": [
            [
                "d0af4967b1f7c693"
            ]
        ]
    },
    {
        "id": "4cf8b30f5f67ced4",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "update timeout",
        "links": [
            "77ebe99f7d2b7240",
            "c710c4125293b7ca"
        ],
        "x": 395,
        "y": 700,
        "wires": [
            [
                "3321226eaa46a9af"
            ]
        ]
    },
    {
        "id": "77ebe99f7d2b7240",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "4cf8b30f5f67ced4"
        ],
        "x": 915,
        "y": 340,
        "wires": []
    },
    {
        "id": "328e83b2cd904678",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update timeout",
        "info": "",
        "x": 1030,
        "y": 340,
        "wires": []
    },
    {
        "id": "ccd6a4302782a93e",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update timeout",
        "info": "",
        "x": 280,
        "y": 700,
        "wires": []
    },
    {
        "id": "3321226eaa46a9af",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "prepare timeout",
        "func": "spn = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nplan = plans[spn]\nif(!plan) return\n\nreturn {payload:plan.timeout}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 700,
        "wires": [
            [
                "f4ecbe203d64d0e5"
            ]
        ]
    },
    {
        "id": "d0af4967b1f7c693",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "set timeout of plan",
        "func": "spn = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nplan = plans[spn]\nif(!plan) return\n\nplan.timeout = parseInt(msg.payload,10) || 0\n\nglobal.set(\"planning.plans\", plans)\n\nreturn {payload:spn}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 700,
        "wires": [
            [
                "3321226eaa46a9af",
                "6d78493b0b803312",
                "661889365b3086ee"
            ]
        ]
    },
    {
        "id": "c710c4125293b7ca",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "4cf8b30f5f67ced4"
        ],
        "x": 685,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4ab1f0a1621f96a",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update timeout",
        "info": "",
        "x": 800,
        "y": 480,
        "wires": []
    },
    {
        "id": "90ed6d165a69da9a",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "7c8b008791190499"
        ],
        "x": 685,
        "y": 600,
        "wires": []
    },
    {
        "id": "06fd8291d3e561ab",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of plans",
        "info": "",
        "x": 810,
        "y": 600,
        "wires": []
    },
    {
        "id": "fb65790ad930b088",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "update wp status",
        "links": [
            "095836468f87d472",
            "50627450009e152f",
            "e5b8dc8243617827",
            "ede3c3d661bce3f9"
        ],
        "x": 1085,
        "y": 2360,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "2a6a98efde60347f",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update selected wp status",
        "info": "",
        "x": 1150,
        "y": 2400,
        "wires": []
    },
    {
        "id": "e5b8dc8243617827",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "fb65790ad930b088"
        ],
        "x": 455,
        "y": 2660,
        "wires": []
    },
    {
        "id": "e66df6f1a61b5b9a",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update selected wp status",
        "info": "",
        "x": 590,
        "y": 2660,
        "wires": []
    },
    {
        "id": "ede3c3d661bce3f9",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "fb65790ad930b088"
        ],
        "x": 915,
        "y": 60,
        "wires": []
    },
    {
        "id": "9c2c417932cf8e07",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update selected wp status",
        "info": "",
        "x": 1050,
        "y": 60,
        "wires": []
    },
    {
        "id": "50ea19eaaad7068e",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "bad plans",
        "func": "plans = global.get(\"planning.plans\")\n\nfor(const plan_name in plans){\n    plan = plans[plan_name]\n    if(plan_name == \"\"){\n        plans[plan.name] = plan\n        delete plans[plan_name]\n        node.warn(\"Replaced \"+plan.name)\n    }\n    if(!plan.timeout) plan.timeout=0\n}\n\n\nglobal.set(\"planning.plans\", plans)\n\nnode.warn(JSON.stringify(Object.keys(plans)))\nnode.warn(JSON.stringify(plans[\"\"]))",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "5952cfc79c5f6b64"
            ]
        ]
    },
    {
        "id": "c5eea9164d4cb3a1",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "cleanup",
        "group": "a891e5f5f2effe35",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Cleanup",
        "tooltip": "Removes bad plans",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 180,
        "wires": [
            [
                "50ea19eaaad7068e"
            ]
        ]
    },
    {
        "id": "5952cfc79c5f6b64",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "7c8b008791190499"
        ],
        "x": 455,
        "y": 180,
        "wires": []
    },
    {
        "id": "18b7ce48865499b0",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "update list of plans",
        "info": "",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "aafdf17560164b3b",
        "type": "ui_text_input",
        "z": "118dfccac2ca8a7d",
        "name": "arrival_heading",
        "label": "Arrival Heading",
        "tooltip": "Desired heading of the robot when it arrives this WP",
        "group": "a891e5f5f2effe35",
        "order": 25,
        "width": 5,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "arrival_heading",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 900,
        "y": 2520,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "d0b5e26716f0100c",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "Request dubins plan",
        "info": "",
        "x": 130,
        "y": 1220,
        "wires": []
    },
    {
        "id": "604a48bfd4e46372",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "plan_dubins",
        "group": "a891e5f5f2effe35",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Request Dubins",
        "tooltip": "Plan a trajectory with dubins",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "click",
        "payloadType": "str",
        "topic": "cmd",
        "topicType": "msg",
        "x": 450,
        "y": 1220,
        "wires": [
            [
                "2bbe537eb96f877c"
            ]
        ]
    },
    {
        "id": "eaaf7bb97a0661a2",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "Send cmd to BT",
        "info": "",
        "x": 640,
        "y": 1200,
        "wires": []
    },
    {
        "id": "fc19b6ee859abe64",
        "type": "link out",
        "z": "118dfccac2ca8a7d",
        "name": "",
        "mode": "link",
        "links": [
            "9f0ef523d4f95e85"
        ],
        "x": 715,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2bbe537eb96f877c",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "combine",
        "func": "if(msg.topic == 'rad'){\n    flow.set('rad', msg.payload)\n    node.status(\"Rad=\"+msg.payload)\n}\n\nif(msg.payload == 'click'){\n    rad = flow.get('rad')\n    return {payload:{cmd:\"plan_dubins\", arg:rad}}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1240,
        "wires": [
            [
                "fc19b6ee859abe64"
            ]
        ]
    },
    {
        "id": "4a743413d2cb5e7a",
        "type": "inject",
        "z": "118dfccac2ca8a7d",
        "name": "3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 290,
        "y": 1260,
        "wires": [
            [
                "628394529cff0cf9"
            ]
        ]
    },
    {
        "id": "817651a1360e411d",
        "type": "ui_switch",
        "z": "118dfccac2ca8a7d",
        "name": "use_heading",
        "label": "Use hdg",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 26,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "use_hdg",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 890,
        "y": 2560,
        "wires": [
            [
                "c86256cca6fc01b2"
            ]
        ]
    },
    {
        "id": "628394529cff0cf9",
        "type": "ui_text_input",
        "z": "118dfccac2ca8a7d",
        "name": "turning_rad",
        "label": "Turning Rad",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "rad",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 450,
        "y": 1260,
        "wires": [
            [
                "2bbe537eb96f877c"
            ]
        ]
    },
    {
        "id": "55ae649eaf2b1706",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "move wp up",
        "group": "a891e5f5f2effe35",
        "order": 29,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-arrow-up",
        "payload": "up",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 2980,
        "wires": [
            [
                "24aec1d0ef5a7090"
            ]
        ]
    },
    {
        "id": "3a36cc423265c277",
        "type": "ui_button",
        "z": "118dfccac2ca8a7d",
        "name": "move wp down",
        "group": "a891e5f5f2effe35",
        "order": 30,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-arrow-down",
        "payload": "down",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 3020,
        "wires": [
            [
                "24aec1d0ef5a7090"
            ]
        ]
    },
    {
        "id": "68ffa87cf6ccf948",
        "type": "link in",
        "z": "118dfccac2ca8a7d",
        "name": "wp buttons toggle",
        "links": [
            "43935e76784d6588"
        ],
        "x": 295,
        "y": 3000,
        "wires": [
            [
                "55ae649eaf2b1706",
                "3a36cc423265c277"
            ]
        ]
    },
    {
        "id": "2a7364dedf614cd4",
        "type": "comment",
        "z": "118dfccac2ca8a7d",
        "name": "wp button toggle",
        "info": "",
        "x": 190,
        "y": 3000,
        "wires": []
    },
    {
        "id": "24aec1d0ef5a7090",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "reorder-wp",
        "func": "wp_name = global.get(\"gui.selected_waypoint_name\")\nif(!wp_name) return\nplans = global.get(\"planning.plans\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplan = plans[plan_name]\nif(!plan) return\nif(!(wp_name in plan.waypoints)){\n    node.status(\"Selected wp not in selected plan\")\n    return\n}\n\nwp_index = plan.waypoint_order.indexOf(wp_name)\nif(wp_index == -1){\n    node.status(\"WP not found\")\n    return\n}\n\nif(wp_index == 0 && msg.payload == \"up\"){\n    node.status(\"Cant move 0th wp up\")\n    return\n}\n\nif(wp_index+1 == plan.waypoint_order.length && msg.payload == \"down\"){\n    node.status(\"Cant move last wp down\")\n    return\n}\nwpo = plan.waypoint_order\nif(msg.payload == \"up\"){\n    prev = plan.waypoint_order[wp_index-1]\n    plan.waypoint_order[wp_index-1] = plan.waypoint_order[wp_index]\n    plan.waypoint_order[wp_index] = prev\n    node.status(\"moved up\")\n}\nif(msg.payload == \"down\"){\n    prev = plan.waypoint_order[wp_index+1]\n    plan.waypoint_order[wp_index+1] = plan.waypoint_order[wp_index]\n    plan.waypoint_order[wp_index] = prev\n    node.status(\"moved down\")\n}\n\nplan.waypoint_order = wpo\nplans[plan_name] = plan\nglobal.set(\"planning.plans\", plans)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2980,
        "wires": [
            [
                "47398b19f75da920",
                "a36bb4b2665fa3f5",
                "44f867a505b6b2de"
            ]
        ]
    },
    {
        "id": "0e194ffbde76f700",
        "type": "ui_gauge",
        "z": "118dfccac2ca8a7d",
        "name": "timeoutgauge",
        "group": "81d4dedb195938c4",
        "order": 4,
        "width": 4,
        "height": 2,
        "gtype": "gage",
        "title": "Timeout",
        "label": "s",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#ff0000",
            "#e6e600",
            "#80ff80"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1020,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7e3bed0f31699d86",
        "type": "function",
        "z": "118dfccac2ca8a7d",
        "name": "set robot timeout",
        "func": "selected_plan_name = global.get(\"gui.selected_plan_name\")\nif(!selected_plan_name) return\n\nplans = global.get(\"planning.plans\")\nplan = plans[selected_plan_name]\n\nrobot_name = global.get(\"gui.selected_robot_name\")\nrobots = global.get(\"robot_states\")\nrobot = robots[robot_name]\nif(!robot) return\n\nif(msg.payload == 0){\n    // start the timeout counter\n    max = plan.timeout*60\n    started =  Date.now()/1000\n    robot.gui.plan_timeout = {max:max, start_time:started}\n    return {payload:-1, ui_control:{max:max}}\n}\n\nif(msg.payload == 1 || msg.payload == 3){\n    // stop the timeout\n    robot.gui.plan_timeout.start_time = null\n    return {payload:-1}\n}\n\nif(msg.payload == \"tick\"){\n    if(!robot.gui.plan_timeout) return\n    if(!robot.gui.plan_timeout.start_time) return\n    if(robot.bt.current_plan.plan_state != 0) return\n    now = Date.now()/1000\n    elapsed = now - robot.gui.plan_timeout.start_time\n    remaining = parseInt(robot.gui.plan_timeout.max - elapsed)\n    node.status(robot_name+\"t:\"+remaining)\n    if(remaining > 0){\n        return {payload:remaining, ui_control:{max:robot.gui.plan_timeout.max}}    \n    }else{\n        return {payload:-1}\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1120,
        "wires": [
            [
                "0e194ffbde76f700"
            ]
        ]
    },
    {
        "id": "899e218540742971",
        "type": "inject",
        "z": "118dfccac2ca8a7d",
        "name": "tick",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "tick",
        "payloadType": "str",
        "x": 670,
        "y": 1160,
        "wires": [
            [
                "7e3bed0f31699d86"
            ]
        ]
    },
    {
        "id": "4295e5f475da817c",
        "type": "rbe",
        "z": "426a5003775714f9",
        "name": "when robot plan changes",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "bt.current_plan",
        "topi": "topic",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "32e9ffddf60a4dce",
                "acacd290d4c6bb07",
                "5fce2487e793ce83"
            ]
        ]
    },
    {
        "id": "fe8c619d378b5425",
        "type": "comment",
        "z": "426a5003775714f9",
        "name": "update_markers_on_map",
        "info": "",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "32e9ffddf60a4dce",
        "type": "link out",
        "z": "426a5003775714f9",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 675,
        "y": 320,
        "wires": []
    },
    {
        "id": "aa2efb44c882b0a5",
        "type": "ui_text",
        "z": "426a5003775714f9",
        "group": "81d4dedb195938c4",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Current plan text",
        "label": "Current plan",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1020,
        "y": 360,
        "wires": []
    },
    {
        "id": "acacd290d4c6bb07",
        "type": "function",
        "z": "426a5003775714f9",
        "name": "prepare plan text",
        "func": "srn = global.get(\"gui.selected_robot_name\")\nif(!srn) return\nrobots = global.get(\"robot_states\")\nrobot = robots[srn]\nif(!robot) return\n\nplan = robot.bt.current_plan\ne = \"?\"\nc = \"\"\nswitch(plan.plan_state){\n    case 0: //running\n        c = global.get(\"gui.colors.selected\")\n        e = \"▶️\"\n        break\n    case 1: // stopped\n        c = global.get(\"gui.colors.old\")\n        e = \"⏹️\"\n        break\n    case 2: // paused\n        c = global.get(\"gui.colors.active\")\n        e = \"⏸️\"\n        break\n    case 3: // emergency\n        c = global.get(\"gui.colors.old\")\n        e = \"‼️\"\n        break\n    case 4: // received\n        c = global.get(\"gui.colors.active\")\n        e = \"📥\"\n        break\n    case 5: // complete\n        c = global.get(\"gui.colors.active\")\n        e = \"✅\" \n        break\n}\n\nt = e + \" <font color=\" + c +\">\" + plan.name\n\nreturn {payload:t}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 360,
        "wires": [
            [
                "aa2efb44c882b0a5"
            ]
        ]
    },
    {
        "id": "0469c06a6cae1551",
        "type": "rbe",
        "z": "426a5003775714f9",
        "name": "when robot wp changes",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "bt.current_wp",
        "topi": "topic",
        "x": 510,
        "y": 320,
        "wires": [
            [
                "32e9ffddf60a4dce"
            ]
        ]
    },
    {
        "id": "5fce2487e793ce83",
        "type": "function",
        "z": "426a5003775714f9",
        "name": "compare plan to gui",
        "func": "srn = global.get(\"gui.selected_robot_name\")\nif(!srn) return\nrobots = global.get(\"robot_states\")\nrobot = robots[srn]\nif(!robot) return\n\nrobot_plan = robot.bt.current_plan\n\nplans = global.get(\"planning.plans\")\ngui_plan = plans[robot_plan.name]\n\nglobal.set(\"gui.plan_is_synched\", false)\n\nif(!gui_plan) return {payload:false}\n\nif(gui_plan.hash != robot_plan.hash) return {payload:false}\n\nglobal.set(\"gui.plan_is_synched\", true)\nreturn {payload:true}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 400,
        "wires": [
            [
                "5e9ecba260dfcb02",
                "b6b8855e1794d55b"
            ]
        ]
    },
    {
        "id": "5258271b9369afd2",
        "type": "link in",
        "z": "426a5003775714f9",
        "name": "compare gui and robot plans",
        "links": [
            "0f1be0abe9e97cb2",
            "3f285282ab31161f",
            "e986e36477fb6a0d",
            "9e017fbc9b746fb9",
            "050fbc517aa6868e",
            "69e69b055fdc6d3d",
            "af81f151aebb2dcc",
            "eea7642c36541bb4",
            "70250172ab448184",
            "7a900f9b88f08881",
            "b1d670b56064f77b",
            "93a000294b845d54",
            "81b15c79977adae3",
            "c8d1d56bfe7dfd0c",
            "2b0df7081d956d2c"
        ],
        "x": 415,
        "y": 400,
        "wires": [
            [
                "14728ef03c8e533e"
            ]
        ]
    },
    {
        "id": "14728ef03c8e533e",
        "type": "delay",
        "z": "426a5003775714f9",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 400,
        "wires": [
            [
                "5fce2487e793ce83"
            ]
        ]
    },
    {
        "id": "5e9ecba260dfcb02",
        "type": "link out",
        "z": "426a5003775714f9",
        "name": "",
        "mode": "link",
        "links": [
            "2012902f23543fb8",
            "c9bacdb8aaa806ab"
        ],
        "x": 955,
        "y": 440,
        "wires": []
    },
    {
        "id": "3ef4bec07bcbac49",
        "type": "comment",
        "z": "426a5003775714f9",
        "name": "toggle plan buttons",
        "info": "",
        "x": 1170,
        "y": 440,
        "wires": []
    },
    {
        "id": "b6b8855e1794d55b",
        "type": "ui_text",
        "z": "426a5003775714f9",
        "group": "81d4dedb195938c4",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "plan is syn",
        "label": "Plan is synched: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 400,
        "wires": []
    },
    {
        "id": "7fb46ac2b53d8351",
        "type": "ui_text",
        "z": "426a5003775714f9",
        "group": "81d4dedb195938c4",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "live wp enabled",
        "label": "Live WP:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 200,
        "wires": []
    },
    {
        "id": "6baca8a9988c1539",
        "type": "change",
        "z": "426a5003775714f9",
        "name": "live_wp_enable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bt.live_wp_enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 200,
        "wires": [
            [
                "7fb46ac2b53d8351"
            ]
        ]
    },
    {
        "id": "0228e3204df7c215",
        "type": "ui_text",
        "z": "426a5003775714f9",
        "group": "81d4dedb195938c4",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "gui wp enabled",
        "label": "GUI WP:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 240,
        "wires": []
    },
    {
        "id": "875128b7b308777c",
        "type": "change",
        "z": "426a5003775714f9",
        "name": "gui_wp_enable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bt.gui_wp_enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "0228e3204df7c215"
            ]
        ]
    },
    {
        "id": "a89625b5c5189eb9",
        "type": "ui_text",
        "z": "426a5003775714f9",
        "group": "81d4dedb195938c4",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "algae farm enabled",
        "label": "Algae farm:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 280,
        "wires": []
    },
    {
        "id": "f0924656e45728a7",
        "type": "change",
        "z": "426a5003775714f9",
        "name": "algae_farm_enable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bt.algae_farm_enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 280,
        "wires": [
            [
                "a89625b5c5189eb9"
            ]
        ]
    },
    {
        "id": "5cce339f58f2ade0",
        "type": "comment",
        "z": "426a5003775714f9",
        "name": "compare gui and robot plans",
        "info": "",
        "x": 160,
        "y": 400,
        "wires": []
    },
    {
        "id": "62118d116054aad4",
        "type": "link in",
        "z": "426a5003775714f9",
        "name": "",
        "links": [
            "14a23ba06f41f8b0"
        ],
        "x": 295,
        "y": 280,
        "wires": [
            [
                "6baca8a9988c1539",
                "875128b7b308777c",
                "f0924656e45728a7",
                "0469c06a6cae1551",
                "4295e5f475da817c",
                "9b1a9df574887748"
            ]
        ]
    },
    {
        "id": "f8c13405f7b94a1f",
        "type": "comment",
        "z": "426a5003775714f9",
        "name": "Selected robot state",
        "info": "",
        "x": 230,
        "y": 240,
        "wires": []
    },
    {
        "id": "9b1a9df574887748",
        "type": "function",
        "z": "426a5003775714f9",
        "name": "BT Tip Log",
        "func": "// \"bt\": {\n//             \"tip\": {\n//                 \"name\": \"???\",\n//                 \"message\": \"\",\n//                 \"status\": \"???\"\n//             },\n//             \"algae_farm_enable\": false,\n//             \"live_wp_enable\": false,\n//             \"gui_wp_enable\": false,\n//             \"current_wp\": {},\n//             \"current_plan\": {},\n//             \"last_heartbeat\": null\n//         },\n\nfunction make_tip_str(tip){\n    c = \"black\"\n    icon = \"\"\n    switch(tip.status){\n        case \"failure\":\n            c = \"red\"\n            icon = \"❌\"\n            break\n        case \"success\":\n            c = \"green\"\n            icon = \"✅\"\n            break\n        case \"running\":\n            c = \"blue\"\n            icon = \"⚙️\"\n            break\n    }\n    \n    tip_type = tip.name.slice(0,1)\n    tip_name = tip.name.slice(2)\n    \n    t = \"\"\n    if(tip.time > 10){\n        t = new Date(tip.time).toTimeString().slice(0,8)\n    }\n    \n    title = icon + \" <font color=\" + c + \">\" + tip_name\n    msg = \"<font color=\" + c +\">[\" + t + \"] \" + tip.message\n    \n    return [title, msg];\n}\n\n// dont do anything if the robot we got is not selected\nif(!(msg.gui.selected)){\n    return\n}\n\ncurrent_tip = msg.bt.tip;\n\n\n// get the current log, make sure its length matches the value \n// set in the gui and then put it back into global context\ntip_log_len = global.get(\"gui.bt_tip_log_len\") || 500\nglobal.set(\"gui.bt_tip_log_len\", tip_log_len)\ntips = msg.gui.bt_tip_log\n// too short\nwhile(tips.length < tip_log_len){\n    tips.push({\n        name:\"\",\n        message:\"\",\n        status:\"\",\n        time:\"\"\n    })\n}\n// too long\nif(tips.length > tip_log_len){\n    tips = tips.slice(0,tip_log_len)\n}\n\nlast_tip = tips[0]\nif(last_tip){\n    if (!(last_tip.name == current_tip.name && last_tip.status == current_tip.status)){\n        // something meaningful have changed, shift things around\n        for(let i=tips.length-1; i>0; i--){\n            tips[i] = tips[i-1]\n        }\n    }\n}\n// otherwise just update the top\ntips[0] = current_tip\ntips[0].time = Date.now()\n\n//finally update the log with the latest state of the log\nglobal.set(\"robot_states['\"+msg.base.name+\"'].gui.bt_tip_log\", tips)\n\nouts = []\nfor(let i=0; i<tips.length; i++){\n    r = make_tip_str(tips[i])\n    list_item = {\n        title: r[0],\n        description: r[1]\n    }\n    outs.push(list_item)\n}\n\nreturn {payload:outs};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 160,
        "wires": [
            [
                "226dba85351f6e9a"
            ]
        ]
    },
    {
        "id": "226dba85351f6e9a",
        "type": "ui_list",
        "z": "426a5003775714f9",
        "group": "81d4dedb195938c4",
        "name": "BT Log",
        "order": 10,
        "width": 9,
        "height": 13,
        "lineType": "three",
        "actionType": "none",
        "allowHTML": true,
        "outputs": 0,
        "topic": "",
        "x": 1000,
        "y": 160,
        "wires": []
    },
    {
        "id": "4b6e527791532f8d",
        "type": "link in",
        "z": "426a5003775714f9",
        "name": "toggle readouts",
        "links": [
            "cf8fbcc8cd92e83a"
        ],
        "x": 745,
        "y": 100,
        "wires": [
            [
                "226dba85351f6e9a",
                "7fb46ac2b53d8351",
                "0228e3204df7c215",
                "a89625b5c5189eb9",
                "aa2efb44c882b0a5",
                "b6b8855e1794d55b"
            ]
        ]
    },
    {
        "id": "d3d7f09e7710bb11",
        "type": "comment",
        "z": "426a5003775714f9",
        "name": "toggle readouts",
        "info": "",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "841cce01bafe1aca",
        "type": "mqtt out",
        "z": "426a5003775714f9",
        "name": "bt_cmd",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1301e8ab7fdd3e72",
        "x": 540,
        "y": 520,
        "wires": []
    },
    {
        "id": "db3b02194344e9c1",
        "type": "function",
        "z": "426a5003775714f9",
        "name": "prepare cmd",
        "func": "cmd_str = JSON.stringify(msg.payload)\nbtc = {\n        msg_type: 0, // is command\n        cmd_json:cmd_str\n}\n\nrobot_name = global.get(\"gui.selected_robot_name\")\nm = {\n    payload: btc,\n    topic: \"smarc/\"+robot_name+\"/bt_cmd/bt_cmd\"\n}\nreturn m",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 520,
        "wires": [
            [
                "841cce01bafe1aca"
            ]
        ]
    },
    {
        "id": "9f0ef523d4f95e85",
        "type": "link in",
        "z": "426a5003775714f9",
        "name": "Send cmd to BT",
        "links": [
            "26c19416550a8a88",
            "7f69d758a6740cf8",
            "88e6b90dbc529cf1",
            "fc19b6ee859abe64"
        ],
        "x": 285,
        "y": 520,
        "wires": [
            [
                "db3b02194344e9c1"
            ]
        ]
    },
    {
        "id": "b7549d505b4fd7ff",
        "type": "comment",
        "z": "426a5003775714f9",
        "name": "Send cmd to BT",
        "info": "",
        "x": 180,
        "y": 520,
        "wires": []
    },
    {
        "id": "3826fb0543b14095",
        "type": "comment",
        "z": "426a5003775714f9",
        "name": "Selected robot state",
        "info": "",
        "x": 170,
        "y": 600,
        "wires": []
    },
    {
        "id": "1ab37c56c331acd7",
        "type": "link in",
        "z": "426a5003775714f9",
        "name": "",
        "links": [
            "14a23ba06f41f8b0"
        ],
        "x": 285,
        "y": 600,
        "wires": [
            [
                "6461807c4a8aebcc"
            ]
        ]
    },
    {
        "id": "6461807c4a8aebcc",
        "type": "rbe",
        "z": "426a5003775714f9",
        "name": "bt_cmd changes",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "bt.bt_cmd",
        "topi": "topic",
        "x": 400,
        "y": 600,
        "wires": [
            [
                "76ae41334a8a646d"
            ]
        ]
    },
    {
        "id": "76ae41334a8a646d",
        "type": "ui_text",
        "z": "426a5003775714f9",
        "group": "81d4dedb195938c4",
        "order": 11,
        "width": 9,
        "height": 2,
        "name": "cmd result",
        "label": "Cmd FB",
        "format": "{{msg.bt.bt_cmd.result}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 600,
        "wires": []
    },
    {
        "id": "a7ab14ac74f53ff2",
        "type": "ui_list",
        "z": "762b3e4e742fe2ea",
        "group": "c68132315359e81c",
        "name": "track list",
        "order": 5,
        "width": 9,
        "height": 7,
        "lineType": "three",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 640,
        "y": 140,
        "wires": [
            [
                "fecf21f3b3c7d140"
            ]
        ]
    },
    {
        "id": "118b4f57e93fbfe8",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "list tracks",
        "func": "tracks = global.get(\"planning.tracks\") || {}\nglobal.set(\"planning.tracks\", tracks)\n\ndrawn_tracks = global.get(\"gui.drawn_track_names\") || new Set()\nglobal.set(\"gui.drawn_track_names\", drawn_tracks)\n\n\nif(!(tracks)){\n    return {payload:[{title:\"--NO TRACKS--\"}]}  \n} \nif(Object.keys(tracks).length < 1){\n    return {payload:[{title:\"--NO TRACKS--\"}]}     \n}\n\nlist_items = []\nfor(const track_name in tracks){\n    track = tracks[track_name]\n    c = \"black\"\n    if(track_name == global.get(\"gui.selected_track_name\")){\n        c = \"orange\"\n    }\n    \n    title = \"<font color=\" + c +\">\" + track.name\n    \n    if(track.recording){\n        duration_str = \"🔴 \" + parseInt(Date.now()/1000 - track.start) + \"s \"\n        title = duration_str + title\n    }\n    \n    if(drawn_tracks.has(track_name)){\n        title = \"🗺 ️\" + title\n    }\n    \n    if(track.locked){\n        title = \"🔒\" + title\n    }\n    \n    desc = \"\"\n    if(track.robot_name) desc += \"🤖:\"+track.robot_name\n    if(track.start && track.end){\n        duration = parseInt(track.end - track.start)\n        if(duration > 120) duration_str = parseInt(duration/60) + \"m\" + duration%60+\"s\"\n        else duration_str = duration + \"s\"\n        desc += \" ⏲️:\" + duration_str\n    }\n    \n    if(track.start){\n        date = new Date(track.start*1000).toDateString().slice(4,10)\n        desc += \" 📅:\" + date\n        \n        start_time = new Date(track.start*1000).toTimeString().slice(0,5)\n        desc += \" ▶️:\" + start_time\n    }\n    \n    if(track.end){\n        end_time = new Date(track.end*1000).toTimeString().slice(0,5)\n        desc += \" ⏹️:\" + end_time\n    }\n    \n    desc = \"<font color=\" + c +\" size=2>\" + desc\n    \n    list_item = {title:title, description:desc}\n    list_items.push(list_item)\n}\n\nreturn {payload:list_items}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 140,
        "wires": [
            [
                "a7ab14ac74f53ff2"
            ]
        ]
    },
    {
        "id": "aa55b377d9e3c710",
        "type": "link in",
        "z": "762b3e4e742fe2ea",
        "name": "v2_update_track_list",
        "links": [
            "fc9ace2ca04d62d0",
            "6bd1ad20f2e9a439",
            "86c7eb05460bf065",
            "929aca5a7f1add22",
            "65a3ebf59a366791",
            "f119f587c1568fd1",
            "537c7d11d1fbb54e",
            "08d4acd84084a6b0",
            "13c6cf9a3d5899e3"
        ],
        "x": 345,
        "y": 140,
        "wires": [
            [
                "118b4f57e93fbfe8",
                "261f0120f595c54a"
            ]
        ]
    },
    {
        "id": "ace61e12eb36f9ac",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track list",
        "info": "",
        "x": 240,
        "y": 140,
        "wires": []
    },
    {
        "id": "e34a76e75a627baf",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "new track",
        "group": "c68132315359e81c",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "New Track",
        "tooltip": "Create a new track",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-map",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 340,
        "wires": [
            [
                "55d7d011a4baeb26"
            ]
        ]
    },
    {
        "id": "55d7d011a4baeb26",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "new track",
        "func": "function new_track(){\n    now = Date.now()\n    t = new Date(now).toTimeString().slice(0,8)\n    return {\n        // name should be\n        // start time - robot_name - mission name\n        name:\"Track-\"+ t,\n        start: null,\n        end: null,\n        robot_name: null,\n        recording: false,\n        locked: false,\n        data: []\n    }\n}\n\ntrack = new_track()\ntracks = global.get(\"planning.tracks\")\ntracks[track.name] = track\nglobal.set(\"planning.tracks\", tracks)\nglobal.set(\"gui.selected_track_name\", track.name)\n\nreturn {payload:track, topic:\"new_track\"}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 340,
        "wires": [
            [
                "fc9ace2ca04d62d0"
            ]
        ]
    },
    {
        "id": "fc9ace2ca04d62d0",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "aa55b377d9e3c710",
            "a33b80c387b0a157"
        ],
        "x": 715,
        "y": 340,
        "wires": []
    },
    {
        "id": "fecf21f3b3c7d140",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "set selected track",
        "func": "title = msg.payload.title\nif(title == \"--NO TRACKS--\") return\ntrack_name = title.slice(title.indexOf(\">\")+1)\n\nglobal.set(\"gui.selected_track_name\", track_name)\n\nreturn {payload:track_name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 140,
        "wires": [
            [
                "1ede7c0d3d4c959f",
                "21abeedf185de74b",
                "26c16dadd62b9897",
                "08d4acd84084a6b0",
                "8ed7c0d75e2bcd8b"
            ]
        ]
    },
    {
        "id": "2e0f202672fc8484",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "delete track",
        "group": "c68132315359e81c",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Delete the selected track",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 380,
        "wires": [
            [
                "dddeae33e5d6dfc7"
            ]
        ]
    },
    {
        "id": "dddeae33e5d6dfc7",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "Prepare delete",
        "func": "name = global.get(\"gui.selected_track_name\")\nif(!name) return\nreturn {payload:\"Delete \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 380,
        "wires": [
            [
                "ac9399a2f42bad31"
            ]
        ]
    },
    {
        "id": "ac9399a2f42bad31",
        "type": "ui_toast",
        "z": "762b3e4e742fe2ea",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "DELETE",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "delete",
        "x": 790,
        "y": 380,
        "wires": [
            [
                "e0e9c0869b093741"
            ]
        ]
    },
    {
        "id": "e0e9c0869b093741",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "delete selected track",
        "func": "if(msg.payload == \"Cancel\") return\n\ntracks = global.get(\"planning.tracks\")\ntrack = tracks[global.get(\"gui.selected_track_name\")]\ndelete tracks[track.name]\ndrawn_tracks = global.get(\"gui.drawn_track_names\")\ndrawn_tracks.delete(track.name)\n\nglobal.set(\"planning.tracks\", tracks)\nglobal.set(\"gui.selected_track_name\", null)\nglobal.set(\"gui.drawn_track_names\", drawn_tracks)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 380,
        "wires": [
            [
                "6bd1ad20f2e9a439",
                "68b349fda17ba552"
            ]
        ]
    },
    {
        "id": "6bd1ad20f2e9a439",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "aa55b377d9e3c710",
            "a33b80c387b0a157"
        ],
        "x": 1185,
        "y": 420,
        "wires": []
    },
    {
        "id": "0c5d02e47337fd0f",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "rename track",
        "group": "c68132315359e81c",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Rename",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-pencil",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 420,
        "wires": [
            [
                "ad49d6d41670792b"
            ]
        ]
    },
    {
        "id": "14e2c02c22c00560",
        "type": "ui_toast",
        "z": "762b3e4e742fe2ea",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Rename",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "rename",
        "x": 800,
        "y": 420,
        "wires": [
            [
                "349e786b16fd2393"
            ]
        ]
    },
    {
        "id": "ad49d6d41670792b",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "Prepare rename",
        "func": "name = global.get(\"gui.selected_track_name\")\nif(!name) return\nrtn = global.get(\"gui.recording_track_name\")\nif(name == rtn) return\nreturn {payload:\"Rename \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 420,
        "wires": [
            [
                "14e2c02c22c00560"
            ]
        ]
    },
    {
        "id": "349e786b16fd2393",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "rename selected track",
        "func": "if(msg.payload == \"Cancel\") return\n\nnew_name = msg.payload\n\ntracks = global.get(\"planning.tracks\")\nif(new_name in Object.keys(tracks)) return\n\ntrack = tracks[global.get(\"gui.selected_track_name\")]\ndelete tracks[track.name]\n\n\ndrawn_tracks = global.get(\"gui.drawn_track_names\") || new Set()\nif(drawn_tracks.has(track.name)){\n    drawn_tracks.delete(track.name)\n    drawn_tracks.add(new_name)\n    global.set(\"gui.drawn_track_names\", drawn_tracks)\n}\n\ntrack.name = new_name\ntracks[new_name] = track\nglobal.set(\"planning.tracks\", tracks)\nglobal.set(\"gui.selected_track_name\", new_name)\n\n\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 420,
        "wires": [
            [
                "6bd1ad20f2e9a439",
                "68b349fda17ba552"
            ]
        ]
    },
    {
        "id": "157de1683ea10ec8",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track list",
        "info": "",
        "x": 1300,
        "y": 420,
        "wires": []
    },
    {
        "id": "209eec7c522fd2eb",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "start record",
        "group": "c68132315359e81c",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Record",
        "tooltip": "Start recording tracks",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-play",
        "payload": "start",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 660,
        "wires": [
            [
                "a4b2a57db4bf56ab"
            ]
        ]
    },
    {
        "id": "954063b4d99dcf08",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "pause record",
        "group": "c68132315359e81c",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Pause",
        "tooltip": "Stop recording into this track",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-pause",
        "payload": "pause",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 700,
        "wires": [
            [
                "a4b2a57db4bf56ab"
            ]
        ]
    },
    {
        "id": "a4b2a57db4bf56ab",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "setup recording",
        "func": "robot_name = global.get(\"gui.selected_robot_name\")\nif(!robot_name) return {}\n\n\ntracks = global.get(\"planning.tracks\")\nrecord = msg.payload == \"start\"\nstn = global.get(\"gui.selected_track_name\")\ntrack = tracks[stn]\nrobots = global.get(\"robot_states\")\nif(!robots){\n    track.end = Date.now()/1000\n    track.recording = false\n    track.data[track.data.length-1][1] = \"recording_stop\"\n}\n\nmessage = null\nif(record){\n    if(track.start == null) track.start = Date.now()/1000\n    track.recording = true\n    track.robot_name = robot_name\n    message = \"recording_start\"\n}else{\n    if(track.recording) track.end = Date.now()/1000\n    track.recording = false\n    track.data[track.data.length-1][1] = \"recording_pause\"\n}\n\nglobal.set(\"planning.tracks\", tracks)\n\nreturn {payload:message, topic:\"message\"}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "929aca5a7f1add22",
                "d9224b1c67ea81be"
            ]
        ]
    },
    {
        "id": "929aca5a7f1add22",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "aa55b377d9e3c710",
            "a33b80c387b0a157"
        ],
        "x": 1095,
        "y": 680,
        "wires": []
    },
    {
        "id": "5490c3b160813758",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track list",
        "info": "",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "f60980f36a17939c",
        "type": "link in",
        "z": "762b3e4e742fe2ea",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 345,
        "y": 100,
        "wires": [
            [
                "118b4f57e93fbfe8",
                "261f0120f595c54a"
            ]
        ]
    },
    {
        "id": "e04aaf2f26884308",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "connected",
        "info": "",
        "x": 260,
        "y": 100,
        "wires": []
    },
    {
        "id": "fbc47dbe6eac43e0",
        "type": "inject",
        "z": "762b3e4e742fe2ea",
        "name": "0.2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "timestamp",
        "payload": "",
        "payloadType": "date",
        "x": 670,
        "y": 720,
        "wires": [
            [
                "d9224b1c67ea81be"
            ]
        ]
    },
    {
        "id": "d9224b1c67ea81be",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "record",
        "func": "tracks = global.get(\"planning.tracks\")\nrobots = global.get(\"robot_states\")\n\nthere_is_recording = false\n\nfunction round(value, precision) {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\nfunction make_record(robot){\n    b = robot.base\n    t = robot.bt\n    wp = robot.bt.current_wp\n    // this is in the order of global.get(\"planning.track_columns\")\n    return [\n        parseInt(robot.last_update),\n        \"\",\n        round(b.lat, 6),\n        round(b.lon, 6),\n        round(b.utm_x, 2),\n        round(b.utm_y, 2),\n        b.utm_z,\n        round(b.heading, 2),\n        round(b.roll, 2),\n        round(b.pitch, 2),\n        round(b.depth, 2),\n        round(b.altitude, 2),\n        round(b.vbs, 1),\n        round(b.lcg, 1),\n        round(b.tcg, 1),\n        round(b.t1),\n        round(b.t2),\n        round(b.batt_v, 1),\n        round(b.batt_percent),\n        round(b.gps_lat, 6),\n        round(b.gps_lon, 6),\n        t.tip.name,\n        t.tip.status[0],\n        t.current_plan.name,\n        wp.name,\n        round(wp.lat, 6),\n        round(wp.lon, 6),\n        round(wp.pose.pose.position.x, 2),\n        round(wp.pose.pose.position.y, 2),\n        wp.goal_tolerance,\n        wp.z_control_mode,\n        wp.travel_altitude,\n        wp.travel_depth,\n        wp.speed_control_mode,\n        wp.travel_rpm,\n        wp.travel_speed,\n        round(wp.arrival_heading, 1),\n        wp.use_heading\n    ]\n}\n\n\nfor(const track_name in tracks){\n    track = tracks[track_name]\n    if(!track.recording) continue\n        \n    robot = robots[track.robot_name]\n    if(!robot){\n        track.end = Date.now()/1000\n        track.recording = false\n        track.data[track.data.length-1][1] = \"recording_stop\"\n        continue\n    }\n    // basically everything except the GUI stuff\n    r = make_record(robot)\n    \n    if(track.data.length > 0){\n        prev_point = track.data[track.data.length-1]\n        if(prev_point && robot.gui.is_old){\n            // we have already recorded this, dont record more...\n            if(prev_point[1] == \"Lost connection\") continue\n            // record the loss\n            r[1] = \"Lost connection\"\n        }\n    }\n    \n    \n    // a message over-writes any auto annotations\n    if(msg.payload && msg.topic==\"message\"){\n        if(msg.payload != \"Cancel\") r[1] = msg.payload\n    }\n    \n    track.data.push(r)\n    there_is_recording = true\n    \n}\n\n// only send a signal if there is a recording happening\nif(there_is_recording) return {}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 720,
        "wires": [
            [
                "32f032a079da2b8b"
            ]
        ]
    },
    {
        "id": "caa33cbade3ba61f",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "draw",
        "group": "c68132315359e81c",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Draw",
        "tooltip": "Draw the selected track on to the map",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-map-pin",
        "payload": "draw",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 500,
        "wires": [
            [
                "d967fd59a67c5964"
            ]
        ]
    },
    {
        "id": "18c3b311b095d3d1",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "delete",
        "group": "c68132315359e81c",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Remove",
        "tooltip": "Remove the selected track from the map",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-eraser",
        "payload": "delete",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "d967fd59a67c5964"
            ]
        ]
    },
    {
        "id": "d967fd59a67c5964",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "setup drawing",
        "func": "if(msg.payload == \"clear\"){\n    global.set(\"gui.drawn_track_names\", new Set())\n    return {}\n}\n\ntracks = global.get(\"planning.tracks\")\ndraw = msg.payload == \"draw\"\nstn = global.get(\"gui.selected_track_name\")\nif(!stn) return\n\ndrawn_track_names = global.get(\"gui.drawn_track_names\") || new Set()\n\nif(draw) drawn_track_names.add(stn)\nelse drawn_track_names.delete(stn)\n\nglobal.set(\"gui.drawn_track_names\", drawn_track_names)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 540,
        "wires": [
            [
                "7183dad7e54adf30",
                "65a3ebf59a366791"
            ]
        ]
    },
    {
        "id": "9f8eee76414fbbcb",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update_markers_on_map",
        "info": "",
        "x": 930,
        "y": 560,
        "wires": []
    },
    {
        "id": "7183dad7e54adf30",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 795,
        "y": 560,
        "wires": []
    },
    {
        "id": "bb955ee1ba9596b7",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "take note",
        "group": "c68132315359e81c",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Take note",
        "tooltip": "",
        "color": "",
        "bgcolor": "Green",
        "className": "",
        "icon": "fa-indent",
        "payload": "Add text note to track",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 740,
        "wires": [
            [
                "0118382aede21a6f"
            ]
        ]
    },
    {
        "id": "0118382aede21a6f",
        "type": "ui_toast",
        "z": "762b3e4e742fe2ea",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Save",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "message",
        "name": "take note",
        "x": 660,
        "y": 760,
        "wires": [
            [
                "d9224b1c67ea81be"
            ]
        ]
    },
    {
        "id": "32f032a079da2b8b",
        "type": "delay",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 960,
        "y": 720,
        "wires": [
            [
                "929aca5a7f1add22"
            ]
        ]
    },
    {
        "id": "ad6bef6b59d5b64e",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1090,
        "y": 120,
        "wires": []
    },
    {
        "id": "1ede7c0d3d4c959f",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 955,
        "y": 120,
        "wires": []
    },
    {
        "id": "65a3ebf59a366791",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "aa55b377d9e3c710",
            "a33b80c387b0a157"
        ],
        "x": 795,
        "y": 520,
        "wires": []
    },
    {
        "id": "cdd0a8393576d317",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track list",
        "info": "",
        "x": 900,
        "y": 520,
        "wires": []
    },
    {
        "id": "e5ac6b09404db951",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1330,
        "y": 380,
        "wires": []
    },
    {
        "id": "68b349fda17ba552",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 1185,
        "y": 380,
        "wires": []
    },
    {
        "id": "e63f954877c23e90",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "clear",
        "group": "c68132315359e81c",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "Remove all tracks from the map",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-trash",
        "payload": "clear",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 580,
        "wires": [
            [
                "d967fd59a67c5964"
            ]
        ]
    },
    {
        "id": "ee5006d920cf630c",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "toggle",
        "func": "function r(del, rename, start,stop, note, lock,){\n    return [\n        {enabled:del},\n        {enabled:rename},\n        {enabled:start},\n        {enabled:stop},\n        {enabled:note},\n        {enabled:lock},\n        {enabled:!lock}\n        ]\n}\n\ndel = false\nrename = false\nstart = false\nstop = false\nnote = false\nlock = true\n\nstn = global.get(\"gui.selected_track_name\")\n// no selected track, disable all buttons\nif(!stn) return r(del, rename, start, stop, note, lock)\n\ntracks = global.get(\"planning.tracks\")\ntrack = tracks[stn]\nif(!track) return r(del, rename, start, stop, note, lock)\n\ndel = true\nrename = true\nstart = true\n\n\n\n\nif(track.recording){\n    stop = true\n    start = false\n    note = true\n}\n\nif(track.locked){\n    stop = false\n    start = false\n    note = false\n    del = false\n    lock = false\n}\n\nsrn = global.get(\"gui.selected_robot_name\")\nrobots = global.get(\"robot_states\")\nrob = robots[srn]\n\nif(!rob){\n    start = false\n    return r(del, rename, start, stop, note, lock)  \n} \n\nif(rob.gui.is_old) start = false\nreturn r(del, rename, start, stop, note, lock)\n\n",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 720,
        "wires": [
            [
                "2e0f202672fc8484"
            ],
            [
                "0c5d02e47337fd0f",
                "caa33cbade3ba61f",
                "18c3b311b095d3d1"
            ],
            [
                "209eec7c522fd2eb"
            ],
            [
                "954063b4d99dcf08"
            ],
            [
                "bb955ee1ba9596b7"
            ],
            [
                "67da98e0637e999a"
            ],
            [
                "a3e6cc0949a85815"
            ]
        ]
    },
    {
        "id": "3a21e43de6a62c77",
        "type": "link in",
        "z": "762b3e4e742fe2ea",
        "name": "v2_toggle track buttons",
        "links": [
            "21abeedf185de74b",
            "261f0120f595c54a",
            "e6538c33549e61c2"
        ],
        "x": 125,
        "y": 720,
        "wires": [
            [
                "ee5006d920cf630c"
            ]
        ]
    },
    {
        "id": "21abeedf185de74b",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "3a21e43de6a62c77"
        ],
        "x": 955,
        "y": 160,
        "wires": []
    },
    {
        "id": "81ed7210e4b93ba3",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "toggle track buttons",
        "info": "",
        "x": 170,
        "y": 640,
        "wires": []
    },
    {
        "id": "d8a72f7b6be64173",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "toggle track buttons",
        "info": "",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "261f0120f595c54a",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "3a21e43de6a62c77"
        ],
        "x": 455,
        "y": 100,
        "wires": []
    },
    {
        "id": "dda502f87a4b3d54",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "toggle track buttons",
        "info": "",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "26c16dadd62b9897",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "4f502f4b76819f09",
            "3e398cf74e82408a",
            "8d7df9bbd47ed65e",
            "33411c9df353d561"
        ],
        "x": 955,
        "y": 80,
        "wires": []
    },
    {
        "id": "2069a07a37f5b9d3",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track props",
        "info": "",
        "x": 1070,
        "y": 80,
        "wires": []
    },
    {
        "id": "67da98e0637e999a",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "lock track",
        "group": "c68132315359e81c",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Prevent all modifications to this track",
        "color": "",
        "bgcolor": "Orange",
        "className": "",
        "icon": "fa-lock",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 860,
        "wires": [
            [
                "a3c1fda745935795"
            ]
        ]
    },
    {
        "id": "a3c1fda745935795",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "lock track",
        "func": "name = global.get(\"gui.selected_track_name\")\nif(!name) return\n\ntracks = global.get(\"planning.tracks\")\ntrack = tracks[name]\n\nif(!track) return\n\ntrack.locked = msg.payload\n\nglobal.set(\"planning.tracks\", tracks)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 880,
        "wires": [
            [
                "f119f587c1568fd1"
            ]
        ]
    },
    {
        "id": "f119f587c1568fd1",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "aa55b377d9e3c710",
            "a33b80c387b0a157"
        ],
        "x": 725,
        "y": 880,
        "wires": []
    },
    {
        "id": "5ce868f46f16558a",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track list",
        "info": "",
        "x": 840,
        "y": 880,
        "wires": []
    },
    {
        "id": "a3e6cc0949a85815",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "unlock track",
        "group": "c68132315359e81c",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Enable modifications again",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "fa-unlock",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 900,
        "wires": [
            [
                "a3c1fda745935795"
            ]
        ]
    },
    {
        "id": "08d4acd84084a6b0",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "aa55b377d9e3c710",
            "a33b80c387b0a157"
        ],
        "x": 955,
        "y": 200,
        "wires": []
    },
    {
        "id": "d6d20fa9629f763f",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track list",
        "info": "",
        "x": 1060,
        "y": 200,
        "wires": []
    },
    {
        "id": "8ed7c0d75e2bcd8b",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "a4c594419f3e083e"
        ],
        "x": 955,
        "y": 240,
        "wires": []
    },
    {
        "id": "cd35339d3b306726",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "download track",
        "info": "",
        "x": 1060,
        "y": 240,
        "wires": []
    },
    {
        "id": "387c554f7787d209",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track list",
        "info": "",
        "x": 820,
        "y": 340,
        "wires": []
    },
    {
        "id": "e6d7690341ea78c3",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "Track request from BT",
        "info": "",
        "x": 240,
        "y": 980,
        "wires": []
    },
    {
        "id": "a1d858b7e77d78d3",
        "type": "ui_button",
        "z": "762b3e4e742fe2ea",
        "name": "request track list",
        "group": "c68132315359e81c",
        "order": 14,
        "width": 9,
        "height": 1,
        "passthru": false,
        "label": "Get vehicle tracks",
        "tooltip": "Get the list of tracks that the BT has recorded on the vehicle",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"request_track_list\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 980,
        "wires": [
            [
                "7f69d758a6740cf8"
            ]
        ]
    },
    {
        "id": "b0f7e0de2801677e",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "populate list",
        "func": "if(!msg.bt.bt_cmd){\n    node.status(\"No bt cmd\")\n    return\n}\ntrack_list = msg.bt.bt_cmd.track_list\nif(!track_list){\n    node.status(\"No track list\")\n    return\n}\n\nmenu = [\"Download to GUI\", \"Delete on vehicle\", \"Size\"]\n\nlist_items = []\nfor(const track_item of track_list){\n    track_name = track_item.filename\n    track_size = track_item.filesize\n    item = {title:track_name,\n            description:\"Size:\"+track_size.toFixed(1)+\"KB\",\n            menu:menu\n    }\n    list_items.push(item)\n}\nreturn {payload:list_items, enabled:true}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1040,
        "wires": [
            [
                "a387ed2a277c6f48"
            ]
        ]
    },
    {
        "id": "a387ed2a277c6f48",
        "type": "ui_list",
        "z": "762b3e4e742fe2ea",
        "group": "c68132315359e81c",
        "name": "robot track list",
        "order": 15,
        "width": 9,
        "height": 8,
        "lineType": "three",
        "actionType": "menu",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 800,
        "y": 1040,
        "wires": [
            [
                "60d200eb3a8d7914"
            ]
        ]
    },
    {
        "id": "c1227af15b11fc91",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "Selected robot state",
        "info": "",
        "x": 210,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d221a7eb9bcfe9e9",
        "type": "link in",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "links": [
            "14a23ba06f41f8b0"
        ],
        "x": 325,
        "y": 1080,
        "wires": [
            [
                "a662fe3eac1bb22b"
            ]
        ]
    },
    {
        "id": "a662fe3eac1bb22b",
        "type": "rbe",
        "z": "762b3e4e742fe2ea",
        "name": "bt_cmd changes",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "bt.bt_cmd",
        "topi": "topic",
        "x": 440,
        "y": 1080,
        "wires": [
            [
                "b0f7e0de2801677e",
                "13ead5a5a5fee391"
            ]
        ]
    },
    {
        "id": "60d200eb3a8d7914",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "handle menu option",
        "func": "p = msg.payload\nif(p.selected == \"Download to GUI\"){\n    return {payload:{cmd:\"download_track\", arg:p.title}}\n}\nif(p.selected == \"Delete on vehicle\"){\n    return {payload:{cmd:\"delete_track\", arg:p.title}}\n}\nif(p.selected == \"Size\"){\n    return {payload:{cmd:\"size_track\", arg:p.title}}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1040,
        "wires": [
            [
                "7f69d758a6740cf8"
            ]
        ]
    },
    {
        "id": "4f7e9433a7f60c73",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "Send cmd to BT",
        "info": "",
        "x": 1020,
        "y": 960,
        "wires": []
    },
    {
        "id": "7f69d758a6740cf8",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "9f0ef523d4f95e85"
        ],
        "x": 1125,
        "y": 980,
        "wires": []
    },
    {
        "id": "13ead5a5a5fee391",
        "type": "function",
        "z": "762b3e4e742fe2ea",
        "name": "receive track",
        "func": "if(!msg.bt.bt_cmd){\n    node.status(\"No bt cmd\")\n    return\n}\ntrack_str = msg.bt.bt_cmd.track\nif(!track_str) return\ni = JSON.parse(track_str)\n\ntracks = global.get(\"planning.tracks\")\ntracks[i.name] = i\nglobal.set(\"planning.tracks\", tracks)\nnode.status(\"Added \"+ i.name + \" to tracks\")\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1100,
        "wires": [
            [
                "13c6cf9a3d5899e3"
            ]
        ]
    },
    {
        "id": "13c6cf9a3d5899e3",
        "type": "link out",
        "z": "762b3e4e742fe2ea",
        "name": "",
        "mode": "link",
        "links": [
            "aa55b377d9e3c710",
            "a33b80c387b0a157"
        ],
        "x": 735,
        "y": 1100,
        "wires": []
    },
    {
        "id": "0281fa520b250ae9",
        "type": "comment",
        "z": "762b3e4e742fe2ea",
        "name": "update track list",
        "info": "",
        "x": 850,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5772a09d13a58ed4",
        "type": "mqtt in",
        "z": "fc0b4b3d97bcee3e",
        "name": "owntracks",
        "topic": "owntracks/user/+",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "6e012b6eaac45f91"
            ]
        ]
    },
    {
        "id": "6e012b6eaac45f91",
        "type": "function",
        "z": "fc0b4b3d97bcee3e",
        "name": "update markers",
        "func": "const [owntracks, user, username] = msg.topic.split('/');\nif(!msg.payload.lat){\n    node.status(username+\" had bad lat/lon\")\n    return\n}\n\nmarkers = global.get(\"gui.markers\") || {}\n\nmarker = markers[username]\nif(!marker){\n    marker = {\n        label:username,\n        tooltip:username,\n        name:username,\n        lat:msg.payload.lat,\n        lon:msg.payload.lon,\n        icon:\"fa-user\",\n        layer:\"markers\",\n        last_update : msg.payload.tst}\n}\nmarker.lat = msg.payload.lat\nmarker.lon = msg.payload.lon\nmarker.last_update = msg.payload.tst\n\nmarkers[marker.name] = marker\nglobal.set(\"gui.markers\", markers)\n\nreturn {}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 80,
        "wires": [
            [
                "2daf4eea9d6d2fdd"
            ]
        ]
    },
    {
        "id": "3b4eaa403572e8a1",
        "type": "inject",
        "z": "fc0b4b3d97bcee3e",
        "name": "5s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "2daf4eea9d6d2fdd"
            ]
        ]
    },
    {
        "id": "2daf4eea9d6d2fdd",
        "type": "function",
        "z": "fc0b4b3d97bcee3e",
        "name": "update marker list and map",
        "func": "markers = global.get(\"gui.markers\")\nif(!markers) return\n\nselected_marker_name = global.get(\"gui.selected_marker_name\")\n\nnow = Date.now()/1000\n\nlist_items = []\nfor(const marker_name in markers){\n    marker = markers[marker_name]\n    if(!marker.lat || !marker.lon) continue\n    \n    tdiff = parseInt(now - marker.last_update)\n    \n    if(tdiff < 600){\n        marker.iconColor = global.get(\"gui.colors.active\")\n        marker.label = marker.name\n    }else{\n        marker.iconColor = global.get(\"gui.colors.old\")\n        marker.label = null\n    }\n    \n    marker_selected = marker.name == selected_marker_name\n    if(marker_selected){\n        marker.iconColor = global.get(\"gui.colors.selected\")\n    }\n    \n    node.send([{payload:marker}, null])\n    \n    title = \"<font color=\" + marker.iconColor +\">\" + marker.name\n    if(tdiff > 600) description = \"Last update >10m ago\"\n    else description = \"Last updated \"+tdiff+\"s ago\"\n    node.status(tdiff)\n    list_item = {\n        title: title,\n        description: description\n    }\n    list_items.push(list_item)\n}\n\nreturn [null, {payload:list_items}]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "8463bb10ce548162"
            ],
            [
                "659b3d8b5cdaa0b1"
            ]
        ]
    },
    {
        "id": "8463bb10ce548162",
        "type": "link out",
        "z": "fc0b4b3d97bcee3e",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 745,
        "y": 120,
        "wires": []
    },
    {
        "id": "e2c3f5bf122135fa",
        "type": "comment",
        "z": "fc0b4b3d97bcee3e",
        "name": "map",
        "info": "",
        "x": 820,
        "y": 120,
        "wires": []
    },
    {
        "id": "659b3d8b5cdaa0b1",
        "type": "ui_list",
        "z": "fc0b4b3d97bcee3e",
        "group": "11c21897a7ad9fb5",
        "name": "markers",
        "order": 1,
        "width": 0,
        "height": 0,
        "lineType": "three",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 780,
        "y": 220,
        "wires": [
            [
                "ce0d97b7e58b0dca"
            ]
        ]
    },
    {
        "id": "ce0d97b7e58b0dca",
        "type": "function",
        "z": "fc0b4b3d97bcee3e",
        "name": "set selected marker",
        "func": "title = msg.payload.title\nif(title == \"--NO MARKERS--\") return\nmarker_name = title.slice(title.indexOf(\">\")+1)\n\nglobal.set(\"gui.selected_marker_name\", marker_name)\n\nreturn {payload:marker_name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 160,
        "wires": [
            [
                "2daf4eea9d6d2fdd"
            ]
        ]
    },
    {
        "id": "5d528234543fa099",
        "type": "chartjs-line",
        "z": "270280acb5c31a68",
        "name": "",
        "path": "linechart",
        "charttitle": "",
        "xaxis": "",
        "yaxis": "",
        "x": 630,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "423f6ed2e934cc69",
        "type": "ui_iframe",
        "z": "270280acb5c31a68",
        "group": "f5cc24c294e35249",
        "name": "Linechart iframe",
        "order": 2,
        "width": 12,
        "height": 10,
        "url": "https://nodered.blue-robots.com/linechart",
        "origin": "*",
        "scale": "70",
        "x": 200,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "bce6903b48681af8",
        "type": "function",
        "z": "270280acb5c31a68",
        "name": "List track properties",
        "func": "tracks = global.get(\"planning.tracks\")\nif(!tracks) return\n\nstn = global.get(\"gui.selected_track_name\")\nif(!stn) return\n\ntrack = tracks[stn]\nif(!track) return\n\nif(track.data.length < 1) return\n\nfirst = track.data[0]\nlast = track.data[track.data.length-1]\n\nt0 = first[0]\ntf = last[0]\n\n// title - title of the item,\n// description - description of the item. Optional if line type is Single-line or action type is menu,\n// menu - list of menu items (optional),\n// icon - URL of icon (optional),\n// icon_name - font icon name (optional).\n// icon_unicode - alternative to icon name - uses text characters (optional).\n// isChecked \n\ncharted_keys = global.get(\"gui.charted_keys\") || new Set()\nkeys = global.get(\"planning.track_columns\")\nitems = []\nfor(const key_i in keys){\n    sample = first[key_i]\n    key = keys[key_i]\n    if (typeof sample === 'string' || sample instanceof String) continue\n    item = {\n        title:key,\n        isChecked: charted_keys.has(key)\n    }\n    items.push(item)\n}\n\n\nreturn [\n    {payload:items},\n    {ui_control:{max:tf-t0}}\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 360,
        "wires": [
            [
                "ba78240ddf404417"
            ],
            [
                "1e180f06c010b56b",
                "ea646bd6adf066e9"
            ]
        ]
    },
    {
        "id": "9dfbf97a209e373e",
        "type": "link in",
        "z": "270280acb5c31a68",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 325,
        "y": 340,
        "wires": [
            [
                "bce6903b48681af8",
                "86ad73493ada97b3"
            ]
        ]
    },
    {
        "id": "d9b71af3191cbaa3",
        "type": "comment",
        "z": "270280acb5c31a68",
        "name": "connected",
        "info": "",
        "x": 240,
        "y": 340,
        "wires": []
    },
    {
        "id": "ba78240ddf404417",
        "type": "ui_list",
        "z": "270280acb5c31a68",
        "group": "f5cc24c294e35249",
        "name": "Track props",
        "order": 1,
        "width": 6,
        "height": 10,
        "lineType": "one",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 670,
        "y": 320,
        "wires": [
            [
                "b0923ddeb92a02b5"
            ]
        ]
    },
    {
        "id": "b0923ddeb92a02b5",
        "type": "function",
        "z": "270280acb5c31a68",
        "name": "update chart keys",
        "func": "charted_keys = global.get(\"gui.charted_keys\") || new Set()\n\nif(msg.payload.isChecked){\n    charted_keys.add(msg.payload.title)\n}else{\n    charted_keys.delete(msg.payload.title)\n}\n\nglobal.set(\"gui.charted_keys\", charted_keys)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 320,
        "wires": [
            [
                "45d0a43c92615412"
            ]
        ]
    },
    {
        "id": "681c858a5b55c679",
        "type": "comment",
        "z": "270280acb5c31a68",
        "name": "update track props",
        "info": "",
        "x": 210,
        "y": 380,
        "wires": []
    },
    {
        "id": "33411c9df353d561",
        "type": "link in",
        "z": "270280acb5c31a68",
        "name": "update track props",
        "links": [
            "a03b339bae7b75a4",
            "d887d48ee913340e",
            "26c16dadd62b9897"
        ],
        "x": 325,
        "y": 380,
        "wires": [
            [
                "bce6903b48681af8",
                "86ad73493ada97b3"
            ]
        ]
    },
    {
        "id": "1e180f06c010b56b",
        "type": "ui_slider",
        "z": "270280acb5c31a68",
        "name": "",
        "label": "Time start",
        "tooltip": "",
        "group": "f5cc24c294e35249",
        "order": 4,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "start",
        "topicType": "str",
        "min": 0,
        "max": 10,
        "step": "1",
        "className": "",
        "x": 660,
        "y": 360,
        "wires": [
            [
                "4afe44dc3c0d32c1"
            ]
        ]
    },
    {
        "id": "ea646bd6adf066e9",
        "type": "ui_slider",
        "z": "270280acb5c31a68",
        "name": "",
        "label": "Duration",
        "tooltip": "",
        "group": "f5cc24c294e35249",
        "order": 6,
        "width": 12,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "duration",
        "topicType": "str",
        "min": "10",
        "max": "60",
        "step": "1",
        "className": "",
        "x": 660,
        "y": 420,
        "wires": [
            [
                "ae1b765d8f3ab639"
            ]
        ]
    },
    {
        "id": "d2a0ce4e6f8176cb",
        "type": "ui_text",
        "z": "270280acb5c31a68",
        "group": "f5cc24c294e35249",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "new tab chart",
        "label": "",
        "format": "<a target=\"_blank\" href=\"https://nodered.blue-robots.com/linechart\">Chart in a new tab</a> ",
        "layout": "col-center",
        "className": "",
        "x": 200,
        "y": 120,
        "wires": []
    },
    {
        "id": "86ad73493ada97b3",
        "type": "function",
        "z": "270280acb5c31a68",
        "name": "update chart",
        "func": "// {\n//     \"channel\": \"TP01\",\n//     \"color\": \"Red\",\n//     \"dataset\": [\n//         {\n//             \"x\": \"01/02/2019 10:00\",\n//             \"y\": 10\n//         }\n//     ]\n// }\n\nfunction randomChoice(arr) {\n    return arr[Math.floor(arr.length * Math.random())];\n}\n\ncharted_keys = global.get(\"gui.charted_keys\") || new Set()\n\n\nif(charted_keys.size == 0){\n    return {payload:[{\n        channel:\"Select a property to chart!\",\n        color: \"\",\n        dataset:[]\n    }]}\n} \n\ntracks = global.get(\"planning.tracks\")\ntrack_columns = global.get(\"planning.track_columns\")\nstn = global.get(\"gui.selected_track_name\")\ntrack = tracks[stn]\nif(!track){\n    node.status(\"No track\")\n    return\n}\n\ngraphs = []\ncolors = [\"Red\", \"Blue\", \"Green\", \"Cyan\", \"Black\", \"Purple\"]\n\nvar i = 0\nfor(const key of charted_keys){\n    graph = {\n        channel: key,\n        color: colors[i],\n        dataset: []\n    }\n    i = (i+1)%colors.length\n    \n    t0 = null\n    for(const point of track.data){\n        t = point[0]\n        if(!t0) t0 = t\n        t -= t0\n        t = parseInt(t)\n        \n        start_t = global.get(\"gui.chart_start\") || 0\n        if(t < start_t) continue\n        \n        duration = global.get(\"gui.chart_duration\") || 10\n        if(t > start_t + duration) break\n        \n        key_i = track_columns.indexOf(key)\n        v = point[key_i]\n        graph.dataset.push({x:t, y:v})\n    }\n    graphs.push(graph)\n}\nnode.status(\"Graphing\")\nreturn {payload:graphs}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "5d528234543fa099"
            ]
        ]
    },
    {
        "id": "4afe44dc3c0d32c1",
        "type": "change",
        "z": "270280acb5c31a68",
        "name": "set chart start",
        "rules": [
            {
                "t": "set",
                "p": "gui.chart_start",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 360,
        "wires": [
            [
                "45d0a43c92615412"
            ]
        ]
    },
    {
        "id": "ae1b765d8f3ab639",
        "type": "change",
        "z": "270280acb5c31a68",
        "name": "set chart duration",
        "rules": [
            {
                "t": "set",
                "p": "gui.chart_duration",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 400,
        "wires": [
            [
                "45d0a43c92615412"
            ]
        ]
    },
    {
        "id": "67919ac507aa017b",
        "type": "link in",
        "z": "270280acb5c31a68",
        "name": "update chart",
        "links": [
            "45d0a43c92615412",
            "94b161dbcba0e10f"
        ],
        "x": 305,
        "y": 520,
        "wires": [
            [
                "86ad73493ada97b3"
            ]
        ]
    },
    {
        "id": "7ed13d962626a570",
        "type": "comment",
        "z": "270280acb5c31a68",
        "name": "update chart",
        "info": "",
        "x": 210,
        "y": 520,
        "wires": []
    },
    {
        "id": "e5d52e3e11effa7c",
        "type": "comment",
        "z": "270280acb5c31a68",
        "name": "update chart",
        "info": "",
        "x": 1090,
        "y": 360,
        "wires": []
    },
    {
        "id": "45d0a43c92615412",
        "type": "link out",
        "z": "270280acb5c31a68",
        "name": "",
        "mode": "link",
        "links": [
            "67919ac507aa017b",
            "e7ddbfbe591019ba"
        ],
        "x": 995,
        "y": 360,
        "wires": []
    },
    {
        "id": "0afe486691512af4",
        "type": "ui_switch",
        "z": "270280acb5c31a68",
        "name": "auto update",
        "label": "Auto-refresh",
        "tooltip": "Update the chart every 5 seconds",
        "group": "f5cc24c294e35249",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "e3f1ae78c29e4ede"
            ]
        ]
    },
    {
        "id": "e19743bde86f130d",
        "type": "comment",
        "z": "270280acb5c31a68",
        "name": "update chart",
        "info": "",
        "x": 890,
        "y": 200,
        "wires": []
    },
    {
        "id": "94b161dbcba0e10f",
        "type": "link out",
        "z": "270280acb5c31a68",
        "name": "",
        "mode": "link",
        "links": [
            "67919ac507aa017b",
            "e7ddbfbe591019ba"
        ],
        "x": 795,
        "y": 200,
        "wires": []
    },
    {
        "id": "8824751fcdc7e758",
        "type": "delay",
        "z": "270280acb5c31a68",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 160,
        "wires": [
            [
                "1f47dfeabe6e1df8"
            ]
        ]
    },
    {
        "id": "04b916253eb47251",
        "type": "link in",
        "z": "270280acb5c31a68",
        "name": "update chart props",
        "links": [
            "b97fe942d08f74a0"
        ],
        "x": 325,
        "y": 300,
        "wires": [
            [
                "bce6903b48681af8"
            ]
        ]
    },
    {
        "id": "eb1d4d975308da81",
        "type": "comment",
        "z": "270280acb5c31a68",
        "name": "update chart props",
        "info": "",
        "x": 210,
        "y": 300,
        "wires": []
    },
    {
        "id": "b97fe942d08f74a0",
        "type": "link out",
        "z": "270280acb5c31a68",
        "name": "",
        "mode": "link",
        "links": [
            "04b916253eb47251"
        ],
        "x": 795,
        "y": 160,
        "wires": []
    },
    {
        "id": "0e1a5310ee72a50c",
        "type": "comment",
        "z": "270280acb5c31a68",
        "name": "update chart props",
        "info": "",
        "x": 910,
        "y": 160,
        "wires": []
    },
    {
        "id": "3ceddb013e4269bf",
        "type": "function",
        "z": "270280acb5c31a68",
        "name": "set start to last",
        "func": "tracks = global.get(\"planning.tracks\")\nif(!tracks) return\nstn = global.get(\"gui.selected_track_name\")\nif(!stn) return\ntrack = tracks[stn]\nif(track.data.length < 1) return\n\nfirst = track.data[0]\nlast = track.data[track.data.length-1]\n\nt0 = parseInt(first.last_update/1000)\ntf = parseInt(last.last_update/1000)\n\n\nduration = global.get(\"gui.chart_duration\") || 10\n\nreturn {payload: tf-t0 - duration}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 260,
        "wires": [
            [
                "1e180f06c010b56b"
            ]
        ]
    },
    {
        "id": "e3f1ae78c29e4ede",
        "type": "change",
        "z": "270280acb5c31a68",
        "name": "set gui chart_auto_update",
        "rules": [
            {
                "t": "set",
                "p": "gui.chart_auto_update",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 200,
        "wires": [
            [
                "1f47dfeabe6e1df8"
            ]
        ]
    },
    {
        "id": "1f47dfeabe6e1df8",
        "type": "switch",
        "z": "270280acb5c31a68",
        "name": "if auto update",
        "property": "gui.chart_auto_update",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "neq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 200,
        "wires": [
            [
                "b97fe942d08f74a0",
                "94b161dbcba0e10f",
                "3ceddb013e4269bf",
                "8824751fcdc7e758"
            ],
            []
        ]
    },
    {
        "id": "e541e1e014a3f70b",
        "type": "function",
        "z": "2e13c73254d13882",
        "name": "prepare plan",
        "func": "name = global.get(\"gui.selected_plan_name\")\nif(!name) return\nplans = global.get(\"planning.plans\")\nplan = plans[name]\nif(!plan) return\n\nlines = []\n\nfor(const wp_name of plan.waypoint_order){\n    wp = plan.waypoints[wp_name]\n    line = [\n        wp.name,\n        wp.lat,\n        wp.lon,\n        wp.depth,\n        wp.rpm,\n        wp.speed,\n        wp.use_rpm,\n        wp.tolerance,\n        wp.arrival_heading,\n        wp.use_heading]\n    lines.push(line)\n}\n\nfp = \"/data/static/\"+ plan.name+ \".csv\"\nsave_out = {payload:lines, filename:fp}\nmsg.filename = fp\nreturn [save_out, msg, null]\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 360,
        "wires": [
            [
                "393192e8bb3f5f3f"
            ],
            [
                "6cf5798f518ec33c"
            ],
            [
                "4c6ca4a3460c233a"
            ]
        ]
    },
    {
        "id": "c1acdb4788e23a2d",
        "type": "file",
        "z": "2e13c73254d13882",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 660,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "41a30cbdcaa40b6a",
        "type": "http in",
        "z": "2e13c73254d13882",
        "name": "",
        "url": "/static/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "e541e1e014a3f70b"
            ]
        ]
    },
    {
        "id": "a37fad622dd70215",
        "type": "http response",
        "z": "2e13c73254d13882",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 400,
        "wires": []
    },
    {
        "id": "364dd932664bf737",
        "type": "file in",
        "z": "2e13c73254d13882",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 700,
        "y": 360,
        "wires": [
            [
                "a37fad622dd70215"
            ]
        ]
    },
    {
        "id": "dba2d6b363cfbe9b",
        "type": "function",
        "z": "2e13c73254d13882",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 420,
        "wires": [
            [
                "a37fad622dd70215"
            ]
        ]
    },
    {
        "id": "522e103d00f7c8ca",
        "type": "catch",
        "z": "2e13c73254d13882",
        "name": "",
        "scope": [
            "393192e8bb3f5f3f",
            "6cf5798f518ec33c",
            "4c6ca4a3460c233a",
            "dba2d6b363cfbe9b",
            "364dd932664bf737",
            "c1acdb4788e23a2d",
            "a37fad622dd70215",
            "e541e1e014a3f70b",
            "41a30cbdcaa40b6a"
        ],
        "uncaught": false,
        "x": 550,
        "y": 440,
        "wires": [
            [
                "dba2d6b363cfbe9b",
                "183553c260f1042d"
            ]
        ]
    },
    {
        "id": "183553c260f1042d",
        "type": "debug",
        "z": "2e13c73254d13882",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 460,
        "wires": []
    },
    {
        "id": "6cf5798f518ec33c",
        "type": "delay",
        "z": "2e13c73254d13882",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 360,
        "wires": [
            [
                "364dd932664bf737"
            ]
        ]
    },
    {
        "id": "f307a8b9423604cc",
        "type": "comment",
        "z": "2e13c73254d13882",
        "name": "saves a file, then downloads it",
        "info": "",
        "x": 260,
        "y": 300,
        "wires": []
    },
    {
        "id": "4c6ca4a3460c233a",
        "type": "delay",
        "z": "2e13c73254d13882",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 400,
        "wires": [
            [
                "a37fad622dd70215"
            ]
        ]
    },
    {
        "id": "393192e8bb3f5f3f",
        "type": "csv",
        "z": "2e13c73254d13882",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "name, lat, lon, depth, rpm, speed, use_rpm, tolerance, arrival_heading, use_heading",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 530,
        "y": 320,
        "wires": [
            [
                "c1acdb4788e23a2d"
            ]
        ]
    },
    {
        "id": "a668601ee5c984ca",
        "type": "http in",
        "z": "2e13c73254d13882",
        "name": "",
        "url": "/simple",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 680,
        "wires": [
            [
                "a1ff7d10a959aceb"
            ]
        ]
    },
    {
        "id": "a1ff7d10a959aceb",
        "type": "template",
        "z": "2e13c73254d13882",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\">\n    <input type=\"file\" name=\"myFile\" />\n    <input type=\"submit\" value=\"Submit\">\n</form>",
        "output": "str",
        "x": 510,
        "y": 680,
        "wires": [
            [
                "47d54da13992c448"
            ]
        ]
    },
    {
        "id": "47d54da13992c448",
        "type": "http response",
        "z": "2e13c73254d13882",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 680,
        "wires": []
    },
    {
        "id": "cd943f5596bcd914",
        "type": "http response",
        "z": "2e13c73254d13882",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 720,
        "wires": []
    },
    {
        "id": "9cf4822e913cc3d8",
        "type": "http in",
        "z": "2e13c73254d13882",
        "name": "",
        "url": "/upload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "fb510415e470fe4f"
            ]
        ]
    },
    {
        "id": "3c028681cb8a5ec1",
        "type": "template",
        "z": "2e13c73254d13882",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p></p>{{name}} uploaded</p>\n<form action=\"/simple\" method=\"GET\" enctype=\"multipart/form-data\">\n    <input type=\"submit\" value=\"Again\">\n</form>",
        "output": "str",
        "x": 510,
        "y": 720,
        "wires": [
            [
                "cd943f5596bcd914"
            ]
        ]
    },
    {
        "id": "fb510415e470fe4f",
        "type": "function",
        "z": "2e13c73254d13882",
        "name": "toBase64",
        "func": "msg.name = msg.req.files[0].originalname;\n\nif (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.req.files[0].buffer.toString('base64')}\">`;\n} else {\n    msg.payload = msg.req.files[0].buffer.toString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 720,
        "wires": [
            [
                "3c028681cb8a5ec1",
                "c31258a36f429048"
            ]
        ]
    },
    {
        "id": "c31258a36f429048",
        "type": "csv",
        "z": "2e13c73254d13882",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "name, lat, lon, depth, rpm, speed, use_rpm, tolerance, arrival_heading, use_heading",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 510,
        "y": 760,
        "wires": [
            [
                "e0f322dc3b753e86"
            ]
        ]
    },
    {
        "id": "6f8f0407ea457b52",
        "type": "comment",
        "z": "2e13c73254d13882",
        "name": "Plan upload",
        "info": "",
        "x": 90,
        "y": 580,
        "wires": []
    },
    {
        "id": "eec00c41a09c75ec",
        "type": "ui_iframe",
        "z": "2e13c73254d13882",
        "group": "58bfc9cc19b0c4cd",
        "name": "upload plan",
        "order": 4,
        "width": 6,
        "height": 2,
        "url": "https://nodered.blue-robots.com/simple",
        "origin": "*",
        "scale": 100,
        "x": 650,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "493265f2fecd14e5",
        "type": "ui_text",
        "z": "2e13c73254d13882",
        "group": "58bfc9cc19b0c4cd",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "upload plan txt",
        "label": "",
        "format": "Upload plan",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 660,
        "y": 880,
        "wires": []
    },
    {
        "id": "3a33c5377001053c",
        "type": "link out",
        "z": "2e13c73254d13882",
        "name": "",
        "mode": "link",
        "links": [
            "45ba332d5bed9ca9"
        ],
        "x": 755,
        "y": 760,
        "wires": []
    },
    {
        "id": "ba10639f570a8b3b",
        "type": "comment",
        "z": "2e13c73254d13882",
        "name": "create new plan",
        "info": "",
        "x": 860,
        "y": 760,
        "wires": []
    },
    {
        "id": "01d7a69db734435a",
        "type": "ui_text",
        "z": "2e13c73254d13882",
        "group": "58bfc9cc19b0c4cd",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "download plan",
        "label": "",
        "format": "<a target=\"_blank\" href=\"https://nodered.blue-robots.com/static/{{msg.payload}}.csv\">Download plan</a> ",
        "layout": "col-center",
        "className": "",
        "x": 440,
        "y": 240,
        "wires": []
    },
    {
        "id": "13f6bd6c9d81a0c8",
        "type": "comment",
        "z": "2e13c73254d13882",
        "name": "Plan download",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "fd8f7e829592b528",
        "type": "link in",
        "z": "2e13c73254d13882",
        "name": "Download plan",
        "links": [
            "ecb32f1e69ab1244",
            "2768b84356fdabdf"
        ],
        "x": 315,
        "y": 240,
        "wires": [
            [
                "01d7a69db734435a"
            ]
        ]
    },
    {
        "id": "15e5d7d7cafe94f3",
        "type": "comment",
        "z": "2e13c73254d13882",
        "name": "Download plan",
        "info": "",
        "x": 210,
        "y": 240,
        "wires": []
    },
    {
        "id": "721e8d283bc2c07f",
        "type": "ui_text",
        "z": "2e13c73254d13882",
        "group": "58bfc9cc19b0c4cd",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "download track",
        "label": "",
        "format": "<a target=\"_blank\" href=\"https://nodered.blue-robots.com/static/{{msg.payload}}.json\">Download track</a> ",
        "layout": "col-center",
        "className": "",
        "x": 380,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a4c594419f3e083e",
        "type": "link in",
        "z": "2e13c73254d13882",
        "name": "download track",
        "links": [
            "8ed7c0d75e2bcd8b"
        ],
        "x": 265,
        "y": 1420,
        "wires": [
            [
                "721e8d283bc2c07f"
            ]
        ]
    },
    {
        "id": "bbf250ddc139d8c2",
        "type": "comment",
        "z": "2e13c73254d13882",
        "name": "download track",
        "info": "",
        "x": 320,
        "y": 1380,
        "wires": []
    },
    {
        "id": "8bd8df7d765146a7",
        "type": "function",
        "z": "2e13c73254d13882",
        "name": "prepare track",
        "func": "name = global.get(\"gui.selected_track_name\")\nif(!name) return\ntracks = global.get(\"planning.tracks\")\ntrack = tracks[name]\nif(!track) return\n\ntrack.columns = global.get(\"planning.track_columns\")\n\nstr = JSON.stringify(track)\nfp = \"/data/static/\"+track.name+\".json\"\n\n\nsave_out = {payload:str, filename:fp}\nmsg.filename = fp\nreturn [save_out, msg, null]\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1540,
        "wires": [
            [
                "b63b6e1f8450e64b"
            ],
            [
                "c0cd1e5b4e73db18"
            ],
            [
                "24b8abf675325c44"
            ]
        ]
    },
    {
        "id": "b63b6e1f8450e64b",
        "type": "file",
        "z": "2e13c73254d13882",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 500,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "55e9c0324c5357a4",
        "type": "http in",
        "z": "2e13c73254d13882",
        "name": "",
        "url": "/static/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1540,
        "wires": [
            [
                "8bd8df7d765146a7"
            ]
        ]
    },
    {
        "id": "535c370d20467ae1",
        "type": "http response",
        "z": "2e13c73254d13882",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c729e083d5310c8d",
        "type": "file in",
        "z": "2e13c73254d13882",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 660,
        "y": 1540,
        "wires": [
            [
                "535c370d20467ae1"
            ]
        ]
    },
    {
        "id": "745d7943eb94d390",
        "type": "function",
        "z": "2e13c73254d13882",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1600,
        "wires": [
            [
                "535c370d20467ae1"
            ]
        ]
    },
    {
        "id": "0bca9fddbbcf377f",
        "type": "catch",
        "z": "2e13c73254d13882",
        "name": "",
        "scope": [
            "8bd8df7d765146a7",
            "b63b6e1f8450e64b",
            "55e9c0324c5357a4",
            "535c370d20467ae1",
            "c729e083d5310c8d"
        ],
        "uncaught": false,
        "x": 510,
        "y": 1620,
        "wires": [
            [
                "745d7943eb94d390"
            ]
        ]
    },
    {
        "id": "c0cd1e5b4e73db18",
        "type": "delay",
        "z": "2e13c73254d13882",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 510,
        "y": 1540,
        "wires": [
            [
                "c729e083d5310c8d"
            ]
        ]
    },
    {
        "id": "5cd9994ceca66356",
        "type": "comment",
        "z": "2e13c73254d13882",
        "name": "saves a file, then downloads it as track.json",
        "info": "",
        "x": 240,
        "y": 1480,
        "wires": []
    },
    {
        "id": "24b8abf675325c44",
        "type": "delay",
        "z": "2e13c73254d13882",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 510,
        "y": 1580,
        "wires": [
            [
                "535c370d20467ae1"
            ]
        ]
    },
    {
        "id": "578de67d0270953a",
        "type": "comment",
        "z": "2e13c73254d13882",
        "name": "Track download",
        "info": "",
        "x": 120,
        "y": 1340,
        "wires": []
    },
    {
        "id": "e0f322dc3b753e86",
        "type": "change",
        "z": "2e13c73254d13882",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "upload",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 760,
        "wires": [
            [
                "3a33c5377001053c"
            ]
        ]
    },
    {
        "id": "333d9c794d31a2b3",
        "type": "ui_iframe",
        "z": "2e13c73254d13882",
        "group": "58bfc9cc19b0c4cd",
        "name": "upload plan local",
        "order": 7,
        "width": 6,
        "height": 2,
        "url": "http://localhost:1880/simple",
        "origin": "*",
        "scale": 100,
        "x": 670,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "9f8d79fbca1c1056",
        "type": "ui_text",
        "z": "2e13c73254d13882",
        "group": "58bfc9cc19b0c4cd",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "upload plan txt local",
        "label": "",
        "format": "Upload plan to local",
        "layout": "col-center",
        "className": "",
        "x": 680,
        "y": 980,
        "wires": []
    },
    {
        "id": "d87950903589a65c",
        "type": "inject",
        "z": "2e13c73254d13882",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 940,
        "wires": [
            [
                "52216b3dadbe1f72"
            ]
        ]
    },
    {
        "id": "2076ff5c9f6b6736",
        "type": "function",
        "z": "2e13c73254d13882",
        "name": "",
        "func": "if(msg.payload.publicIPv4 == \"20.240.40.232\"){\n    node.status(\"Cloud\")\n}else{\n    node.status(\"Local\")\n    return {ui_control:{URL:\"localhost:1880/simple\"}}    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "52216b3dadbe1f72",
        "type": "ip",
        "z": "2e13c73254d13882",
        "name": "ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": false,
        "publicIPv4": true,
        "publicIPv6": false,
        "x": 290,
        "y": 940,
        "wires": [
            [
                "2076ff5c9f6b6736"
            ]
        ]
    },
    {
        "id": "794a330739bf6415",
        "type": "config",
        "z": "d138c3c5017744fe",
        "name": "gui",
        "properties": [
            {
                "p": "gui",
                "pt": "global",
                "to": "{\"selected_robot_name\":null,\"selected_waypoint_name\":null,\"selected_plan_name\":null,\"selected_track_name\":null,\"drawn_track_names\":null,\"draw_tracks\":false,\"follow_selected_vehicle\":false,\"bt_tip_log_len\":50,\"planning_mode\":false,\"drawn_on_map\":null,\"colors\":{\"selected\":\"orange\",\"active\":\"#1BBFFF\",\"old\":\"gray\"},\"markers\":null}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 410,
        "y": 120,
        "wires": []
    },
    {
        "id": "914623a1306998c8",
        "type": "function",
        "z": "d138c3c5017744fe",
        "name": "flatten object",
        "func": "// $roots keeps previous parent properties as they will be added as a prefix for each prop.\n// $sep is just a preference if you want to seperate nested paths other than dot.\nconst flatten = (obj, roots = [], sep = '.') => Object\n  // find props of given object\n  .keys(obj)\n  // return an object by iterating props\n  .reduce((memo, prop) => Object.assign(\n    // create a new object\n    {},\n    // include previously returned object\n    memo,\n    Object.prototype.toString.call(obj[prop]) === '[object Object]'\n      // keep working if value is an object\n      ? flatten(obj[prop], roots.concat([prop]), sep)\n      // include current prop and value and prefix prop with the roots\n      : {[roots.concat([prop]).join(sep)]: obj[prop]}\n  ), {})\n  \n\nreturn flatten(msg.payload)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "cbecc164a6f3bfa8",
        "type": "config",
        "z": "d138c3c5017744fe",
        "name": "track_columns",
        "properties": [
            {
                "p": "planning.track_columns",
                "pt": "global",
                "to": "[\"timestamp\",\"annotation\",\"lat\",\"lon\",\"utm_x\",\"utm_y\",\"utm_z\",\"heading\",\"roll\",\"pitch\",\"depth\",\"altitude\",\"vbs\",\"lcg\",\"tcg\",\"t1\",\"t2\",\"batt_v\",\"batt_percent\",\"gps_lat\",\"gps_lon\",\"bt_tip_name\",\"bt_tip_status\",\"plan_name\",\"wp_name\",\"wp_lat\",\"wp_lon\",\"wp_utm_x\",\"wp_utm_y\",\"wp_goal_tolerance\",\"wp_z_control_mode\",\"wp_travel_altitude\",\"wp_travel_depth\",\"wp_speed_control_mode\",\"wp_travel_rpm\",\"wp_travel_speed\",\"arrival_heading\",\"use_heading\"]",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 440,
        "y": 180,
        "wires": []
    },
    {
        "id": "971e249694708d56",
        "type": "link in",
        "z": "e102b211ecdda64d",
        "name": "helptext",
        "links": [
            "246b0fccde35e02f",
            "aa9b1423b2c9c90a"
        ],
        "x": 615,
        "y": 180,
        "wires": [
            [
                "d66f43f04cfac200"
            ]
        ]
    },
    {
        "id": "40c1fac09245925e",
        "type": "comment",
        "z": "e102b211ecdda64d",
        "name": "helptext",
        "info": "",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "d66f43f04cfac200",
        "type": "function",
        "z": "e102b211ecdda64d",
        "name": "helptext",
        "func": "if(!msg.payload) return;\n\nconst MAXLINES = 500;\nlet data = flow.get(\"data\") || [];\nif(msg.topic==\"clear\") {\n    data = [];\n} else {\n    now = new Date(Date.now())\n    t = now.toTimeString().slice(0,8)\n    t2 = now.toDateString().slice(4)\n    line = \"\"\n    desc = \"<font color=gray>\"+\"[\"+t2 +\" \"+ t +\"]\"\n    switch(msg.topic){\n        case \"connection\":\n            switch(msg.payload){\n                case \"connect\":\n                case \"change\":\n                    line += \"(\"+msg.socketip+\")\"\n            }\n            line = \"<font color=green> !\" + line\n            break\n        default:\n            line += \"<font color=black>\"+ msg.payload\n    }\n    \n    data.unshift({title:line, description:desc});\n    data = data.slice(0, MAXLINES);\n}\nflow.set(\"data\", data);\n\nreturn {payload:data}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 220,
        "wires": [
            [
                "097b5b37e2d4e68d"
            ]
        ]
    },
    {
        "id": "6f065b3c39bc8951",
        "type": "ui_button",
        "z": "e102b211ecdda64d",
        "name": "clear",
        "group": "ba1fb12713836940",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Clears the help log",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "clear",
        "topicType": "str",
        "x": 580,
        "y": 220,
        "wires": [
            [
                "d66f43f04cfac200"
            ]
        ]
    },
    {
        "id": "69eb7b75c9d27e29",
        "type": "ui_ui_control",
        "z": "e102b211ecdda64d",
        "name": "",
        "events": "connect",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "d6e2053ff904030a",
                "b42206afd56ee3cb"
            ]
        ]
    },
    {
        "id": "d6e2053ff904030a",
        "type": "change",
        "z": "e102b211ecdda64d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "connection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 140,
        "wires": [
            [
                "d66f43f04cfac200"
            ]
        ]
    },
    {
        "id": "b42206afd56ee3cb",
        "type": "debug",
        "z": "e102b211ecdda64d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 100,
        "wires": []
    },
    {
        "id": "097b5b37e2d4e68d",
        "type": "ui_list",
        "z": "e102b211ecdda64d",
        "group": "ba1fb12713836940",
        "name": "helptexts",
        "order": 3,
        "width": 5,
        "height": 4,
        "lineType": "three",
        "actionType": "none",
        "allowHTML": true,
        "outputs": 0,
        "topic": "",
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "ef40ab3bfc108bad",
        "type": "ui_text_input",
        "z": "e102b211ecdda64d",
        "name": "usertext",
        "label": "Log something?",
        "tooltip": "Say something?",
        "group": "ba1fb12713836940",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "user",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "d66f43f04cfac200",
                "47cf11daf73968a8"
            ]
        ]
    },
    {
        "id": "f7426c131692f635",
        "type": "change",
        "z": "e102b211ecdda64d",
        "name": "Clear Value",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "null",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 320,
        "wires": [
            [
                "ef40ab3bfc108bad"
            ]
        ]
    },
    {
        "id": "47cf11daf73968a8",
        "type": "delay",
        "z": "e102b211ecdda64d",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 320,
        "wires": [
            [
                "f7426c131692f635"
            ]
        ]
    },
    {
        "id": "6ef8c28119bc83ac",
        "type": "ui_button",
        "z": "e102b211ecdda64d",
        "name": "ping",
        "group": "ba1fb12713836940",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Get attention",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "fa-volume-up",
        "payload": "I need an adult in node red please",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "ee5983dd640f1da9",
                "9bcd0c6fb56a55be",
                "7434ef4e3e1006f0"
            ]
        ]
    },
    {
        "id": "ddbb028838fe7ad7",
        "type": "ui_switch",
        "z": "e102b211ecdda64d",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "ba1fb12713836940",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 280,
        "y": 220,
        "wires": [
            [
                "a8b9281ba48ca3b0"
            ]
        ]
    },
    {
        "id": "a8b9281ba48ca3b0",
        "type": "change",
        "z": "e102b211ecdda64d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 220,
        "wires": [
            [
                "6f065b3c39bc8951"
            ]
        ]
    },
    {
        "id": "ba0a716853336d47",
        "type": "inject",
        "z": "e102b211ecdda64d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "ddbb028838fe7ad7"
            ]
        ]
    },
    {
        "id": "2ab9f6c78c894f37",
        "type": "ui_audio",
        "z": "e102b211ecdda64d",
        "name": "",
        "group": "ba1fb12713836940",
        "voice": "urn:moz-tts:speechd:English%20(Great%20Britain)?en",
        "always": true,
        "x": 640,
        "y": 460,
        "wires": []
    },
    {
        "id": "ee5983dd640f1da9",
        "type": "delay",
        "z": "e102b211ecdda64d",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 460,
        "wires": [
            [
                "2ab9f6c78c894f37"
            ]
        ]
    },
    {
        "id": "9bcd0c6fb56a55be",
        "type": "change",
        "z": "e102b211ecdda64d",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 540,
        "wires": [
            [
                "6ef8c28119bc83ac",
                "f4013692367a2b9c"
            ]
        ]
    },
    {
        "id": "f4013692367a2b9c",
        "type": "delay",
        "z": "e102b211ecdda64d",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 540,
        "wires": [
            [
                "fff74ff5274eb663"
            ]
        ]
    },
    {
        "id": "fff74ff5274eb663",
        "type": "change",
        "z": "e102b211ecdda64d",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 540,
        "wires": [
            [
                "6ef8c28119bc83ac"
            ]
        ]
    },
    {
        "id": "aa9b1423b2c9c90a",
        "type": "link out",
        "z": "e102b211ecdda64d",
        "name": "",
        "mode": "link",
        "links": [
            "971e249694708d56"
        ],
        "x": 565,
        "y": 420,
        "wires": []
    },
    {
        "id": "1aa70596ebda9101",
        "type": "comment",
        "z": "e102b211ecdda64d",
        "name": "helptext",
        "info": "",
        "x": 640,
        "y": 420,
        "wires": []
    },
    {
        "id": "7434ef4e3e1006f0",
        "type": "change",
        "z": "e102b211ecdda64d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 420,
        "wires": [
            [
                "aa9b1423b2c9c90a"
            ]
        ]
    }
]